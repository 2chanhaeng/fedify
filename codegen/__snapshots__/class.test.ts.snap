export const snapshot = {};

snapshot[`generateClasses() 1`] = `
"// deno-lint-ignore-file ban-unused-ignore
// @ts-ignore TS7016
import jsonld from \\"jsonld\\";
import { getLogger } from \\"@logtape/logtape\\";
import { LanguageTag, parseLanguageTag }
    from \\"@phensley/language-tag\\";
import { decode as decodeMultibase, encode as encodeMultibase }
    from \\"multibase\\";import { type DocumentLoader, fetchDocumentLoader, type RemoteDocument }
    from \\"../runtime/docloader.ts\\";
import {
    exportSpki,
    exportMultibaseKey,
    importSpki,
    importMultibaseKey,
  } from \\"../runtime/key.ts\\";
import { LanguageString } from \\"../runtime/langstr.ts\\";


/** Describes an object of any kind. The Object type serves as the base type for
 * most of the other kinds of objects defined in the Activity Vocabulary,
 * including other Core types such as {@link Activity},
 * {@link IntransitiveActivity}, {@link Collection} and
 * {@link OrderedCollection}.
 * 
 */
export class Object {

    readonly #documentLoader?: DocumentLoader;
    readonly #contextLoader?: DocumentLoader;
    readonly id: URL | null;

    protected get _documentLoader(): DocumentLoader | undefined {
      return this.#documentLoader;
    }

    protected get _contextLoader(): DocumentLoader | undefined {
      return this.#contextLoader;
    }
    
    /**
     * The type URI of {@link Object}: \`https://www.w3.org/ns/activitystreams#Object\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Object\\");
    }
  #_49BipA5dq9eoH8LX8xdsVumveTca: (Object | Link | PropertyValue | URL)[] = [];
#_42CGqJ94zgQ3ZBbfHwD8Hrr2L5Py: (Application | Group | Organization | Person | Service | URL)[] = [];
#_3ocC3VVi88cEd5sPWL8djkZsvTN6: (Object | URL)[] = [];
#_4HuuRSdSrXq8Jj2J9gcdYfoCzeuz: ((string | LanguageString))[] = [];
#_3mhZzGXSpQ431mBSz2kvych22v4e: (Object | Link | URL)[] = [];
#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav: ((string | LanguageString))[] = [];
#_219RwDanjScTv5tYCjwGZVCM7KZ9: (Temporal.Instant)[] = [];
#_86xFhmgBapoMvYqjbjRuDPayTrS: (Object | Link | URL)[] = [];
#_33CjRLy5ujtsUrwRSCrsggvGdKuR: (Image | URL)[] = [];
#_3dXrUdkARxwyJLtJcYi1AJ92H41U: (Image | URL)[] = [];
#_3fpbDrvZgf3Kq1a5V9aByFn8kx3s: (Object | Link | URL)[] = [];
#_31k5MUZJsnsPNg8dQQJieWaXTFnR: (Object | Link | URL)[] = [];
#_gCVTegXxWWCw6wWRxa1QF65zusg: (Link | Object | URL)[] = [];
#_5e258TDXtuhaFRPZiGoDfEpjdMr: (Temporal.Instant)[] = [];
#_7UpwM3JWcXhADcscukEehBorf6k: (Collection | URL)[] = [];
#_2w3Jmue4up8iVDUA51WZqomEF438: (Temporal.Instant)[] = [];
#_4LqirZspQbFWWQEbFcXAxm7tTDN1: ((string | LanguageString))[] = [];
#_5chuqj6s95p5gg2sk1HntGfarRf: (Object | Link | URL)[] = [];
#_385aB7ySixcf5Un6z3VsWmThgCzQ: (Temporal.Instant)[] = [];
#_2oPEH9MQ3aj8JVwyYuWkqoVwV865: ((URL | Link))[] = [];
#_3hFbw7DTpHhq3cvVhkY8njhcsXbd: (Object | URL)[] = [];
#_aLZupjwL8XB7tzdLgCMXdjZ6qej: (Object | URL)[] = [];
#_42a1SvBs24QSLzKcfjCyNTjW5a1g: (Object | URL)[] = [];
#_3qvegKUB8YLgTXRpEf8E6JZSkz2H: (Object | URL)[] = [];
#_3BLrzmscsjHCw8TF5BHRW9WkPnX8: (string)[] = [];
#_3bNvLMBN1bCJETiTihM3wvi1B2JX: (Temporal.Duration)[] = [];
#_u8gdcDTtChQ4tbSQMXc4cYWyum7: (boolean)[] = [];
#_42rPnotok1ivQ2RNCKNbeFJgx8b8: (DataIntegrityProof | URL)[] = [];

  /**
   * Constructs a new instance of Object with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  
    this.#documentLoader = documentLoader;
    this.#contextLoader = contextLoader;
    if (values.id == null || values.id instanceof URL) {
      this.id = values.id ?? null;
    } else {
      throw new TypeError(\\"The id must be a URL.\\");
    }
    
        if (\\"attachments\\" in values &&             values.attachments != null) {
      
          if (Array.isArray(values.attachments) &&
              values.attachments.every(v => v instanceof Object || v instanceof Link || v instanceof PropertyValue || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_49BipA5dq9eoH8LX8xdsVumveTca = values.attachments;
          } else {
            throw new TypeError(
              \\"The attachments must be an array of type \\" +
              \\"Object | Link | PropertyValue | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"attribution\\" in values &&             values.attribution != null) {
          if (values.attribution instanceof Application || values.attribution instanceof Group || values.attribution instanceof Organization || values.attribution instanceof Person || values.attribution instanceof Service || values.attribution instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_42CGqJ94zgQ3ZBbfHwD8Hrr2L5Py = [values.attribution];
          } else {
            throw new TypeError(
              \\"The attribution must be of type \\" +
              \\"Application | Group | Organization | Person | Service | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"attributions\\" in values &&             values.attributions != null) {
      
          if (\\"attribution\\" in values &&
              values.attribution != null) {
            throw new TypeError(
              \\"Cannot initialize both attribution and \\" +
                \\"attributions at the same time.\\",
            );
          }
        
          if (Array.isArray(values.attributions) &&
              values.attributions.every(v => v instanceof Application || v instanceof Group || v instanceof Organization || v instanceof Person || v instanceof Service || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_42CGqJ94zgQ3ZBbfHwD8Hrr2L5Py = values.attributions;
          } else {
            throw new TypeError(
              \\"The attributions must be an array of type \\" +
              \\"Application | Group | Organization | Person | Service | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"audience\\" in values &&             values.audience != null) {
          if (values.audience instanceof Object || values.audience instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_3ocC3VVi88cEd5sPWL8djkZsvTN6 = [values.audience];
          } else {
            throw new TypeError(
              \\"The audience must be of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"audiences\\" in values &&             values.audiences != null) {
      
          if (\\"audience\\" in values &&
              values.audience != null) {
            throw new TypeError(
              \\"Cannot initialize both audience and \\" +
                \\"audiences at the same time.\\",
            );
          }
        
          if (Array.isArray(values.audiences) &&
              values.audiences.every(v => v instanceof Object || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_3ocC3VVi88cEd5sPWL8djkZsvTN6 = values.audiences;
          } else {
            throw new TypeError(
              \\"The audiences must be an array of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"content\\" in values &&             values.content != null) {
          if (typeof values.content === \\"string\\" || values.content instanceof LanguageString) {
            // @ts-ignore: type is checked above.
            this.#_4HuuRSdSrXq8Jj2J9gcdYfoCzeuz = [values.content];
          } else {
            throw new TypeError(
              \\"The content must be of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      
        if (\\"contents\\" in values &&             values.contents != null) {
      
          if (\\"content\\" in values &&
              values.content != null) {
            throw new TypeError(
              \\"Cannot initialize both content and \\" +
                \\"contents at the same time.\\",
            );
          }
        
          if (Array.isArray(values.contents) &&
              values.contents.every(v => typeof v === \\"string\\" || v instanceof LanguageString)) {
            // @ts-ignore: type is checked above.
            this.#_4HuuRSdSrXq8Jj2J9gcdYfoCzeuz = values.contents;
          } else {
            throw new TypeError(
              \\"The contents must be an array of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      
        if (\\"contexts\\" in values &&             values.contexts != null) {
      
          if (Array.isArray(values.contexts) &&
              values.contexts.every(v => v instanceof Object || v instanceof Link || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_3mhZzGXSpQ431mBSz2kvych22v4e = values.contexts;
          } else {
            throw new TypeError(
              \\"The contexts must be an array of type \\" +
              \\"Object | Link | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"name\\" in values &&             values.name != null) {
          if (typeof values.name === \\"string\\" || values.name instanceof LanguageString) {
            // @ts-ignore: type is checked above.
            this.#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav = [values.name];
          } else {
            throw new TypeError(
              \\"The name must be of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      
        if (\\"names\\" in values &&             values.names != null) {
      
          if (\\"name\\" in values &&
              values.name != null) {
            throw new TypeError(
              \\"Cannot initialize both name and \\" +
                \\"names at the same time.\\",
            );
          }
        
          if (Array.isArray(values.names) &&
              values.names.every(v => typeof v === \\"string\\" || v instanceof LanguageString)) {
            // @ts-ignore: type is checked above.
            this.#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav = values.names;
          } else {
            throw new TypeError(
              \\"The names must be an array of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      
        if (\\"endTime\\" in values &&             values.endTime != null) {
          if (values.endTime instanceof Temporal.Instant) {
            // @ts-ignore: type is checked above.
            this.#_219RwDanjScTv5tYCjwGZVCM7KZ9 = [values.endTime];
          } else {
            throw new TypeError(
              \\"The endTime must be of type \\" +
              \\"Temporal.Instant\\" + \\".\\",
            );
          }
        }
      
        if (\\"generators\\" in values &&             values.generators != null) {
      
          if (Array.isArray(values.generators) &&
              values.generators.every(v => v instanceof Object || v instanceof Link || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_86xFhmgBapoMvYqjbjRuDPayTrS = values.generators;
          } else {
            throw new TypeError(
              \\"The generators must be an array of type \\" +
              \\"Object | Link | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"icon\\" in values &&             values.icon != null) {
          if (values.icon instanceof Image || values.icon instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_33CjRLy5ujtsUrwRSCrsggvGdKuR = [values.icon];
          } else {
            throw new TypeError(
              \\"The icon must be of type \\" +
              \\"Image | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"icons\\" in values &&             values.icons != null) {
      
          if (\\"icon\\" in values &&
              values.icon != null) {
            throw new TypeError(
              \\"Cannot initialize both icon and \\" +
                \\"icons at the same time.\\",
            );
          }
        
          if (Array.isArray(values.icons) &&
              values.icons.every(v => v instanceof Image || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_33CjRLy5ujtsUrwRSCrsggvGdKuR = values.icons;
          } else {
            throw new TypeError(
              \\"The icons must be an array of type \\" +
              \\"Image | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"image\\" in values &&             values.image != null) {
          if (values.image instanceof Image || values.image instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_3dXrUdkARxwyJLtJcYi1AJ92H41U = [values.image];
          } else {
            throw new TypeError(
              \\"The image must be of type \\" +
              \\"Image | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"images\\" in values &&             values.images != null) {
      
          if (\\"image\\" in values &&
              values.image != null) {
            throw new TypeError(
              \\"Cannot initialize both image and \\" +
                \\"images at the same time.\\",
            );
          }
        
          if (Array.isArray(values.images) &&
              values.images.every(v => v instanceof Image || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_3dXrUdkARxwyJLtJcYi1AJ92H41U = values.images;
          } else {
            throw new TypeError(
              \\"The images must be an array of type \\" +
              \\"Image | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"replyTarget\\" in values &&             values.replyTarget != null) {
          if (values.replyTarget instanceof Object || values.replyTarget instanceof Link || values.replyTarget instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_3fpbDrvZgf3Kq1a5V9aByFn8kx3s = [values.replyTarget];
          } else {
            throw new TypeError(
              \\"The replyTarget must be of type \\" +
              \\"Object | Link | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"replyTargets\\" in values &&             values.replyTargets != null) {
      
          if (\\"replyTarget\\" in values &&
              values.replyTarget != null) {
            throw new TypeError(
              \\"Cannot initialize both replyTarget and \\" +
                \\"replyTargets at the same time.\\",
            );
          }
        
          if (Array.isArray(values.replyTargets) &&
              values.replyTargets.every(v => v instanceof Object || v instanceof Link || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_3fpbDrvZgf3Kq1a5V9aByFn8kx3s = values.replyTargets;
          } else {
            throw new TypeError(
              \\"The replyTargets must be an array of type \\" +
              \\"Object | Link | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"location\\" in values &&             values.location != null) {
          if (values.location instanceof Object || values.location instanceof Link || values.location instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_31k5MUZJsnsPNg8dQQJieWaXTFnR = [values.location];
          } else {
            throw new TypeError(
              \\"The location must be of type \\" +
              \\"Object | Link | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"locations\\" in values &&             values.locations != null) {
      
          if (\\"location\\" in values &&
              values.location != null) {
            throw new TypeError(
              \\"Cannot initialize both location and \\" +
                \\"locations at the same time.\\",
            );
          }
        
          if (Array.isArray(values.locations) &&
              values.locations.every(v => v instanceof Object || v instanceof Link || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_31k5MUZJsnsPNg8dQQJieWaXTFnR = values.locations;
          } else {
            throw new TypeError(
              \\"The locations must be an array of type \\" +
              \\"Object | Link | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"preview\\" in values &&             values.preview != null) {
          if (values.preview instanceof Link || values.preview instanceof Object || values.preview instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_gCVTegXxWWCw6wWRxa1QF65zusg = [values.preview];
          } else {
            throw new TypeError(
              \\"The preview must be of type \\" +
              \\"Link | Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"previews\\" in values &&             values.previews != null) {
      
          if (\\"preview\\" in values &&
              values.preview != null) {
            throw new TypeError(
              \\"Cannot initialize both preview and \\" +
                \\"previews at the same time.\\",
            );
          }
        
          if (Array.isArray(values.previews) &&
              values.previews.every(v => v instanceof Link || v instanceof Object || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_gCVTegXxWWCw6wWRxa1QF65zusg = values.previews;
          } else {
            throw new TypeError(
              \\"The previews must be an array of type \\" +
              \\"Link | Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"published\\" in values &&             values.published != null) {
          if (values.published instanceof Temporal.Instant) {
            // @ts-ignore: type is checked above.
            this.#_5e258TDXtuhaFRPZiGoDfEpjdMr = [values.published];
          } else {
            throw new TypeError(
              \\"The published must be of type \\" +
              \\"Temporal.Instant\\" + \\".\\",
            );
          }
        }
      
        if (\\"replies\\" in values &&             values.replies != null) {
          if (values.replies instanceof Collection || values.replies instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_7UpwM3JWcXhADcscukEehBorf6k = [values.replies];
          } else {
            throw new TypeError(
              \\"The replies must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"startTime\\" in values &&             values.startTime != null) {
          if (values.startTime instanceof Temporal.Instant) {
            // @ts-ignore: type is checked above.
            this.#_2w3Jmue4up8iVDUA51WZqomEF438 = [values.startTime];
          } else {
            throw new TypeError(
              \\"The startTime must be of type \\" +
              \\"Temporal.Instant\\" + \\".\\",
            );
          }
        }
      
        if (\\"summary\\" in values &&             values.summary != null) {
          if (typeof values.summary === \\"string\\" || values.summary instanceof LanguageString) {
            // @ts-ignore: type is checked above.
            this.#_4LqirZspQbFWWQEbFcXAxm7tTDN1 = [values.summary];
          } else {
            throw new TypeError(
              \\"The summary must be of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      
        if (\\"summaries\\" in values &&             values.summaries != null) {
      
          if (\\"summary\\" in values &&
              values.summary != null) {
            throw new TypeError(
              \\"Cannot initialize both summary and \\" +
                \\"summaries at the same time.\\",
            );
          }
        
          if (Array.isArray(values.summaries) &&
              values.summaries.every(v => typeof v === \\"string\\" || v instanceof LanguageString)) {
            // @ts-ignore: type is checked above.
            this.#_4LqirZspQbFWWQEbFcXAxm7tTDN1 = values.summaries;
          } else {
            throw new TypeError(
              \\"The summaries must be an array of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      
        if (\\"tags\\" in values &&             values.tags != null) {
      
          if (Array.isArray(values.tags) &&
              values.tags.every(v => v instanceof Object || v instanceof Link || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_5chuqj6s95p5gg2sk1HntGfarRf = values.tags;
          } else {
            throw new TypeError(
              \\"The tags must be an array of type \\" +
              \\"Object | Link | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"updated\\" in values &&             values.updated != null) {
          if (values.updated instanceof Temporal.Instant) {
            // @ts-ignore: type is checked above.
            this.#_385aB7ySixcf5Un6z3VsWmThgCzQ = [values.updated];
          } else {
            throw new TypeError(
              \\"The updated must be of type \\" +
              \\"Temporal.Instant\\" + \\".\\",
            );
          }
        }
      
        if (\\"url\\" in values &&             values.url != null) {
          if (values.url instanceof URL || values.url instanceof Link) {
            // @ts-ignore: type is checked above.
            this.#_2oPEH9MQ3aj8JVwyYuWkqoVwV865 = [values.url];
          } else {
            throw new TypeError(
              \\"The url must be of type \\" +
              \\"URL | Link\\" + \\".\\",
            );
          }
        }
      
        if (\\"urls\\" in values &&             values.urls != null) {
      
          if (\\"url\\" in values &&
              values.url != null) {
            throw new TypeError(
              \\"Cannot initialize both url and \\" +
                \\"urls at the same time.\\",
            );
          }
        
          if (Array.isArray(values.urls) &&
              values.urls.every(v => v instanceof URL || v instanceof Link)) {
            // @ts-ignore: type is checked above.
            this.#_2oPEH9MQ3aj8JVwyYuWkqoVwV865 = values.urls;
          } else {
            throw new TypeError(
              \\"The urls must be an array of type \\" +
              \\"URL | Link\\" + \\".\\",
            );
          }
        }
      
        if (\\"to\\" in values &&             values.to != null) {
          if (values.to instanceof Object || values.to instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_3hFbw7DTpHhq3cvVhkY8njhcsXbd = [values.to];
          } else {
            throw new TypeError(
              \\"The to must be of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"tos\\" in values &&             values.tos != null) {
      
          if (\\"to\\" in values &&
              values.to != null) {
            throw new TypeError(
              \\"Cannot initialize both to and \\" +
                \\"tos at the same time.\\",
            );
          }
        
          if (Array.isArray(values.tos) &&
              values.tos.every(v => v instanceof Object || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_3hFbw7DTpHhq3cvVhkY8njhcsXbd = values.tos;
          } else {
            throw new TypeError(
              \\"The tos must be an array of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"bto\\" in values &&             values.bto != null) {
          if (values.bto instanceof Object || values.bto instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_aLZupjwL8XB7tzdLgCMXdjZ6qej = [values.bto];
          } else {
            throw new TypeError(
              \\"The bto must be of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"btos\\" in values &&             values.btos != null) {
      
          if (\\"bto\\" in values &&
              values.bto != null) {
            throw new TypeError(
              \\"Cannot initialize both bto and \\" +
                \\"btos at the same time.\\",
            );
          }
        
          if (Array.isArray(values.btos) &&
              values.btos.every(v => v instanceof Object || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_aLZupjwL8XB7tzdLgCMXdjZ6qej = values.btos;
          } else {
            throw new TypeError(
              \\"The btos must be an array of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"cc\\" in values &&             values.cc != null) {
          if (values.cc instanceof Object || values.cc instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_42a1SvBs24QSLzKcfjCyNTjW5a1g = [values.cc];
          } else {
            throw new TypeError(
              \\"The cc must be of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"ccs\\" in values &&             values.ccs != null) {
      
          if (\\"cc\\" in values &&
              values.cc != null) {
            throw new TypeError(
              \\"Cannot initialize both cc and \\" +
                \\"ccs at the same time.\\",
            );
          }
        
          if (Array.isArray(values.ccs) &&
              values.ccs.every(v => v instanceof Object || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_42a1SvBs24QSLzKcfjCyNTjW5a1g = values.ccs;
          } else {
            throw new TypeError(
              \\"The ccs must be an array of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"bcc\\" in values &&             values.bcc != null) {
          if (values.bcc instanceof Object || values.bcc instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_3qvegKUB8YLgTXRpEf8E6JZSkz2H = [values.bcc];
          } else {
            throw new TypeError(
              \\"The bcc must be of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"bccs\\" in values &&             values.bccs != null) {
      
          if (\\"bcc\\" in values &&
              values.bcc != null) {
            throw new TypeError(
              \\"Cannot initialize both bcc and \\" +
                \\"bccs at the same time.\\",
            );
          }
        
          if (Array.isArray(values.bccs) &&
              values.bccs.every(v => v instanceof Object || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_3qvegKUB8YLgTXRpEf8E6JZSkz2H = values.bccs;
          } else {
            throw new TypeError(
              \\"The bccs must be an array of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"mediaType\\" in values &&             values.mediaType != null) {
          if (typeof values.mediaType === \\"string\\") {
            // @ts-ignore: type is checked above.
            this.#_3BLrzmscsjHCw8TF5BHRW9WkPnX8 = [values.mediaType];
          } else {
            throw new TypeError(
              \\"The mediaType must be of type \\" +
              \\"string\\" + \\".\\",
            );
          }
        }
      
        if (\\"duration\\" in values &&             values.duration != null) {
          if (values.duration instanceof Temporal.Duration) {
            // @ts-ignore: type is checked above.
            this.#_3bNvLMBN1bCJETiTihM3wvi1B2JX = [values.duration];
          } else {
            throw new TypeError(
              \\"The duration must be of type \\" +
              \\"Temporal.Duration\\" + \\".\\",
            );
          }
        }
      
        if (\\"sensitive\\" in values &&             values.sensitive != null) {
          if (typeof values.sensitive === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            this.#_u8gdcDTtChQ4tbSQMXc4cYWyum7 = [values.sensitive];
          } else {
            throw new TypeError(
              \\"The sensitive must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      
        if (\\"proof\\" in values &&             values.proof != null) {
          if (values.proof instanceof DataIntegrityProof || values.proof instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_42rPnotok1ivQ2RNCKNbeFJgx8b8 = [values.proof];
          } else {
            throw new TypeError(
              \\"The proof must be of type \\" +
              \\"DataIntegrityProof | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"proofs\\" in values &&             values.proofs != null) {
      
          if (\\"proof\\" in values &&
              values.proof != null) {
            throw new TypeError(
              \\"Cannot initialize both proof and \\" +
                \\"proofs at the same time.\\",
            );
          }
        
          if (Array.isArray(values.proofs) &&
              values.proofs.every(v => v instanceof DataIntegrityProof || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_42rPnotok1ivQ2RNCKNbeFJgx8b8 = values.proofs;
          } else {
            throw new TypeError(
              \\"The proofs must be an array of type \\" +
              \\"DataIntegrityProof | URL\\" + \\".\\",
            );
          }
        }
      }

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Object {
  
    // @ts-ignore: this.constructor is not recognized as a constructor, but it is.
    const clone: Object = new this.constructor(
      { id: values.id ?? this.id },
      options
    );
    clone.#_49BipA5dq9eoH8LX8xdsVumveTca = this.#_49BipA5dq9eoH8LX8xdsVumveTca;
        if (\\"attachments\\" in values &&             values.attachments != null) {
      
          if (Array.isArray(values.attachments) &&
              values.attachments.every(v => v instanceof Object || v instanceof Link || v instanceof PropertyValue || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_49BipA5dq9eoH8LX8xdsVumveTca = values.attachments;
          } else {
            throw new TypeError(
              \\"The attachments must be an array of type \\" +
              \\"Object | Link | PropertyValue | URL\\" + \\".\\",
            );
          }
        }
      clone.#_42CGqJ94zgQ3ZBbfHwD8Hrr2L5Py = this.#_42CGqJ94zgQ3ZBbfHwD8Hrr2L5Py;
        if (\\"attribution\\" in values &&             values.attribution != null) {
          if (values.attribution instanceof Application || values.attribution instanceof Group || values.attribution instanceof Organization || values.attribution instanceof Person || values.attribution instanceof Service || values.attribution instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_42CGqJ94zgQ3ZBbfHwD8Hrr2L5Py = [values.attribution];
          } else {
            throw new TypeError(
              \\"The attribution must be of type \\" +
              \\"Application | Group | Organization | Person | Service | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"attributions\\" in values &&             values.attributions != null) {
      
          if (\\"attribution\\" in values &&
              values.attribution != null) {
            throw new TypeError(
              \\"Cannot update both attribution and \\" +
                \\"attributions at the same time.\\",
            );
          }
        
          if (Array.isArray(values.attributions) &&
              values.attributions.every(v => v instanceof Application || v instanceof Group || v instanceof Organization || v instanceof Person || v instanceof Service || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_42CGqJ94zgQ3ZBbfHwD8Hrr2L5Py = values.attributions;
          } else {
            throw new TypeError(
              \\"The attributions must be an array of type \\" +
              \\"Application | Group | Organization | Person | Service | URL\\" + \\".\\",
            );
          }
        }
      clone.#_3ocC3VVi88cEd5sPWL8djkZsvTN6 = this.#_3ocC3VVi88cEd5sPWL8djkZsvTN6;
        if (\\"audience\\" in values &&             values.audience != null) {
          if (values.audience instanceof Object || values.audience instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_3ocC3VVi88cEd5sPWL8djkZsvTN6 = [values.audience];
          } else {
            throw new TypeError(
              \\"The audience must be of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"audiences\\" in values &&             values.audiences != null) {
      
          if (\\"audience\\" in values &&
              values.audience != null) {
            throw new TypeError(
              \\"Cannot update both audience and \\" +
                \\"audiences at the same time.\\",
            );
          }
        
          if (Array.isArray(values.audiences) &&
              values.audiences.every(v => v instanceof Object || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_3ocC3VVi88cEd5sPWL8djkZsvTN6 = values.audiences;
          } else {
            throw new TypeError(
              \\"The audiences must be an array of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      clone.#_4HuuRSdSrXq8Jj2J9gcdYfoCzeuz = this.#_4HuuRSdSrXq8Jj2J9gcdYfoCzeuz;
        if (\\"content\\" in values &&             values.content != null) {
          if (typeof values.content === \\"string\\" || values.content instanceof LanguageString) {
            // @ts-ignore: type is checked above.
            clone.#_4HuuRSdSrXq8Jj2J9gcdYfoCzeuz = [values.content];
          } else {
            throw new TypeError(
              \\"The content must be of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      
        if (\\"contents\\" in values &&             values.contents != null) {
      
          if (\\"content\\" in values &&
              values.content != null) {
            throw new TypeError(
              \\"Cannot update both content and \\" +
                \\"contents at the same time.\\",
            );
          }
        
          if (Array.isArray(values.contents) &&
              values.contents.every(v => typeof v === \\"string\\" || v instanceof LanguageString)) {
            // @ts-ignore: type is checked above.
            clone.#_4HuuRSdSrXq8Jj2J9gcdYfoCzeuz = values.contents;
          } else {
            throw new TypeError(
              \\"The contents must be an array of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      clone.#_3mhZzGXSpQ431mBSz2kvych22v4e = this.#_3mhZzGXSpQ431mBSz2kvych22v4e;
        if (\\"contexts\\" in values &&             values.contexts != null) {
      
          if (Array.isArray(values.contexts) &&
              values.contexts.every(v => v instanceof Object || v instanceof Link || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_3mhZzGXSpQ431mBSz2kvych22v4e = values.contexts;
          } else {
            throw new TypeError(
              \\"The contexts must be an array of type \\" +
              \\"Object | Link | URL\\" + \\".\\",
            );
          }
        }
      clone.#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav = this.#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav;
        if (\\"name\\" in values &&             values.name != null) {
          if (typeof values.name === \\"string\\" || values.name instanceof LanguageString) {
            // @ts-ignore: type is checked above.
            clone.#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav = [values.name];
          } else {
            throw new TypeError(
              \\"The name must be of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      
        if (\\"names\\" in values &&             values.names != null) {
      
          if (\\"name\\" in values &&
              values.name != null) {
            throw new TypeError(
              \\"Cannot update both name and \\" +
                \\"names at the same time.\\",
            );
          }
        
          if (Array.isArray(values.names) &&
              values.names.every(v => typeof v === \\"string\\" || v instanceof LanguageString)) {
            // @ts-ignore: type is checked above.
            clone.#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav = values.names;
          } else {
            throw new TypeError(
              \\"The names must be an array of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      clone.#_219RwDanjScTv5tYCjwGZVCM7KZ9 = this.#_219RwDanjScTv5tYCjwGZVCM7KZ9;
        if (\\"endTime\\" in values &&             values.endTime != null) {
          if (values.endTime instanceof Temporal.Instant) {
            // @ts-ignore: type is checked above.
            clone.#_219RwDanjScTv5tYCjwGZVCM7KZ9 = [values.endTime];
          } else {
            throw new TypeError(
              \\"The endTime must be of type \\" +
              \\"Temporal.Instant\\" + \\".\\",
            );
          }
        }
      clone.#_86xFhmgBapoMvYqjbjRuDPayTrS = this.#_86xFhmgBapoMvYqjbjRuDPayTrS;
        if (\\"generators\\" in values &&             values.generators != null) {
      
          if (Array.isArray(values.generators) &&
              values.generators.every(v => v instanceof Object || v instanceof Link || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_86xFhmgBapoMvYqjbjRuDPayTrS = values.generators;
          } else {
            throw new TypeError(
              \\"The generators must be an array of type \\" +
              \\"Object | Link | URL\\" + \\".\\",
            );
          }
        }
      clone.#_33CjRLy5ujtsUrwRSCrsggvGdKuR = this.#_33CjRLy5ujtsUrwRSCrsggvGdKuR;
        if (\\"icon\\" in values &&             values.icon != null) {
          if (values.icon instanceof Image || values.icon instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_33CjRLy5ujtsUrwRSCrsggvGdKuR = [values.icon];
          } else {
            throw new TypeError(
              \\"The icon must be of type \\" +
              \\"Image | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"icons\\" in values &&             values.icons != null) {
      
          if (\\"icon\\" in values &&
              values.icon != null) {
            throw new TypeError(
              \\"Cannot update both icon and \\" +
                \\"icons at the same time.\\",
            );
          }
        
          if (Array.isArray(values.icons) &&
              values.icons.every(v => v instanceof Image || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_33CjRLy5ujtsUrwRSCrsggvGdKuR = values.icons;
          } else {
            throw new TypeError(
              \\"The icons must be an array of type \\" +
              \\"Image | URL\\" + \\".\\",
            );
          }
        }
      clone.#_3dXrUdkARxwyJLtJcYi1AJ92H41U = this.#_3dXrUdkARxwyJLtJcYi1AJ92H41U;
        if (\\"image\\" in values &&             values.image != null) {
          if (values.image instanceof Image || values.image instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_3dXrUdkARxwyJLtJcYi1AJ92H41U = [values.image];
          } else {
            throw new TypeError(
              \\"The image must be of type \\" +
              \\"Image | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"images\\" in values &&             values.images != null) {
      
          if (\\"image\\" in values &&
              values.image != null) {
            throw new TypeError(
              \\"Cannot update both image and \\" +
                \\"images at the same time.\\",
            );
          }
        
          if (Array.isArray(values.images) &&
              values.images.every(v => v instanceof Image || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_3dXrUdkARxwyJLtJcYi1AJ92H41U = values.images;
          } else {
            throw new TypeError(
              \\"The images must be an array of type \\" +
              \\"Image | URL\\" + \\".\\",
            );
          }
        }
      clone.#_3fpbDrvZgf3Kq1a5V9aByFn8kx3s = this.#_3fpbDrvZgf3Kq1a5V9aByFn8kx3s;
        if (\\"replyTarget\\" in values &&             values.replyTarget != null) {
          if (values.replyTarget instanceof Object || values.replyTarget instanceof Link || values.replyTarget instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_3fpbDrvZgf3Kq1a5V9aByFn8kx3s = [values.replyTarget];
          } else {
            throw new TypeError(
              \\"The replyTarget must be of type \\" +
              \\"Object | Link | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"replyTargets\\" in values &&             values.replyTargets != null) {
      
          if (\\"replyTarget\\" in values &&
              values.replyTarget != null) {
            throw new TypeError(
              \\"Cannot update both replyTarget and \\" +
                \\"replyTargets at the same time.\\",
            );
          }
        
          if (Array.isArray(values.replyTargets) &&
              values.replyTargets.every(v => v instanceof Object || v instanceof Link || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_3fpbDrvZgf3Kq1a5V9aByFn8kx3s = values.replyTargets;
          } else {
            throw new TypeError(
              \\"The replyTargets must be an array of type \\" +
              \\"Object | Link | URL\\" + \\".\\",
            );
          }
        }
      clone.#_31k5MUZJsnsPNg8dQQJieWaXTFnR = this.#_31k5MUZJsnsPNg8dQQJieWaXTFnR;
        if (\\"location\\" in values &&             values.location != null) {
          if (values.location instanceof Object || values.location instanceof Link || values.location instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_31k5MUZJsnsPNg8dQQJieWaXTFnR = [values.location];
          } else {
            throw new TypeError(
              \\"The location must be of type \\" +
              \\"Object | Link | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"locations\\" in values &&             values.locations != null) {
      
          if (\\"location\\" in values &&
              values.location != null) {
            throw new TypeError(
              \\"Cannot update both location and \\" +
                \\"locations at the same time.\\",
            );
          }
        
          if (Array.isArray(values.locations) &&
              values.locations.every(v => v instanceof Object || v instanceof Link || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_31k5MUZJsnsPNg8dQQJieWaXTFnR = values.locations;
          } else {
            throw new TypeError(
              \\"The locations must be an array of type \\" +
              \\"Object | Link | URL\\" + \\".\\",
            );
          }
        }
      clone.#_gCVTegXxWWCw6wWRxa1QF65zusg = this.#_gCVTegXxWWCw6wWRxa1QF65zusg;
        if (\\"preview\\" in values &&             values.preview != null) {
          if (values.preview instanceof Link || values.preview instanceof Object || values.preview instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_gCVTegXxWWCw6wWRxa1QF65zusg = [values.preview];
          } else {
            throw new TypeError(
              \\"The preview must be of type \\" +
              \\"Link | Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"previews\\" in values &&             values.previews != null) {
      
          if (\\"preview\\" in values &&
              values.preview != null) {
            throw new TypeError(
              \\"Cannot update both preview and \\" +
                \\"previews at the same time.\\",
            );
          }
        
          if (Array.isArray(values.previews) &&
              values.previews.every(v => v instanceof Link || v instanceof Object || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_gCVTegXxWWCw6wWRxa1QF65zusg = values.previews;
          } else {
            throw new TypeError(
              \\"The previews must be an array of type \\" +
              \\"Link | Object | URL\\" + \\".\\",
            );
          }
        }
      clone.#_5e258TDXtuhaFRPZiGoDfEpjdMr = this.#_5e258TDXtuhaFRPZiGoDfEpjdMr;
        if (\\"published\\" in values &&             values.published != null) {
          if (values.published instanceof Temporal.Instant) {
            // @ts-ignore: type is checked above.
            clone.#_5e258TDXtuhaFRPZiGoDfEpjdMr = [values.published];
          } else {
            throw new TypeError(
              \\"The published must be of type \\" +
              \\"Temporal.Instant\\" + \\".\\",
            );
          }
        }
      clone.#_7UpwM3JWcXhADcscukEehBorf6k = this.#_7UpwM3JWcXhADcscukEehBorf6k;
        if (\\"replies\\" in values &&             values.replies != null) {
          if (values.replies instanceof Collection || values.replies instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_7UpwM3JWcXhADcscukEehBorf6k = [values.replies];
          } else {
            throw new TypeError(
              \\"The replies must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_2w3Jmue4up8iVDUA51WZqomEF438 = this.#_2w3Jmue4up8iVDUA51WZqomEF438;
        if (\\"startTime\\" in values &&             values.startTime != null) {
          if (values.startTime instanceof Temporal.Instant) {
            // @ts-ignore: type is checked above.
            clone.#_2w3Jmue4up8iVDUA51WZqomEF438 = [values.startTime];
          } else {
            throw new TypeError(
              \\"The startTime must be of type \\" +
              \\"Temporal.Instant\\" + \\".\\",
            );
          }
        }
      clone.#_4LqirZspQbFWWQEbFcXAxm7tTDN1 = this.#_4LqirZspQbFWWQEbFcXAxm7tTDN1;
        if (\\"summary\\" in values &&             values.summary != null) {
          if (typeof values.summary === \\"string\\" || values.summary instanceof LanguageString) {
            // @ts-ignore: type is checked above.
            clone.#_4LqirZspQbFWWQEbFcXAxm7tTDN1 = [values.summary];
          } else {
            throw new TypeError(
              \\"The summary must be of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      
        if (\\"summaries\\" in values &&             values.summaries != null) {
      
          if (\\"summary\\" in values &&
              values.summary != null) {
            throw new TypeError(
              \\"Cannot update both summary and \\" +
                \\"summaries at the same time.\\",
            );
          }
        
          if (Array.isArray(values.summaries) &&
              values.summaries.every(v => typeof v === \\"string\\" || v instanceof LanguageString)) {
            // @ts-ignore: type is checked above.
            clone.#_4LqirZspQbFWWQEbFcXAxm7tTDN1 = values.summaries;
          } else {
            throw new TypeError(
              \\"The summaries must be an array of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      clone.#_5chuqj6s95p5gg2sk1HntGfarRf = this.#_5chuqj6s95p5gg2sk1HntGfarRf;
        if (\\"tags\\" in values &&             values.tags != null) {
      
          if (Array.isArray(values.tags) &&
              values.tags.every(v => v instanceof Object || v instanceof Link || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_5chuqj6s95p5gg2sk1HntGfarRf = values.tags;
          } else {
            throw new TypeError(
              \\"The tags must be an array of type \\" +
              \\"Object | Link | URL\\" + \\".\\",
            );
          }
        }
      clone.#_385aB7ySixcf5Un6z3VsWmThgCzQ = this.#_385aB7ySixcf5Un6z3VsWmThgCzQ;
        if (\\"updated\\" in values &&             values.updated != null) {
          if (values.updated instanceof Temporal.Instant) {
            // @ts-ignore: type is checked above.
            clone.#_385aB7ySixcf5Un6z3VsWmThgCzQ = [values.updated];
          } else {
            throw new TypeError(
              \\"The updated must be of type \\" +
              \\"Temporal.Instant\\" + \\".\\",
            );
          }
        }
      clone.#_2oPEH9MQ3aj8JVwyYuWkqoVwV865 = this.#_2oPEH9MQ3aj8JVwyYuWkqoVwV865;
        if (\\"url\\" in values &&             values.url != null) {
          if (values.url instanceof URL || values.url instanceof Link) {
            // @ts-ignore: type is checked above.
            clone.#_2oPEH9MQ3aj8JVwyYuWkqoVwV865 = [values.url];
          } else {
            throw new TypeError(
              \\"The url must be of type \\" +
              \\"URL | Link\\" + \\".\\",
            );
          }
        }
      
        if (\\"urls\\" in values &&             values.urls != null) {
      
          if (\\"url\\" in values &&
              values.url != null) {
            throw new TypeError(
              \\"Cannot update both url and \\" +
                \\"urls at the same time.\\",
            );
          }
        
          if (Array.isArray(values.urls) &&
              values.urls.every(v => v instanceof URL || v instanceof Link)) {
            // @ts-ignore: type is checked above.
            clone.#_2oPEH9MQ3aj8JVwyYuWkqoVwV865 = values.urls;
          } else {
            throw new TypeError(
              \\"The urls must be an array of type \\" +
              \\"URL | Link\\" + \\".\\",
            );
          }
        }
      clone.#_3hFbw7DTpHhq3cvVhkY8njhcsXbd = this.#_3hFbw7DTpHhq3cvVhkY8njhcsXbd;
        if (\\"to\\" in values &&             values.to != null) {
          if (values.to instanceof Object || values.to instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_3hFbw7DTpHhq3cvVhkY8njhcsXbd = [values.to];
          } else {
            throw new TypeError(
              \\"The to must be of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"tos\\" in values &&             values.tos != null) {
      
          if (\\"to\\" in values &&
              values.to != null) {
            throw new TypeError(
              \\"Cannot update both to and \\" +
                \\"tos at the same time.\\",
            );
          }
        
          if (Array.isArray(values.tos) &&
              values.tos.every(v => v instanceof Object || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_3hFbw7DTpHhq3cvVhkY8njhcsXbd = values.tos;
          } else {
            throw new TypeError(
              \\"The tos must be an array of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      clone.#_aLZupjwL8XB7tzdLgCMXdjZ6qej = this.#_aLZupjwL8XB7tzdLgCMXdjZ6qej;
        if (\\"bto\\" in values &&             values.bto != null) {
          if (values.bto instanceof Object || values.bto instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_aLZupjwL8XB7tzdLgCMXdjZ6qej = [values.bto];
          } else {
            throw new TypeError(
              \\"The bto must be of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"btos\\" in values &&             values.btos != null) {
      
          if (\\"bto\\" in values &&
              values.bto != null) {
            throw new TypeError(
              \\"Cannot update both bto and \\" +
                \\"btos at the same time.\\",
            );
          }
        
          if (Array.isArray(values.btos) &&
              values.btos.every(v => v instanceof Object || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_aLZupjwL8XB7tzdLgCMXdjZ6qej = values.btos;
          } else {
            throw new TypeError(
              \\"The btos must be an array of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      clone.#_42a1SvBs24QSLzKcfjCyNTjW5a1g = this.#_42a1SvBs24QSLzKcfjCyNTjW5a1g;
        if (\\"cc\\" in values &&             values.cc != null) {
          if (values.cc instanceof Object || values.cc instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_42a1SvBs24QSLzKcfjCyNTjW5a1g = [values.cc];
          } else {
            throw new TypeError(
              \\"The cc must be of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"ccs\\" in values &&             values.ccs != null) {
      
          if (\\"cc\\" in values &&
              values.cc != null) {
            throw new TypeError(
              \\"Cannot update both cc and \\" +
                \\"ccs at the same time.\\",
            );
          }
        
          if (Array.isArray(values.ccs) &&
              values.ccs.every(v => v instanceof Object || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_42a1SvBs24QSLzKcfjCyNTjW5a1g = values.ccs;
          } else {
            throw new TypeError(
              \\"The ccs must be an array of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      clone.#_3qvegKUB8YLgTXRpEf8E6JZSkz2H = this.#_3qvegKUB8YLgTXRpEf8E6JZSkz2H;
        if (\\"bcc\\" in values &&             values.bcc != null) {
          if (values.bcc instanceof Object || values.bcc instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_3qvegKUB8YLgTXRpEf8E6JZSkz2H = [values.bcc];
          } else {
            throw new TypeError(
              \\"The bcc must be of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"bccs\\" in values &&             values.bccs != null) {
      
          if (\\"bcc\\" in values &&
              values.bcc != null) {
            throw new TypeError(
              \\"Cannot update both bcc and \\" +
                \\"bccs at the same time.\\",
            );
          }
        
          if (Array.isArray(values.bccs) &&
              values.bccs.every(v => v instanceof Object || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_3qvegKUB8YLgTXRpEf8E6JZSkz2H = values.bccs;
          } else {
            throw new TypeError(
              \\"The bccs must be an array of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      clone.#_3BLrzmscsjHCw8TF5BHRW9WkPnX8 = this.#_3BLrzmscsjHCw8TF5BHRW9WkPnX8;
        if (\\"mediaType\\" in values &&             values.mediaType != null) {
          if (typeof values.mediaType === \\"string\\") {
            // @ts-ignore: type is checked above.
            clone.#_3BLrzmscsjHCw8TF5BHRW9WkPnX8 = [values.mediaType];
          } else {
            throw new TypeError(
              \\"The mediaType must be of type \\" +
              \\"string\\" + \\".\\",
            );
          }
        }
      clone.#_3bNvLMBN1bCJETiTihM3wvi1B2JX = this.#_3bNvLMBN1bCJETiTihM3wvi1B2JX;
        if (\\"duration\\" in values &&             values.duration != null) {
          if (values.duration instanceof Temporal.Duration) {
            // @ts-ignore: type is checked above.
            clone.#_3bNvLMBN1bCJETiTihM3wvi1B2JX = [values.duration];
          } else {
            throw new TypeError(
              \\"The duration must be of type \\" +
              \\"Temporal.Duration\\" + \\".\\",
            );
          }
        }
      clone.#_u8gdcDTtChQ4tbSQMXc4cYWyum7 = this.#_u8gdcDTtChQ4tbSQMXc4cYWyum7;
        if (\\"sensitive\\" in values &&             values.sensitive != null) {
          if (typeof values.sensitive === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            clone.#_u8gdcDTtChQ4tbSQMXc4cYWyum7 = [values.sensitive];
          } else {
            throw new TypeError(
              \\"The sensitive must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      clone.#_42rPnotok1ivQ2RNCKNbeFJgx8b8 = this.#_42rPnotok1ivQ2RNCKNbeFJgx8b8;
        if (\\"proof\\" in values &&             values.proof != null) {
          if (values.proof instanceof DataIntegrityProof || values.proof instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_42rPnotok1ivQ2RNCKNbeFJgx8b8 = [values.proof];
          } else {
            throw new TypeError(
              \\"The proof must be of type \\" +
              \\"DataIntegrityProof | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"proofs\\" in values &&             values.proofs != null) {
      
          if (\\"proof\\" in values &&
              values.proof != null) {
            throw new TypeError(
              \\"Cannot update both proof and \\" +
                \\"proofs at the same time.\\",
            );
          }
        
          if (Array.isArray(values.proofs) &&
              values.proofs.every(v => v instanceof DataIntegrityProof || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_42rPnotok1ivQ2RNCKNbeFJgx8b8 = values.proofs;
          } else {
            throw new TypeError(
              \\"The proofs must be an array of type \\" +
              \\"DataIntegrityProof | URL\\" + \\".\\",
            );
          }
        }
      
    return clone;
  }
  
    async #fetchAttachment(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Object | Link | PropertyValue | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Object.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      try {
        return await Link.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      try {
        return await PropertyValue.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Object\\",\\"https://www.w3.org/ns/activitystreams#Link\\",\\"http://schema.org#PropertyValue\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Object.getAttachments},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get attachmentIds(): URL[] {
        return this.#_49BipA5dq9eoH8LX8xdsVumveTca.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** Identifies a resource attached or related to an object that potentially
 * requires special handling.  The intent is to provide a model that is at
 * least semantically similar to attachments in email.
 * 
 */

      async* getAttachments(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Object | Link | PropertyValue> {
        const vs = this.#_49BipA5dq9eoH8LX8xdsVumveTca;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchAttachment(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
    async #fetchAttribution(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Application | Group | Organization | Person | Service | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Application.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      try {
        return await Group.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      try {
        return await Organization.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      try {
        return await Person.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      try {
        return await Service.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Application\\",\\"https://www.w3.org/ns/activitystreams#Group\\",\\"https://www.w3.org/ns/activitystreams#Organization\\",\\"https://www.w3.org/ns/activitystreams#Person\\",\\"https://www.w3.org/ns/activitystreams#Service\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Object.getAttribution},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get attributionId(): URL | null {
        if (this.#_42CGqJ94zgQ3ZBbfHwD8Hrr2L5Py.length < 1) return null;
        const v = this.#_42CGqJ94zgQ3ZBbfHwD8Hrr2L5Py[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** Identifies one or more entities to which this object is attributed.
 * The attributed entities might not be Actors.  For instance,
 * an object might be attributed to the completion of another activity.
 * 
 */

      async getAttribution(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Application | Group | Organization | Person | Service | null> {
        if (this.#_42CGqJ94zgQ3ZBbfHwD8Hrr2L5Py.length < 1) return null;
        const v = this.#_42CGqJ94zgQ3ZBbfHwD8Hrr2L5Py[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchAttribution(v, options);
          if (fetched == null) return null;
          this.#_42CGqJ94zgQ3ZBbfHwD8Hrr2L5Py[0] = fetched;
          return fetched;
        }
        return v;
      }
      
      /**
       * Similar to
       * {@link Object.getAttributions},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get attributionIds(): URL[] {
        return this.#_42CGqJ94zgQ3ZBbfHwD8Hrr2L5Py.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** Identifies one or more entities to which this object is attributed.
 * The attributed entities might not be Actors.  For instance,
 * an object might be attributed to the completion of another activity.
 * 
 */

      async* getAttributions(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Application | Group | Organization | Person | Service> {
        const vs = this.#_42CGqJ94zgQ3ZBbfHwD8Hrr2L5Py;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchAttribution(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
    async #fetchAudience(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Object | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Object.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Object\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Object.getAudience},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get audienceId(): URL | null {
        if (this.#_3ocC3VVi88cEd5sPWL8djkZsvTN6.length < 1) return null;
        const v = this.#_3ocC3VVi88cEd5sPWL8djkZsvTN6[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** Identifies one or more entities that represent the total population of
 * entities for which the object can considered to be relevant.
 * 
 */

      async getAudience(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Object | null> {
        if (this.#_3ocC3VVi88cEd5sPWL8djkZsvTN6.length < 1) return null;
        const v = this.#_3ocC3VVi88cEd5sPWL8djkZsvTN6[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchAudience(v, options);
          if (fetched == null) return null;
          this.#_3ocC3VVi88cEd5sPWL8djkZsvTN6[0] = fetched;
          return fetched;
        }
        return v;
      }
      
      /**
       * Similar to
       * {@link Object.getAudiences},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get audienceIds(): URL[] {
        return this.#_3ocC3VVi88cEd5sPWL8djkZsvTN6.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** Identifies one or more entities that represent the total population of
 * entities for which the object can considered to be relevant.
 * 
 */

      async* getAudiences(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Object> {
        const vs = this.#_3ocC3VVi88cEd5sPWL8djkZsvTN6;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchAudience(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
/** The content or textual representation of the Object encoded as a JSON
 * string.  By default, the value of \`content\` is HTML.  The \`mediaType\`
 * property can be used in the object to indicate a different content type.
 * 
 * The content MAY be expressed using multiple language-tagged values.
 * 
 */
get content(): (string | LanguageString | null) {
        if (this.#_4HuuRSdSrXq8Jj2J9gcdYfoCzeuz.length < 1) return null;
        return this.#_4HuuRSdSrXq8Jj2J9gcdYfoCzeuz[0];
      }
      
/** The content or textual representation of the Object encoded as a JSON
 * string.  By default, the value of \`content\` is HTML.  The \`mediaType\`
 * property can be used in the object to indicate a different content type.
 * 
 * The content MAY be expressed using multiple language-tagged values.
 * 
 */
get contents(): ((string | LanguageString))[] {
        return this.#_4HuuRSdSrXq8Jj2J9gcdYfoCzeuz;
      }
      
    async #fetchContext(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Object | Link | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Object.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      try {
        return await Link.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Object\\",\\"https://www.w3.org/ns/activitystreams#Link\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Object.getContexts},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get contextIds(): URL[] {
        return this.#_3mhZzGXSpQ431mBSz2kvych22v4e.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** Identifies the context within which the object exists or an activity was
 * performed.
 * 
 * The notion of \\"context\\" used is intentionally vague.  The intended function
 * is to serve as a means of grouping objects and activities that share
 * a common originating context or purpose.  An example could be all activities
 * relating to a common project or event.
 * 
 */

      async* getContexts(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Object | Link> {
        const vs = this.#_3mhZzGXSpQ431mBSz2kvych22v4e;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchContext(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
/** A simple, human-readable, plain-text name for the object. HTML markup MUST
 * NOT be included. The name MAY be expressed using multiple language-tagged
 * values.
 * 
 */
get name(): (string | LanguageString | null) {
        if (this.#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav.length < 1) return null;
        return this.#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav[0];
      }
      
/** A simple, human-readable, plain-text name for the object. HTML markup MUST
 * NOT be included. The name MAY be expressed using multiple language-tagged
 * values.
 * 
 */
get names(): ((string | LanguageString))[] {
        return this.#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav;
      }
      
/** The date and time describing the actual or expected ending time of
 * the object.  When used with an {@link Activity} object, for instance,
 * the \`endTime\`\` property specifies the moment the activity concluded
 * or is expected to conclude.
 * 
 */
get endTime(): (Temporal.Instant | null) {
        if (this.#_219RwDanjScTv5tYCjwGZVCM7KZ9.length < 1) return null;
        return this.#_219RwDanjScTv5tYCjwGZVCM7KZ9[0];
      }
      
    async #fetchGenerator(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Object | Link | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Object.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      try {
        return await Link.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Object\\",\\"https://www.w3.org/ns/activitystreams#Link\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Object.getGenerators},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get generatorIds(): URL[] {
        return this.#_86xFhmgBapoMvYqjbjRuDPayTrS.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** Identifies the entity (e.g. an application) that generated the object.
 * 
 */

      async* getGenerators(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Object | Link> {
        const vs = this.#_86xFhmgBapoMvYqjbjRuDPayTrS;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchGenerator(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
    async #fetchIcon(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Image | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Image.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Image\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Object.getIcon},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get iconId(): URL | null {
        if (this.#_33CjRLy5ujtsUrwRSCrsggvGdKuR.length < 1) return null;
        const v = this.#_33CjRLy5ujtsUrwRSCrsggvGdKuR[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** Indicates an entity that describes an icon for this object.
 * The image should have an aspect ratio of one (horizontal) to one
 * (vertical) and should be suitable for presentation at a small size.
 * 
 */

      async getIcon(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Image | null> {
        if (this.#_33CjRLy5ujtsUrwRSCrsggvGdKuR.length < 1) return null;
        const v = this.#_33CjRLy5ujtsUrwRSCrsggvGdKuR[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchIcon(v, options);
          if (fetched == null) return null;
          this.#_33CjRLy5ujtsUrwRSCrsggvGdKuR[0] = fetched;
          return fetched;
        }
        return v;
      }
      
      /**
       * Similar to
       * {@link Object.getIcons},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get iconIds(): URL[] {
        return this.#_33CjRLy5ujtsUrwRSCrsggvGdKuR.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** Indicates an entity that describes an icon for this object.
 * The image should have an aspect ratio of one (horizontal) to one
 * (vertical) and should be suitable for presentation at a small size.
 * 
 */

      async* getIcons(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Image> {
        const vs = this.#_33CjRLy5ujtsUrwRSCrsggvGdKuR;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchIcon(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
    async #fetchImage(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Image | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Image.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Image\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Object.getImage},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get imageId(): URL | null {
        if (this.#_3dXrUdkARxwyJLtJcYi1AJ92H41U.length < 1) return null;
        const v = this.#_3dXrUdkARxwyJLtJcYi1AJ92H41U[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** Indicates an entity that describes an image for this object.
 * Unlike the icon property, there are no aspect ratio or display size
 * limitations assumed.
 * 
 */

      async getImage(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Image | null> {
        if (this.#_3dXrUdkARxwyJLtJcYi1AJ92H41U.length < 1) return null;
        const v = this.#_3dXrUdkARxwyJLtJcYi1AJ92H41U[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchImage(v, options);
          if (fetched == null) return null;
          this.#_3dXrUdkARxwyJLtJcYi1AJ92H41U[0] = fetched;
          return fetched;
        }
        return v;
      }
      
      /**
       * Similar to
       * {@link Object.getImages},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get imageIds(): URL[] {
        return this.#_3dXrUdkARxwyJLtJcYi1AJ92H41U.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** Indicates an entity that describes an image for this object.
 * Unlike the icon property, there are no aspect ratio or display size
 * limitations assumed.
 * 
 */

      async* getImages(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Image> {
        const vs = this.#_3dXrUdkARxwyJLtJcYi1AJ92H41U;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchImage(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
    async #fetchReplyTarget(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Object | Link | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Object.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      try {
        return await Link.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Object\\",\\"https://www.w3.org/ns/activitystreams#Link\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Object.getReplyTarget},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get replyTargetId(): URL | null {
        if (this.#_3fpbDrvZgf3Kq1a5V9aByFn8kx3s.length < 1) return null;
        const v = this.#_3fpbDrvZgf3Kq1a5V9aByFn8kx3s[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** Indicates one or more entities for which this object is considered
 * a response.
 * 
 */

      async getReplyTarget(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Object | Link | null> {
        if (this.#_3fpbDrvZgf3Kq1a5V9aByFn8kx3s.length < 1) return null;
        const v = this.#_3fpbDrvZgf3Kq1a5V9aByFn8kx3s[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchReplyTarget(v, options);
          if (fetched == null) return null;
          this.#_3fpbDrvZgf3Kq1a5V9aByFn8kx3s[0] = fetched;
          return fetched;
        }
        return v;
      }
      
      /**
       * Similar to
       * {@link Object.getReplyTargets},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get replyTargetIds(): URL[] {
        return this.#_3fpbDrvZgf3Kq1a5V9aByFn8kx3s.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** Indicates one or more entities for which this object is considered
 * a response.
 * 
 */

      async* getReplyTargets(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Object | Link> {
        const vs = this.#_3fpbDrvZgf3Kq1a5V9aByFn8kx3s;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchReplyTarget(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
    async #fetchLocation(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Object | Link | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Object.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      try {
        return await Link.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Object\\",\\"https://www.w3.org/ns/activitystreams#Link\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Object.getLocation},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get locationId(): URL | null {
        if (this.#_31k5MUZJsnsPNg8dQQJieWaXTFnR.length < 1) return null;
        const v = this.#_31k5MUZJsnsPNg8dQQJieWaXTFnR[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** 	Indicates one or more physical or logical locations associated with
 *  the object.
 * 
 */

      async getLocation(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Object | Link | null> {
        if (this.#_31k5MUZJsnsPNg8dQQJieWaXTFnR.length < 1) return null;
        const v = this.#_31k5MUZJsnsPNg8dQQJieWaXTFnR[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchLocation(v, options);
          if (fetched == null) return null;
          this.#_31k5MUZJsnsPNg8dQQJieWaXTFnR[0] = fetched;
          return fetched;
        }
        return v;
      }
      
      /**
       * Similar to
       * {@link Object.getLocations},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get locationIds(): URL[] {
        return this.#_31k5MUZJsnsPNg8dQQJieWaXTFnR.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** 	Indicates one or more physical or logical locations associated with
 *  the object.
 * 
 */

      async* getLocations(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Object | Link> {
        const vs = this.#_31k5MUZJsnsPNg8dQQJieWaXTFnR;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchLocation(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
    async #fetchPreview(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Link | Object | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Link.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      try {
        return await Object.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Link\\",\\"https://www.w3.org/ns/activitystreams#Object\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Object.getPreview},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get previewId(): URL | null {
        if (this.#_gCVTegXxWWCw6wWRxa1QF65zusg.length < 1) return null;
        const v = this.#_gCVTegXxWWCw6wWRxa1QF65zusg[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** Identifies an entity that provides a preview of this object.
 * 
 */

      async getPreview(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Link | Object | null> {
        if (this.#_gCVTegXxWWCw6wWRxa1QF65zusg.length < 1) return null;
        const v = this.#_gCVTegXxWWCw6wWRxa1QF65zusg[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchPreview(v, options);
          if (fetched == null) return null;
          this.#_gCVTegXxWWCw6wWRxa1QF65zusg[0] = fetched;
          return fetched;
        }
        return v;
      }
      
      /**
       * Similar to
       * {@link Object.getPreviews},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get previewIds(): URL[] {
        return this.#_gCVTegXxWWCw6wWRxa1QF65zusg.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** Identifies an entity that provides a preview of this object.
 * 
 */

      async* getPreviews(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Link | Object> {
        const vs = this.#_gCVTegXxWWCw6wWRxa1QF65zusg;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchPreview(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
/** The date and time at which the object was published.
 */
get published(): (Temporal.Instant | null) {
        if (this.#_5e258TDXtuhaFRPZiGoDfEpjdMr.length < 1) return null;
        return this.#_5e258TDXtuhaFRPZiGoDfEpjdMr[0];
      }
      
    async #fetchReplies(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Collection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Collection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Collection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Object.getReplies},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get repliesId(): URL | null {
        if (this.#_7UpwM3JWcXhADcscukEehBorf6k.length < 1) return null;
        const v = this.#_7UpwM3JWcXhADcscukEehBorf6k[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** Identifies a {@link Collection} containing objects considered to be
 * responses to this object.
 * 
 */

      async getReplies(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Collection | null> {
        if (this.#_7UpwM3JWcXhADcscukEehBorf6k.length < 1) return null;
        const v = this.#_7UpwM3JWcXhADcscukEehBorf6k[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchReplies(v, options);
          if (fetched == null) return null;
          this.#_7UpwM3JWcXhADcscukEehBorf6k[0] = fetched;
          return fetched;
        }
        return v;
      }
      
/** The date and time describing the actual or expected starting time of
 * the object.  When used with an {@link Activity} object, for instance,
 * the \`startTime\` property specifies the moment the activity began or
 * is scheduled to begin.
 * 
 */
get startTime(): (Temporal.Instant | null) {
        if (this.#_2w3Jmue4up8iVDUA51WZqomEF438.length < 1) return null;
        return this.#_2w3Jmue4up8iVDUA51WZqomEF438[0];
      }
      
/** A natural language summarization of the object encoded as HTML.
 * Multiple language tagged summaries MAY be provided.
 * 
 */
get summary(): (string | LanguageString | null) {
        if (this.#_4LqirZspQbFWWQEbFcXAxm7tTDN1.length < 1) return null;
        return this.#_4LqirZspQbFWWQEbFcXAxm7tTDN1[0];
      }
      
/** A natural language summarization of the object encoded as HTML.
 * Multiple language tagged summaries MAY be provided.
 * 
 */
get summaries(): ((string | LanguageString))[] {
        return this.#_4LqirZspQbFWWQEbFcXAxm7tTDN1;
      }
      
    async #fetchTag(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Object | Link | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Object.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      try {
        return await Link.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Object\\",\\"https://www.w3.org/ns/activitystreams#Link\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Object.getTags},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get tagIds(): URL[] {
        return this.#_5chuqj6s95p5gg2sk1HntGfarRf.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** One or more \\"tags\\" that have been associated with an objects.
 * A tag can be any kind of Object.  The key difference between \`attachment\`
 * and \`tag\` is that the former implies association by inclusion,
 * while the latter implies associated by reference.
 * 
 */

      async* getTags(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Object | Link> {
        const vs = this.#_5chuqj6s95p5gg2sk1HntGfarRf;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchTag(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
/** The date and time at which the object was updated.
 */
get updated(): (Temporal.Instant | null) {
        if (this.#_385aB7ySixcf5Un6z3VsWmThgCzQ.length < 1) return null;
        return this.#_385aB7ySixcf5Un6z3VsWmThgCzQ[0];
      }
      
/** Identifies one or more links to representations of the object.
 * 
 */
get url(): (URL | Link | null) {
        if (this.#_2oPEH9MQ3aj8JVwyYuWkqoVwV865.length < 1) return null;
        return this.#_2oPEH9MQ3aj8JVwyYuWkqoVwV865[0];
      }
      
/** Identifies one or more links to representations of the object.
 * 
 */
get urls(): ((URL | Link))[] {
        return this.#_2oPEH9MQ3aj8JVwyYuWkqoVwV865;
      }
      
    async #fetchTo(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Object | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Object.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Object\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Object.getTo},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get toId(): URL | null {
        if (this.#_3hFbw7DTpHhq3cvVhkY8njhcsXbd.length < 1) return null;
        const v = this.#_3hFbw7DTpHhq3cvVhkY8njhcsXbd[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** Identifies an entity considered to be part of the public primary audience
 * of an Object.
 * 
 */

      async getTo(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Object | null> {
        if (this.#_3hFbw7DTpHhq3cvVhkY8njhcsXbd.length < 1) return null;
        const v = this.#_3hFbw7DTpHhq3cvVhkY8njhcsXbd[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchTo(v, options);
          if (fetched == null) return null;
          this.#_3hFbw7DTpHhq3cvVhkY8njhcsXbd[0] = fetched;
          return fetched;
        }
        return v;
      }
      
      /**
       * Similar to
       * {@link Object.getTos},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get toIds(): URL[] {
        return this.#_3hFbw7DTpHhq3cvVhkY8njhcsXbd.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** Identifies an entity considered to be part of the public primary audience
 * of an Object.
 * 
 */

      async* getTos(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Object> {
        const vs = this.#_3hFbw7DTpHhq3cvVhkY8njhcsXbd;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchTo(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
    async #fetchBto(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Object | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Object.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Object\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Object.getBto},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get btoId(): URL | null {
        if (this.#_aLZupjwL8XB7tzdLgCMXdjZ6qej.length < 1) return null;
        const v = this.#_aLZupjwL8XB7tzdLgCMXdjZ6qej[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** Identifies an Object that is part of the private primary audience of
 * this Object.
 * 
 */

      async getBto(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Object | null> {
        if (this.#_aLZupjwL8XB7tzdLgCMXdjZ6qej.length < 1) return null;
        const v = this.#_aLZupjwL8XB7tzdLgCMXdjZ6qej[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchBto(v, options);
          if (fetched == null) return null;
          this.#_aLZupjwL8XB7tzdLgCMXdjZ6qej[0] = fetched;
          return fetched;
        }
        return v;
      }
      
      /**
       * Similar to
       * {@link Object.getBtos},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get btoIds(): URL[] {
        return this.#_aLZupjwL8XB7tzdLgCMXdjZ6qej.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** Identifies an Object that is part of the private primary audience of
 * this Object.
 * 
 */

      async* getBtos(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Object> {
        const vs = this.#_aLZupjwL8XB7tzdLgCMXdjZ6qej;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchBto(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
    async #fetchCc(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Object | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Object.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Object\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Object.getCc},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get ccId(): URL | null {
        if (this.#_42a1SvBs24QSLzKcfjCyNTjW5a1g.length < 1) return null;
        const v = this.#_42a1SvBs24QSLzKcfjCyNTjW5a1g[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** Identifies an Object that is part of the public secondary audience of
 * this Object.
 * 
 */

      async getCc(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Object | null> {
        if (this.#_42a1SvBs24QSLzKcfjCyNTjW5a1g.length < 1) return null;
        const v = this.#_42a1SvBs24QSLzKcfjCyNTjW5a1g[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchCc(v, options);
          if (fetched == null) return null;
          this.#_42a1SvBs24QSLzKcfjCyNTjW5a1g[0] = fetched;
          return fetched;
        }
        return v;
      }
      
      /**
       * Similar to
       * {@link Object.getCcs},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get ccIds(): URL[] {
        return this.#_42a1SvBs24QSLzKcfjCyNTjW5a1g.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** Identifies an Object that is part of the public secondary audience of
 * this Object.
 * 
 */

      async* getCcs(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Object> {
        const vs = this.#_42a1SvBs24QSLzKcfjCyNTjW5a1g;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchCc(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
    async #fetchBcc(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Object | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Object.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Object\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Object.getBcc},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get bccId(): URL | null {
        if (this.#_3qvegKUB8YLgTXRpEf8E6JZSkz2H.length < 1) return null;
        const v = this.#_3qvegKUB8YLgTXRpEf8E6JZSkz2H[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** Identifies one or more Objects that are part of the private secondary
 * audience of this Object.
 * 
 */

      async getBcc(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Object | null> {
        if (this.#_3qvegKUB8YLgTXRpEf8E6JZSkz2H.length < 1) return null;
        const v = this.#_3qvegKUB8YLgTXRpEf8E6JZSkz2H[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchBcc(v, options);
          if (fetched == null) return null;
          this.#_3qvegKUB8YLgTXRpEf8E6JZSkz2H[0] = fetched;
          return fetched;
        }
        return v;
      }
      
      /**
       * Similar to
       * {@link Object.getBccs},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get bccIds(): URL[] {
        return this.#_3qvegKUB8YLgTXRpEf8E6JZSkz2H.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** Identifies one or more Objects that are part of the private secondary
 * audience of this Object.
 * 
 */

      async* getBccs(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Object> {
        const vs = this.#_3qvegKUB8YLgTXRpEf8E6JZSkz2H;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchBcc(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
/** When used on an {@link Object}, identifies the MIME media type of the value
 * of the \`content\` property.  If not specified, the \`content\` property is
 * assumed to contain \`text/html\` content.
 * 
 */
get mediaType(): (string | null) {
        if (this.#_3BLrzmscsjHCw8TF5BHRW9WkPnX8.length < 1) return null;
        return this.#_3BLrzmscsjHCw8TF5BHRW9WkPnX8[0];
      }
      
/** When the object describes a time-bound resource, such as an audio or video,
 * a meeting, etc, the \`duration\` property indicates the object's approximate
 * duration.  The value MUST be expressed as an \`xsd:duration\` as defined by
 * W3C XML Schema Definition Language (XSD) 1.1 Part 2: DataTypes, section
 * 3.3.6 (e.g. a period of 5 seconds is represented as \`PT5S\`).
 * 
 */
get duration(): (Temporal.Duration | null) {
        if (this.#_3bNvLMBN1bCJETiTihM3wvi1B2JX.length < 1) return null;
        return this.#_3bNvLMBN1bCJETiTihM3wvi1B2JX[0];
      }
      
/** Whether it contains any sensitive contents.
 */
get sensitive(): (boolean | null) {
        if (this.#_u8gdcDTtChQ4tbSQMXc4cYWyum7.length < 1) return null;
        return this.#_u8gdcDTtChQ4tbSQMXc4cYWyum7[0];
      }
      
    async #fetchProof(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<DataIntegrityProof | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await DataIntegrityProof.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://w3id.org/security#DataIntegrityProof\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Object.getProof},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get proofId(): URL | null {
        if (this.#_42rPnotok1ivQ2RNCKNbeFJgx8b8.length < 1) return null;
        const v = this.#_42rPnotok1ivQ2RNCKNbeFJgx8b8[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** A cryptographic proof that can be used to verify the integrity of an object.
 * 
 */

      async getProof(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<DataIntegrityProof | null> {
        if (this.#_42rPnotok1ivQ2RNCKNbeFJgx8b8.length < 1) return null;
        const v = this.#_42rPnotok1ivQ2RNCKNbeFJgx8b8[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchProof(v, options);
          if (fetched == null) return null;
          this.#_42rPnotok1ivQ2RNCKNbeFJgx8b8[0] = fetched;
          return fetched;
        }
        return v;
      }
      
      /**
       * Similar to
       * {@link Object.getProofs},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get proofIds(): URL[] {
        return this.#_42rPnotok1ivQ2RNCKNbeFJgx8b8.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** A cryptographic proof that can be used to verify the integrity of an object.
 * 
 */

      async* getProofs(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<DataIntegrityProof> {
        const vs = this.#_42rPnotok1ivQ2RNCKNbeFJgx8b8;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchProof(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  const values: Record<string, unknown[] | string> = {};
    array = [];
    for (const v of this.#_49BipA5dq9eoH8LX8xdsVumveTca) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : v instanceof Object ? await v.toJsonLd(options) : v instanceof Link ? await v.toJsonLd(options) : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#attachment\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_42CGqJ94zgQ3ZBbfHwD8Hrr2L5Py) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : v instanceof Application ? await v.toJsonLd(options) : v instanceof Group ? await v.toJsonLd(options) : v instanceof Organization ? await v.toJsonLd(options) : v instanceof Person ? await v.toJsonLd(options) : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#attributedTo\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3ocC3VVi88cEd5sPWL8djkZsvTN6) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#audience\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_4HuuRSdSrXq8Jj2J9gcdYfoCzeuz) {
      const element = (
    typeof v === \\"string\\" ? { \\"@value\\": v } : {
        \\"@value\\": v.toString(),
        \\"@language\\": v.language.compact(),
      }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#content\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3mhZzGXSpQ431mBSz2kvych22v4e) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : v instanceof Object ? await v.toJsonLd(options) : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#context\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav) {
      const element = (
    typeof v === \\"string\\" ? { \\"@value\\": v } : {
        \\"@value\\": v.toString(),
        \\"@language\\": v.language.compact(),
      }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#name\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_219RwDanjScTv5tYCjwGZVCM7KZ9) {
      const element = (
    {
        \\"@type\\": \\"http://www.w3.org/2001/XMLSchema#dateTime\\",
        \\"@value\\": v.toString(),
      }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#endTime\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_86xFhmgBapoMvYqjbjRuDPayTrS) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : v instanceof Object ? await v.toJsonLd(options) : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#generator\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_33CjRLy5ujtsUrwRSCrsggvGdKuR) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#icon\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3dXrUdkARxwyJLtJcYi1AJ92H41U) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#image\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3fpbDrvZgf3Kq1a5V9aByFn8kx3s) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : v instanceof Object ? await v.toJsonLd(options) : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#inReplyTo\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_31k5MUZJsnsPNg8dQQJieWaXTFnR) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : v instanceof Object ? await v.toJsonLd(options) : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#location\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_gCVTegXxWWCw6wWRxa1QF65zusg) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : v instanceof Link ? await v.toJsonLd(options) : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#preview\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_5e258TDXtuhaFRPZiGoDfEpjdMr) {
      const element = (
    {
        \\"@type\\": \\"http://www.w3.org/2001/XMLSchema#dateTime\\",
        \\"@value\\": v.toString(),
      }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#published\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_7UpwM3JWcXhADcscukEehBorf6k) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#replies\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_2w3Jmue4up8iVDUA51WZqomEF438) {
      const element = (
    {
        \\"@type\\": \\"http://www.w3.org/2001/XMLSchema#dateTime\\",
        \\"@value\\": v.toString(),
      }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#startTime\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_4LqirZspQbFWWQEbFcXAxm7tTDN1) {
      const element = (
    typeof v === \\"string\\" ? { \\"@value\\": v } : {
        \\"@value\\": v.toString(),
        \\"@language\\": v.language.compact(),
      }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#summary\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_5chuqj6s95p5gg2sk1HntGfarRf) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : v instanceof Object ? await v.toJsonLd(options) : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#tag\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_385aB7ySixcf5Un6z3VsWmThgCzQ) {
      const element = (
    {
        \\"@type\\": \\"http://www.w3.org/2001/XMLSchema#dateTime\\",
        \\"@value\\": v.toString(),
      }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#updated\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_2oPEH9MQ3aj8JVwyYuWkqoVwV865) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#url\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3hFbw7DTpHhq3cvVhkY8njhcsXbd) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#to\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_aLZupjwL8XB7tzdLgCMXdjZ6qej) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#bto\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_42a1SvBs24QSLzKcfjCyNTjW5a1g) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#cc\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3qvegKUB8YLgTXRpEf8E6JZSkz2H) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#bcc\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3BLrzmscsjHCw8TF5BHRW9WkPnX8) {
      const element = (
    { \\"@value\\": v }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#mediaType\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3bNvLMBN1bCJETiTihM3wvi1B2JX) {
      const element = (
    {
        \\"@type\\": \\"http://www.w3.org/2001/XMLSchema#duration\\",
        \\"@value\\": v.toString(),
      }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#duration\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_u8gdcDTtChQ4tbSQMXc4cYWyum7) {
      const element = (
    { \\"@value\\": v }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#sensitive\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_42rPnotok1ivQ2RNCKNbeFJgx8b8) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push({ \\"@graph\\": element });;
    }
    if (array.length > 0) {
      values[\\"https://w3id.org/security#proof\\"] = (
    array
      );
    }
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Object\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\",{\\"sensitive\\":\\"as:sensitive\\"}],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Object> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (values[\\"@type\\"].includes(\\"http://joinmastodon.org/ns#Emoji\\")) {
      delete values[\\"@type\\"];
      return await Emoji.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Activity\\")) {
      delete values[\\"@type\\"];
      return await Activity.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Accept\\")) {
      delete values[\\"@type\\"];
      return await Accept.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Add\\")) {
      delete values[\\"@type\\"];
      return await Add.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Announce\\")) {
      delete values[\\"@type\\"];
      return await Announce.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Create\\")) {
      delete values[\\"@type\\"];
      return await Create.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Delete\\")) {
      delete values[\\"@type\\"];
      return await Delete.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Dislike\\")) {
      delete values[\\"@type\\"];
      return await Dislike.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Flag\\")) {
      delete values[\\"@type\\"];
      return await Flag.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Follow\\")) {
      delete values[\\"@type\\"];
      return await Follow.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Ignore\\")) {
      delete values[\\"@type\\"];
      return await Ignore.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Block\\")) {
      delete values[\\"@type\\"];
      return await Block.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#IntransitiveActivity\\")) {
      delete values[\\"@type\\"];
      return await IntransitiveActivity.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Arrive\\")) {
      delete values[\\"@type\\"];
      return await Arrive.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Question\\")) {
      delete values[\\"@type\\"];
      return await Question.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Join\\")) {
      delete values[\\"@type\\"];
      return await Join.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Leave\\")) {
      delete values[\\"@type\\"];
      return await Leave.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Like\\")) {
      delete values[\\"@type\\"];
      return await Like.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Listen\\")) {
      delete values[\\"@type\\"];
      return await Listen.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Offer\\")) {
      delete values[\\"@type\\"];
      return await Offer.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Invite\\")) {
      delete values[\\"@type\\"];
      return await Invite.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Reject\\")) {
      delete values[\\"@type\\"];
      return await Reject.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Remove\\")) {
      delete values[\\"@type\\"];
      return await Remove.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Undo\\")) {
      delete values[\\"@type\\"];
      return await Undo.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Update\\")) {
      delete values[\\"@type\\"];
      return await Update.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Application\\")) {
      delete values[\\"@type\\"];
      return await Application.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Article\\")) {
      delete values[\\"@type\\"];
      return await Article.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Collection\\")) {
      delete values[\\"@type\\"];
      return await Collection.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#CollectionPage\\")) {
      delete values[\\"@type\\"];
      return await CollectionPage.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#OrderedCollectionPage\\")) {
      delete values[\\"@type\\"];
      return await OrderedCollectionPage.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#OrderedCollection\\")) {
      delete values[\\"@type\\"];
      return await OrderedCollection.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Document\\")) {
      delete values[\\"@type\\"];
      return await Document.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Audio\\")) {
      delete values[\\"@type\\"];
      return await Audio.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Image\\")) {
      delete values[\\"@type\\"];
      return await Image.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Page\\")) {
      delete values[\\"@type\\"];
      return await Page.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Video\\")) {
      delete values[\\"@type\\"];
      return await Video.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Event\\")) {
      delete values[\\"@type\\"];
      return await Event.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Group\\")) {
      delete values[\\"@type\\"];
      return await Group.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Note\\")) {
      delete values[\\"@type\\"];
      return await Note.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Organization\\")) {
      delete values[\\"@type\\"];
      return await Organization.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Person\\")) {
      delete values[\\"@type\\"];
      return await Person.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Place\\")) {
      delete values[\\"@type\\"];
      return await Place.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Profile\\")) {
      delete values[\\"@type\\"];
      return await Profile.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Relationship\\")) {
      delete values[\\"@type\\"];
      return await Relationship.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Service\\")) {
      delete values[\\"@type\\"];
      return await Service.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Tombstone\\")) {
      delete values[\\"@type\\"];
      return await Tombstone.fromJsonLd(values, options);
    }
    
    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Object\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = new this(
      { id: \\"@id\\" in values ? new URL(values[\\"@id\\"] as string) : undefined },
      options,
    );
    const _49BipA5dq9eoH8LX8xdsVumveTca: (Object | Link | PropertyValue | URL)[] = [];

    const _49BipA5dq9eoH8LX8xdsVumveTca__array = values[\\"https://www.w3.org/ns/activitystreams#attachment\\"];
    for (
      const v of _49BipA5dq9eoH8LX8xdsVumveTca__array == null
        ? []
        : _49BipA5dq9eoH8LX8xdsVumveTca__array.length === 1 && \\"@list\\" in _49BipA5dq9eoH8LX8xdsVumveTca__array[0]
        ? _49BipA5dq9eoH8LX8xdsVumveTca__array[0][\\"@list\\"]
        : _49BipA5dq9eoH8LX8xdsVumveTca__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _49BipA5dq9eoH8LX8xdsVumveTca.push(new URL(v[\\"@id\\"]));
        continue;
      }
      
      const decoded =
      typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& [\\"https://www.w3.org/ns/activitystreams#Object\\",\\"http://joinmastodon.org/ns#Emoji\\",\\"https://www.w3.org/ns/activitystreams#Activity\\",\\"https://www.w3.org/ns/activitystreams#Accept\\",\\"https://www.w3.org/ns/activitystreams#Add\\",\\"https://www.w3.org/ns/activitystreams#Announce\\",\\"https://www.w3.org/ns/activitystreams#Create\\",\\"https://www.w3.org/ns/activitystreams#Delete\\",\\"https://www.w3.org/ns/activitystreams#Dislike\\",\\"https://www.w3.org/ns/activitystreams#Flag\\",\\"https://www.w3.org/ns/activitystreams#Follow\\",\\"https://www.w3.org/ns/activitystreams#Ignore\\",\\"https://www.w3.org/ns/activitystreams#Block\\",\\"https://www.w3.org/ns/activitystreams#IntransitiveActivity\\",\\"https://www.w3.org/ns/activitystreams#Arrive\\",\\"https://www.w3.org/ns/activitystreams#Question\\",\\"https://www.w3.org/ns/activitystreams#Join\\",\\"https://www.w3.org/ns/activitystreams#Leave\\",\\"https://www.w3.org/ns/activitystreams#Like\\",\\"https://www.w3.org/ns/activitystreams#Listen\\",\\"https://www.w3.org/ns/activitystreams#Offer\\",\\"https://www.w3.org/ns/activitystreams#Invite\\",\\"https://www.w3.org/ns/activitystreams#Reject\\",\\"https://www.w3.org/ns/activitystreams#Remove\\",\\"https://www.w3.org/ns/activitystreams#Undo\\",\\"https://www.w3.org/ns/activitystreams#Update\\",\\"https://www.w3.org/ns/activitystreams#Application\\",\\"https://www.w3.org/ns/activitystreams#Article\\",\\"https://www.w3.org/ns/activitystreams#Collection\\",\\"https://www.w3.org/ns/activitystreams#CollectionPage\\",\\"https://www.w3.org/ns/activitystreams#OrderedCollectionPage\\",\\"https://www.w3.org/ns/activitystreams#OrderedCollection\\",\\"https://www.w3.org/ns/activitystreams#Document\\",\\"https://www.w3.org/ns/activitystreams#Audio\\",\\"https://www.w3.org/ns/activitystreams#Image\\",\\"https://www.w3.org/ns/activitystreams#Page\\",\\"https://www.w3.org/ns/activitystreams#Video\\",\\"https://www.w3.org/ns/activitystreams#Event\\",\\"https://www.w3.org/ns/activitystreams#Group\\",\\"https://www.w3.org/ns/activitystreams#Note\\",\\"https://www.w3.org/ns/activitystreams#Organization\\",\\"https://www.w3.org/ns/activitystreams#Person\\",\\"https://www.w3.org/ns/activitystreams#Place\\",\\"https://www.w3.org/ns/activitystreams#Profile\\",\\"https://www.w3.org/ns/activitystreams#Relationship\\",\\"https://www.w3.org/ns/activitystreams#Service\\",\\"https://www.w3.org/ns/activitystreams#Tombstone\\"].some(
            t => v[\\"@type\\"].includes(t)) ? await Object.fromJsonLd(
      v, options) : typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& [\\"https://www.w3.org/ns/activitystreams#Link\\",\\"https://www.w3.org/ns/activitystreams#Hashtag\\",\\"https://www.w3.org/ns/activitystreams#Mention\\"].some(
            t => v[\\"@type\\"].includes(t)) ? await Link.fromJsonLd(
      v, options) : typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& v[\\"@type\\"].includes(\\"http://schema.org#PropertyValue\\") ? await PropertyValue.fromJsonLd(
      v, options) : undefined
      ;
      if (typeof decoded === \\"undefined\\") continue;
      _49BipA5dq9eoH8LX8xdsVumveTca.push(decoded);
      
    }
    instance.#_49BipA5dq9eoH8LX8xdsVumveTca = _49BipA5dq9eoH8LX8xdsVumveTca;
    const _42CGqJ94zgQ3ZBbfHwD8Hrr2L5Py: (Application | Group | Organization | Person | Service | URL)[] = [];

    const _42CGqJ94zgQ3ZBbfHwD8Hrr2L5Py__array = values[\\"https://www.w3.org/ns/activitystreams#attributedTo\\"];
    for (
      const v of _42CGqJ94zgQ3ZBbfHwD8Hrr2L5Py__array == null
        ? []
        : _42CGqJ94zgQ3ZBbfHwD8Hrr2L5Py__array.length === 1 && \\"@list\\" in _42CGqJ94zgQ3ZBbfHwD8Hrr2L5Py__array[0]
        ? _42CGqJ94zgQ3ZBbfHwD8Hrr2L5Py__array[0][\\"@list\\"]
        : _42CGqJ94zgQ3ZBbfHwD8Hrr2L5Py__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _42CGqJ94zgQ3ZBbfHwD8Hrr2L5Py.push(new URL(v[\\"@id\\"]));
        continue;
      }
      
      const decoded =
      typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& v[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Application\\") ? await Application.fromJsonLd(
      v, options) : typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& v[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Group\\") ? await Group.fromJsonLd(
      v, options) : typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& v[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Organization\\") ? await Organization.fromJsonLd(
      v, options) : typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& v[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Person\\") ? await Person.fromJsonLd(
      v, options) : typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& v[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Service\\") ? await Service.fromJsonLd(
      v, options) : undefined
      ;
      if (typeof decoded === \\"undefined\\") continue;
      _42CGqJ94zgQ3ZBbfHwD8Hrr2L5Py.push(decoded);
      
    }
    instance.#_42CGqJ94zgQ3ZBbfHwD8Hrr2L5Py = _42CGqJ94zgQ3ZBbfHwD8Hrr2L5Py;
    const _3ocC3VVi88cEd5sPWL8djkZsvTN6: (Object | URL)[] = [];

    const _3ocC3VVi88cEd5sPWL8djkZsvTN6__array = values[\\"https://www.w3.org/ns/activitystreams#audience\\"];
    for (
      const v of _3ocC3VVi88cEd5sPWL8djkZsvTN6__array == null
        ? []
        : _3ocC3VVi88cEd5sPWL8djkZsvTN6__array.length === 1 && \\"@list\\" in _3ocC3VVi88cEd5sPWL8djkZsvTN6__array[0]
        ? _3ocC3VVi88cEd5sPWL8djkZsvTN6__array[0][\\"@list\\"]
        : _3ocC3VVi88cEd5sPWL8djkZsvTN6__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _3ocC3VVi88cEd5sPWL8djkZsvTN6.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _3ocC3VVi88cEd5sPWL8djkZsvTN6.push(await Object.fromJsonLd(
      v, options))
    }
    instance.#_3ocC3VVi88cEd5sPWL8djkZsvTN6 = _3ocC3VVi88cEd5sPWL8djkZsvTN6;
    const _4HuuRSdSrXq8Jj2J9gcdYfoCzeuz: ((string | LanguageString))[] = [];

    const _4HuuRSdSrXq8Jj2J9gcdYfoCzeuz__array = values[\\"https://www.w3.org/ns/activitystreams#content\\"];
    for (
      const v of _4HuuRSdSrXq8Jj2J9gcdYfoCzeuz__array == null
        ? []
        : _4HuuRSdSrXq8Jj2J9gcdYfoCzeuz__array.length === 1 && \\"@list\\" in _4HuuRSdSrXq8Jj2J9gcdYfoCzeuz__array[0]
        ? _4HuuRSdSrXq8Jj2J9gcdYfoCzeuz__array[0][\\"@list\\"]
        : _4HuuRSdSrXq8Jj2J9gcdYfoCzeuz__array
    ) {
      if (v == null) continue;
    
      const decoded =
      typeof v === \\"object\\" && \\"@value\\" in v
        && typeof v[\\"@value\\"] === \\"string\\" && !(\\"@language\\" in v) ? v[\\"@value\\"] : typeof v === \\"object\\" && \\"@language\\" in v && \\"@value\\" in v
        && typeof v[\\"@language\\"] === \\"string\\"
        && typeof v[\\"@value\\"] === \\"string\\" ? new LanguageString(v[\\"@value\\"], v[\\"@language\\"]) : undefined
      ;
      if (typeof decoded === \\"undefined\\") continue;
      _4HuuRSdSrXq8Jj2J9gcdYfoCzeuz.push(decoded);
      
    }
    instance.#_4HuuRSdSrXq8Jj2J9gcdYfoCzeuz = _4HuuRSdSrXq8Jj2J9gcdYfoCzeuz;
    const _3mhZzGXSpQ431mBSz2kvych22v4e: (Object | Link | URL)[] = [];

    const _3mhZzGXSpQ431mBSz2kvych22v4e__array = values[\\"https://www.w3.org/ns/activitystreams#context\\"];
    for (
      const v of _3mhZzGXSpQ431mBSz2kvych22v4e__array == null
        ? []
        : _3mhZzGXSpQ431mBSz2kvych22v4e__array.length === 1 && \\"@list\\" in _3mhZzGXSpQ431mBSz2kvych22v4e__array[0]
        ? _3mhZzGXSpQ431mBSz2kvych22v4e__array[0][\\"@list\\"]
        : _3mhZzGXSpQ431mBSz2kvych22v4e__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _3mhZzGXSpQ431mBSz2kvych22v4e.push(new URL(v[\\"@id\\"]));
        continue;
      }
      
      const decoded =
      typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& [\\"https://www.w3.org/ns/activitystreams#Object\\",\\"http://joinmastodon.org/ns#Emoji\\",\\"https://www.w3.org/ns/activitystreams#Activity\\",\\"https://www.w3.org/ns/activitystreams#Accept\\",\\"https://www.w3.org/ns/activitystreams#Add\\",\\"https://www.w3.org/ns/activitystreams#Announce\\",\\"https://www.w3.org/ns/activitystreams#Create\\",\\"https://www.w3.org/ns/activitystreams#Delete\\",\\"https://www.w3.org/ns/activitystreams#Dislike\\",\\"https://www.w3.org/ns/activitystreams#Flag\\",\\"https://www.w3.org/ns/activitystreams#Follow\\",\\"https://www.w3.org/ns/activitystreams#Ignore\\",\\"https://www.w3.org/ns/activitystreams#Block\\",\\"https://www.w3.org/ns/activitystreams#IntransitiveActivity\\",\\"https://www.w3.org/ns/activitystreams#Arrive\\",\\"https://www.w3.org/ns/activitystreams#Question\\",\\"https://www.w3.org/ns/activitystreams#Join\\",\\"https://www.w3.org/ns/activitystreams#Leave\\",\\"https://www.w3.org/ns/activitystreams#Like\\",\\"https://www.w3.org/ns/activitystreams#Listen\\",\\"https://www.w3.org/ns/activitystreams#Offer\\",\\"https://www.w3.org/ns/activitystreams#Invite\\",\\"https://www.w3.org/ns/activitystreams#Reject\\",\\"https://www.w3.org/ns/activitystreams#Remove\\",\\"https://www.w3.org/ns/activitystreams#Undo\\",\\"https://www.w3.org/ns/activitystreams#Update\\",\\"https://www.w3.org/ns/activitystreams#Application\\",\\"https://www.w3.org/ns/activitystreams#Article\\",\\"https://www.w3.org/ns/activitystreams#Collection\\",\\"https://www.w3.org/ns/activitystreams#CollectionPage\\",\\"https://www.w3.org/ns/activitystreams#OrderedCollectionPage\\",\\"https://www.w3.org/ns/activitystreams#OrderedCollection\\",\\"https://www.w3.org/ns/activitystreams#Document\\",\\"https://www.w3.org/ns/activitystreams#Audio\\",\\"https://www.w3.org/ns/activitystreams#Image\\",\\"https://www.w3.org/ns/activitystreams#Page\\",\\"https://www.w3.org/ns/activitystreams#Video\\",\\"https://www.w3.org/ns/activitystreams#Event\\",\\"https://www.w3.org/ns/activitystreams#Group\\",\\"https://www.w3.org/ns/activitystreams#Note\\",\\"https://www.w3.org/ns/activitystreams#Organization\\",\\"https://www.w3.org/ns/activitystreams#Person\\",\\"https://www.w3.org/ns/activitystreams#Place\\",\\"https://www.w3.org/ns/activitystreams#Profile\\",\\"https://www.w3.org/ns/activitystreams#Relationship\\",\\"https://www.w3.org/ns/activitystreams#Service\\",\\"https://www.w3.org/ns/activitystreams#Tombstone\\"].some(
            t => v[\\"@type\\"].includes(t)) ? await Object.fromJsonLd(
      v, options) : typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& [\\"https://www.w3.org/ns/activitystreams#Link\\",\\"https://www.w3.org/ns/activitystreams#Hashtag\\",\\"https://www.w3.org/ns/activitystreams#Mention\\"].some(
            t => v[\\"@type\\"].includes(t)) ? await Link.fromJsonLd(
      v, options) : undefined
      ;
      if (typeof decoded === \\"undefined\\") continue;
      _3mhZzGXSpQ431mBSz2kvych22v4e.push(decoded);
      
    }
    instance.#_3mhZzGXSpQ431mBSz2kvych22v4e = _3mhZzGXSpQ431mBSz2kvych22v4e;
    const _4ZHbBuK7PrsvGgrjM8wgc6KMWjav: ((string | LanguageString))[] = [];

    const _4ZHbBuK7PrsvGgrjM8wgc6KMWjav__array = values[\\"https://www.w3.org/ns/activitystreams#name\\"];
    for (
      const v of _4ZHbBuK7PrsvGgrjM8wgc6KMWjav__array == null
        ? []
        : _4ZHbBuK7PrsvGgrjM8wgc6KMWjav__array.length === 1 && \\"@list\\" in _4ZHbBuK7PrsvGgrjM8wgc6KMWjav__array[0]
        ? _4ZHbBuK7PrsvGgrjM8wgc6KMWjav__array[0][\\"@list\\"]
        : _4ZHbBuK7PrsvGgrjM8wgc6KMWjav__array
    ) {
      if (v == null) continue;
    
      const decoded =
      typeof v === \\"object\\" && \\"@value\\" in v
        && typeof v[\\"@value\\"] === \\"string\\" && !(\\"@language\\" in v) ? v[\\"@value\\"] : typeof v === \\"object\\" && \\"@language\\" in v && \\"@value\\" in v
        && typeof v[\\"@language\\"] === \\"string\\"
        && typeof v[\\"@value\\"] === \\"string\\" ? new LanguageString(v[\\"@value\\"], v[\\"@language\\"]) : undefined
      ;
      if (typeof decoded === \\"undefined\\") continue;
      _4ZHbBuK7PrsvGgrjM8wgc6KMWjav.push(decoded);
      
    }
    instance.#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav = _4ZHbBuK7PrsvGgrjM8wgc6KMWjav;
    const _219RwDanjScTv5tYCjwGZVCM7KZ9: (Temporal.Instant)[] = [];

    const _219RwDanjScTv5tYCjwGZVCM7KZ9__array = values[\\"https://www.w3.org/ns/activitystreams#endTime\\"];
    for (
      const v of _219RwDanjScTv5tYCjwGZVCM7KZ9__array == null
        ? []
        : _219RwDanjScTv5tYCjwGZVCM7KZ9__array.length === 1 && \\"@list\\" in _219RwDanjScTv5tYCjwGZVCM7KZ9__array[0]
        ? _219RwDanjScTv5tYCjwGZVCM7KZ9__array[0][\\"@list\\"]
        : _219RwDanjScTv5tYCjwGZVCM7KZ9__array
    ) {
      if (v == null) continue;
    _219RwDanjScTv5tYCjwGZVCM7KZ9.push(Temporal.Instant.from(v[\\"@value\\"]))
    }
    instance.#_219RwDanjScTv5tYCjwGZVCM7KZ9 = _219RwDanjScTv5tYCjwGZVCM7KZ9;
    const _86xFhmgBapoMvYqjbjRuDPayTrS: (Object | Link | URL)[] = [];

    const _86xFhmgBapoMvYqjbjRuDPayTrS__array = values[\\"https://www.w3.org/ns/activitystreams#generator\\"];
    for (
      const v of _86xFhmgBapoMvYqjbjRuDPayTrS__array == null
        ? []
        : _86xFhmgBapoMvYqjbjRuDPayTrS__array.length === 1 && \\"@list\\" in _86xFhmgBapoMvYqjbjRuDPayTrS__array[0]
        ? _86xFhmgBapoMvYqjbjRuDPayTrS__array[0][\\"@list\\"]
        : _86xFhmgBapoMvYqjbjRuDPayTrS__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _86xFhmgBapoMvYqjbjRuDPayTrS.push(new URL(v[\\"@id\\"]));
        continue;
      }
      
      const decoded =
      typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& [\\"https://www.w3.org/ns/activitystreams#Object\\",\\"http://joinmastodon.org/ns#Emoji\\",\\"https://www.w3.org/ns/activitystreams#Activity\\",\\"https://www.w3.org/ns/activitystreams#Accept\\",\\"https://www.w3.org/ns/activitystreams#Add\\",\\"https://www.w3.org/ns/activitystreams#Announce\\",\\"https://www.w3.org/ns/activitystreams#Create\\",\\"https://www.w3.org/ns/activitystreams#Delete\\",\\"https://www.w3.org/ns/activitystreams#Dislike\\",\\"https://www.w3.org/ns/activitystreams#Flag\\",\\"https://www.w3.org/ns/activitystreams#Follow\\",\\"https://www.w3.org/ns/activitystreams#Ignore\\",\\"https://www.w3.org/ns/activitystreams#Block\\",\\"https://www.w3.org/ns/activitystreams#IntransitiveActivity\\",\\"https://www.w3.org/ns/activitystreams#Arrive\\",\\"https://www.w3.org/ns/activitystreams#Question\\",\\"https://www.w3.org/ns/activitystreams#Join\\",\\"https://www.w3.org/ns/activitystreams#Leave\\",\\"https://www.w3.org/ns/activitystreams#Like\\",\\"https://www.w3.org/ns/activitystreams#Listen\\",\\"https://www.w3.org/ns/activitystreams#Offer\\",\\"https://www.w3.org/ns/activitystreams#Invite\\",\\"https://www.w3.org/ns/activitystreams#Reject\\",\\"https://www.w3.org/ns/activitystreams#Remove\\",\\"https://www.w3.org/ns/activitystreams#Undo\\",\\"https://www.w3.org/ns/activitystreams#Update\\",\\"https://www.w3.org/ns/activitystreams#Application\\",\\"https://www.w3.org/ns/activitystreams#Article\\",\\"https://www.w3.org/ns/activitystreams#Collection\\",\\"https://www.w3.org/ns/activitystreams#CollectionPage\\",\\"https://www.w3.org/ns/activitystreams#OrderedCollectionPage\\",\\"https://www.w3.org/ns/activitystreams#OrderedCollection\\",\\"https://www.w3.org/ns/activitystreams#Document\\",\\"https://www.w3.org/ns/activitystreams#Audio\\",\\"https://www.w3.org/ns/activitystreams#Image\\",\\"https://www.w3.org/ns/activitystreams#Page\\",\\"https://www.w3.org/ns/activitystreams#Video\\",\\"https://www.w3.org/ns/activitystreams#Event\\",\\"https://www.w3.org/ns/activitystreams#Group\\",\\"https://www.w3.org/ns/activitystreams#Note\\",\\"https://www.w3.org/ns/activitystreams#Organization\\",\\"https://www.w3.org/ns/activitystreams#Person\\",\\"https://www.w3.org/ns/activitystreams#Place\\",\\"https://www.w3.org/ns/activitystreams#Profile\\",\\"https://www.w3.org/ns/activitystreams#Relationship\\",\\"https://www.w3.org/ns/activitystreams#Service\\",\\"https://www.w3.org/ns/activitystreams#Tombstone\\"].some(
            t => v[\\"@type\\"].includes(t)) ? await Object.fromJsonLd(
      v, options) : typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& [\\"https://www.w3.org/ns/activitystreams#Link\\",\\"https://www.w3.org/ns/activitystreams#Hashtag\\",\\"https://www.w3.org/ns/activitystreams#Mention\\"].some(
            t => v[\\"@type\\"].includes(t)) ? await Link.fromJsonLd(
      v, options) : undefined
      ;
      if (typeof decoded === \\"undefined\\") continue;
      _86xFhmgBapoMvYqjbjRuDPayTrS.push(decoded);
      
    }
    instance.#_86xFhmgBapoMvYqjbjRuDPayTrS = _86xFhmgBapoMvYqjbjRuDPayTrS;
    const _33CjRLy5ujtsUrwRSCrsggvGdKuR: (Image | URL)[] = [];

    const _33CjRLy5ujtsUrwRSCrsggvGdKuR__array = values[\\"https://www.w3.org/ns/activitystreams#icon\\"];
    for (
      const v of _33CjRLy5ujtsUrwRSCrsggvGdKuR__array == null
        ? []
        : _33CjRLy5ujtsUrwRSCrsggvGdKuR__array.length === 1 && \\"@list\\" in _33CjRLy5ujtsUrwRSCrsggvGdKuR__array[0]
        ? _33CjRLy5ujtsUrwRSCrsggvGdKuR__array[0][\\"@list\\"]
        : _33CjRLy5ujtsUrwRSCrsggvGdKuR__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _33CjRLy5ujtsUrwRSCrsggvGdKuR.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _33CjRLy5ujtsUrwRSCrsggvGdKuR.push(await Image.fromJsonLd(
      v, options))
    }
    instance.#_33CjRLy5ujtsUrwRSCrsggvGdKuR = _33CjRLy5ujtsUrwRSCrsggvGdKuR;
    const _3dXrUdkARxwyJLtJcYi1AJ92H41U: (Image | URL)[] = [];

    const _3dXrUdkARxwyJLtJcYi1AJ92H41U__array = values[\\"https://www.w3.org/ns/activitystreams#image\\"];
    for (
      const v of _3dXrUdkARxwyJLtJcYi1AJ92H41U__array == null
        ? []
        : _3dXrUdkARxwyJLtJcYi1AJ92H41U__array.length === 1 && \\"@list\\" in _3dXrUdkARxwyJLtJcYi1AJ92H41U__array[0]
        ? _3dXrUdkARxwyJLtJcYi1AJ92H41U__array[0][\\"@list\\"]
        : _3dXrUdkARxwyJLtJcYi1AJ92H41U__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _3dXrUdkARxwyJLtJcYi1AJ92H41U.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _3dXrUdkARxwyJLtJcYi1AJ92H41U.push(await Image.fromJsonLd(
      v, options))
    }
    instance.#_3dXrUdkARxwyJLtJcYi1AJ92H41U = _3dXrUdkARxwyJLtJcYi1AJ92H41U;
    const _3fpbDrvZgf3Kq1a5V9aByFn8kx3s: (Object | Link | URL)[] = [];

    const _3fpbDrvZgf3Kq1a5V9aByFn8kx3s__array = values[\\"https://www.w3.org/ns/activitystreams#inReplyTo\\"];
    for (
      const v of _3fpbDrvZgf3Kq1a5V9aByFn8kx3s__array == null
        ? []
        : _3fpbDrvZgf3Kq1a5V9aByFn8kx3s__array.length === 1 && \\"@list\\" in _3fpbDrvZgf3Kq1a5V9aByFn8kx3s__array[0]
        ? _3fpbDrvZgf3Kq1a5V9aByFn8kx3s__array[0][\\"@list\\"]
        : _3fpbDrvZgf3Kq1a5V9aByFn8kx3s__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _3fpbDrvZgf3Kq1a5V9aByFn8kx3s.push(new URL(v[\\"@id\\"]));
        continue;
      }
      
      const decoded =
      typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& [\\"https://www.w3.org/ns/activitystreams#Object\\",\\"http://joinmastodon.org/ns#Emoji\\",\\"https://www.w3.org/ns/activitystreams#Activity\\",\\"https://www.w3.org/ns/activitystreams#Accept\\",\\"https://www.w3.org/ns/activitystreams#Add\\",\\"https://www.w3.org/ns/activitystreams#Announce\\",\\"https://www.w3.org/ns/activitystreams#Create\\",\\"https://www.w3.org/ns/activitystreams#Delete\\",\\"https://www.w3.org/ns/activitystreams#Dislike\\",\\"https://www.w3.org/ns/activitystreams#Flag\\",\\"https://www.w3.org/ns/activitystreams#Follow\\",\\"https://www.w3.org/ns/activitystreams#Ignore\\",\\"https://www.w3.org/ns/activitystreams#Block\\",\\"https://www.w3.org/ns/activitystreams#IntransitiveActivity\\",\\"https://www.w3.org/ns/activitystreams#Arrive\\",\\"https://www.w3.org/ns/activitystreams#Question\\",\\"https://www.w3.org/ns/activitystreams#Join\\",\\"https://www.w3.org/ns/activitystreams#Leave\\",\\"https://www.w3.org/ns/activitystreams#Like\\",\\"https://www.w3.org/ns/activitystreams#Listen\\",\\"https://www.w3.org/ns/activitystreams#Offer\\",\\"https://www.w3.org/ns/activitystreams#Invite\\",\\"https://www.w3.org/ns/activitystreams#Reject\\",\\"https://www.w3.org/ns/activitystreams#Remove\\",\\"https://www.w3.org/ns/activitystreams#Undo\\",\\"https://www.w3.org/ns/activitystreams#Update\\",\\"https://www.w3.org/ns/activitystreams#Application\\",\\"https://www.w3.org/ns/activitystreams#Article\\",\\"https://www.w3.org/ns/activitystreams#Collection\\",\\"https://www.w3.org/ns/activitystreams#CollectionPage\\",\\"https://www.w3.org/ns/activitystreams#OrderedCollectionPage\\",\\"https://www.w3.org/ns/activitystreams#OrderedCollection\\",\\"https://www.w3.org/ns/activitystreams#Document\\",\\"https://www.w3.org/ns/activitystreams#Audio\\",\\"https://www.w3.org/ns/activitystreams#Image\\",\\"https://www.w3.org/ns/activitystreams#Page\\",\\"https://www.w3.org/ns/activitystreams#Video\\",\\"https://www.w3.org/ns/activitystreams#Event\\",\\"https://www.w3.org/ns/activitystreams#Group\\",\\"https://www.w3.org/ns/activitystreams#Note\\",\\"https://www.w3.org/ns/activitystreams#Organization\\",\\"https://www.w3.org/ns/activitystreams#Person\\",\\"https://www.w3.org/ns/activitystreams#Place\\",\\"https://www.w3.org/ns/activitystreams#Profile\\",\\"https://www.w3.org/ns/activitystreams#Relationship\\",\\"https://www.w3.org/ns/activitystreams#Service\\",\\"https://www.w3.org/ns/activitystreams#Tombstone\\"].some(
            t => v[\\"@type\\"].includes(t)) ? await Object.fromJsonLd(
      v, options) : typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& [\\"https://www.w3.org/ns/activitystreams#Link\\",\\"https://www.w3.org/ns/activitystreams#Hashtag\\",\\"https://www.w3.org/ns/activitystreams#Mention\\"].some(
            t => v[\\"@type\\"].includes(t)) ? await Link.fromJsonLd(
      v, options) : undefined
      ;
      if (typeof decoded === \\"undefined\\") continue;
      _3fpbDrvZgf3Kq1a5V9aByFn8kx3s.push(decoded);
      
    }
    instance.#_3fpbDrvZgf3Kq1a5V9aByFn8kx3s = _3fpbDrvZgf3Kq1a5V9aByFn8kx3s;
    const _31k5MUZJsnsPNg8dQQJieWaXTFnR: (Object | Link | URL)[] = [];

    const _31k5MUZJsnsPNg8dQQJieWaXTFnR__array = values[\\"https://www.w3.org/ns/activitystreams#location\\"];
    for (
      const v of _31k5MUZJsnsPNg8dQQJieWaXTFnR__array == null
        ? []
        : _31k5MUZJsnsPNg8dQQJieWaXTFnR__array.length === 1 && \\"@list\\" in _31k5MUZJsnsPNg8dQQJieWaXTFnR__array[0]
        ? _31k5MUZJsnsPNg8dQQJieWaXTFnR__array[0][\\"@list\\"]
        : _31k5MUZJsnsPNg8dQQJieWaXTFnR__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _31k5MUZJsnsPNg8dQQJieWaXTFnR.push(new URL(v[\\"@id\\"]));
        continue;
      }
      
      const decoded =
      typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& [\\"https://www.w3.org/ns/activitystreams#Object\\",\\"http://joinmastodon.org/ns#Emoji\\",\\"https://www.w3.org/ns/activitystreams#Activity\\",\\"https://www.w3.org/ns/activitystreams#Accept\\",\\"https://www.w3.org/ns/activitystreams#Add\\",\\"https://www.w3.org/ns/activitystreams#Announce\\",\\"https://www.w3.org/ns/activitystreams#Create\\",\\"https://www.w3.org/ns/activitystreams#Delete\\",\\"https://www.w3.org/ns/activitystreams#Dislike\\",\\"https://www.w3.org/ns/activitystreams#Flag\\",\\"https://www.w3.org/ns/activitystreams#Follow\\",\\"https://www.w3.org/ns/activitystreams#Ignore\\",\\"https://www.w3.org/ns/activitystreams#Block\\",\\"https://www.w3.org/ns/activitystreams#IntransitiveActivity\\",\\"https://www.w3.org/ns/activitystreams#Arrive\\",\\"https://www.w3.org/ns/activitystreams#Question\\",\\"https://www.w3.org/ns/activitystreams#Join\\",\\"https://www.w3.org/ns/activitystreams#Leave\\",\\"https://www.w3.org/ns/activitystreams#Like\\",\\"https://www.w3.org/ns/activitystreams#Listen\\",\\"https://www.w3.org/ns/activitystreams#Offer\\",\\"https://www.w3.org/ns/activitystreams#Invite\\",\\"https://www.w3.org/ns/activitystreams#Reject\\",\\"https://www.w3.org/ns/activitystreams#Remove\\",\\"https://www.w3.org/ns/activitystreams#Undo\\",\\"https://www.w3.org/ns/activitystreams#Update\\",\\"https://www.w3.org/ns/activitystreams#Application\\",\\"https://www.w3.org/ns/activitystreams#Article\\",\\"https://www.w3.org/ns/activitystreams#Collection\\",\\"https://www.w3.org/ns/activitystreams#CollectionPage\\",\\"https://www.w3.org/ns/activitystreams#OrderedCollectionPage\\",\\"https://www.w3.org/ns/activitystreams#OrderedCollection\\",\\"https://www.w3.org/ns/activitystreams#Document\\",\\"https://www.w3.org/ns/activitystreams#Audio\\",\\"https://www.w3.org/ns/activitystreams#Image\\",\\"https://www.w3.org/ns/activitystreams#Page\\",\\"https://www.w3.org/ns/activitystreams#Video\\",\\"https://www.w3.org/ns/activitystreams#Event\\",\\"https://www.w3.org/ns/activitystreams#Group\\",\\"https://www.w3.org/ns/activitystreams#Note\\",\\"https://www.w3.org/ns/activitystreams#Organization\\",\\"https://www.w3.org/ns/activitystreams#Person\\",\\"https://www.w3.org/ns/activitystreams#Place\\",\\"https://www.w3.org/ns/activitystreams#Profile\\",\\"https://www.w3.org/ns/activitystreams#Relationship\\",\\"https://www.w3.org/ns/activitystreams#Service\\",\\"https://www.w3.org/ns/activitystreams#Tombstone\\"].some(
            t => v[\\"@type\\"].includes(t)) ? await Object.fromJsonLd(
      v, options) : typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& [\\"https://www.w3.org/ns/activitystreams#Link\\",\\"https://www.w3.org/ns/activitystreams#Hashtag\\",\\"https://www.w3.org/ns/activitystreams#Mention\\"].some(
            t => v[\\"@type\\"].includes(t)) ? await Link.fromJsonLd(
      v, options) : undefined
      ;
      if (typeof decoded === \\"undefined\\") continue;
      _31k5MUZJsnsPNg8dQQJieWaXTFnR.push(decoded);
      
    }
    instance.#_31k5MUZJsnsPNg8dQQJieWaXTFnR = _31k5MUZJsnsPNg8dQQJieWaXTFnR;
    const _gCVTegXxWWCw6wWRxa1QF65zusg: (Link | Object | URL)[] = [];

    const _gCVTegXxWWCw6wWRxa1QF65zusg__array = values[\\"https://www.w3.org/ns/activitystreams#preview\\"];
    for (
      const v of _gCVTegXxWWCw6wWRxa1QF65zusg__array == null
        ? []
        : _gCVTegXxWWCw6wWRxa1QF65zusg__array.length === 1 && \\"@list\\" in _gCVTegXxWWCw6wWRxa1QF65zusg__array[0]
        ? _gCVTegXxWWCw6wWRxa1QF65zusg__array[0][\\"@list\\"]
        : _gCVTegXxWWCw6wWRxa1QF65zusg__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _gCVTegXxWWCw6wWRxa1QF65zusg.push(new URL(v[\\"@id\\"]));
        continue;
      }
      
      const decoded =
      typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& [\\"https://www.w3.org/ns/activitystreams#Link\\",\\"https://www.w3.org/ns/activitystreams#Hashtag\\",\\"https://www.w3.org/ns/activitystreams#Mention\\"].some(
            t => v[\\"@type\\"].includes(t)) ? await Link.fromJsonLd(
      v, options) : typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& [\\"https://www.w3.org/ns/activitystreams#Object\\",\\"http://joinmastodon.org/ns#Emoji\\",\\"https://www.w3.org/ns/activitystreams#Activity\\",\\"https://www.w3.org/ns/activitystreams#Accept\\",\\"https://www.w3.org/ns/activitystreams#Add\\",\\"https://www.w3.org/ns/activitystreams#Announce\\",\\"https://www.w3.org/ns/activitystreams#Create\\",\\"https://www.w3.org/ns/activitystreams#Delete\\",\\"https://www.w3.org/ns/activitystreams#Dislike\\",\\"https://www.w3.org/ns/activitystreams#Flag\\",\\"https://www.w3.org/ns/activitystreams#Follow\\",\\"https://www.w3.org/ns/activitystreams#Ignore\\",\\"https://www.w3.org/ns/activitystreams#Block\\",\\"https://www.w3.org/ns/activitystreams#IntransitiveActivity\\",\\"https://www.w3.org/ns/activitystreams#Arrive\\",\\"https://www.w3.org/ns/activitystreams#Question\\",\\"https://www.w3.org/ns/activitystreams#Join\\",\\"https://www.w3.org/ns/activitystreams#Leave\\",\\"https://www.w3.org/ns/activitystreams#Like\\",\\"https://www.w3.org/ns/activitystreams#Listen\\",\\"https://www.w3.org/ns/activitystreams#Offer\\",\\"https://www.w3.org/ns/activitystreams#Invite\\",\\"https://www.w3.org/ns/activitystreams#Reject\\",\\"https://www.w3.org/ns/activitystreams#Remove\\",\\"https://www.w3.org/ns/activitystreams#Undo\\",\\"https://www.w3.org/ns/activitystreams#Update\\",\\"https://www.w3.org/ns/activitystreams#Application\\",\\"https://www.w3.org/ns/activitystreams#Article\\",\\"https://www.w3.org/ns/activitystreams#Collection\\",\\"https://www.w3.org/ns/activitystreams#CollectionPage\\",\\"https://www.w3.org/ns/activitystreams#OrderedCollectionPage\\",\\"https://www.w3.org/ns/activitystreams#OrderedCollection\\",\\"https://www.w3.org/ns/activitystreams#Document\\",\\"https://www.w3.org/ns/activitystreams#Audio\\",\\"https://www.w3.org/ns/activitystreams#Image\\",\\"https://www.w3.org/ns/activitystreams#Page\\",\\"https://www.w3.org/ns/activitystreams#Video\\",\\"https://www.w3.org/ns/activitystreams#Event\\",\\"https://www.w3.org/ns/activitystreams#Group\\",\\"https://www.w3.org/ns/activitystreams#Note\\",\\"https://www.w3.org/ns/activitystreams#Organization\\",\\"https://www.w3.org/ns/activitystreams#Person\\",\\"https://www.w3.org/ns/activitystreams#Place\\",\\"https://www.w3.org/ns/activitystreams#Profile\\",\\"https://www.w3.org/ns/activitystreams#Relationship\\",\\"https://www.w3.org/ns/activitystreams#Service\\",\\"https://www.w3.org/ns/activitystreams#Tombstone\\"].some(
            t => v[\\"@type\\"].includes(t)) ? await Object.fromJsonLd(
      v, options) : undefined
      ;
      if (typeof decoded === \\"undefined\\") continue;
      _gCVTegXxWWCw6wWRxa1QF65zusg.push(decoded);
      
    }
    instance.#_gCVTegXxWWCw6wWRxa1QF65zusg = _gCVTegXxWWCw6wWRxa1QF65zusg;
    const _5e258TDXtuhaFRPZiGoDfEpjdMr: (Temporal.Instant)[] = [];

    const _5e258TDXtuhaFRPZiGoDfEpjdMr__array = values[\\"https://www.w3.org/ns/activitystreams#published\\"];
    for (
      const v of _5e258TDXtuhaFRPZiGoDfEpjdMr__array == null
        ? []
        : _5e258TDXtuhaFRPZiGoDfEpjdMr__array.length === 1 && \\"@list\\" in _5e258TDXtuhaFRPZiGoDfEpjdMr__array[0]
        ? _5e258TDXtuhaFRPZiGoDfEpjdMr__array[0][\\"@list\\"]
        : _5e258TDXtuhaFRPZiGoDfEpjdMr__array
    ) {
      if (v == null) continue;
    _5e258TDXtuhaFRPZiGoDfEpjdMr.push(Temporal.Instant.from(v[\\"@value\\"]))
    }
    instance.#_5e258TDXtuhaFRPZiGoDfEpjdMr = _5e258TDXtuhaFRPZiGoDfEpjdMr;
    const _7UpwM3JWcXhADcscukEehBorf6k: (Collection | URL)[] = [];

    const _7UpwM3JWcXhADcscukEehBorf6k__array = values[\\"https://www.w3.org/ns/activitystreams#replies\\"];
    for (
      const v of _7UpwM3JWcXhADcscukEehBorf6k__array == null
        ? []
        : _7UpwM3JWcXhADcscukEehBorf6k__array.length === 1 && \\"@list\\" in _7UpwM3JWcXhADcscukEehBorf6k__array[0]
        ? _7UpwM3JWcXhADcscukEehBorf6k__array[0][\\"@list\\"]
        : _7UpwM3JWcXhADcscukEehBorf6k__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _7UpwM3JWcXhADcscukEehBorf6k.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _7UpwM3JWcXhADcscukEehBorf6k.push(await Collection.fromJsonLd(
      v, options))
    }
    instance.#_7UpwM3JWcXhADcscukEehBorf6k = _7UpwM3JWcXhADcscukEehBorf6k;
    const _2w3Jmue4up8iVDUA51WZqomEF438: (Temporal.Instant)[] = [];

    const _2w3Jmue4up8iVDUA51WZqomEF438__array = values[\\"https://www.w3.org/ns/activitystreams#startTime\\"];
    for (
      const v of _2w3Jmue4up8iVDUA51WZqomEF438__array == null
        ? []
        : _2w3Jmue4up8iVDUA51WZqomEF438__array.length === 1 && \\"@list\\" in _2w3Jmue4up8iVDUA51WZqomEF438__array[0]
        ? _2w3Jmue4up8iVDUA51WZqomEF438__array[0][\\"@list\\"]
        : _2w3Jmue4up8iVDUA51WZqomEF438__array
    ) {
      if (v == null) continue;
    _2w3Jmue4up8iVDUA51WZqomEF438.push(Temporal.Instant.from(v[\\"@value\\"]))
    }
    instance.#_2w3Jmue4up8iVDUA51WZqomEF438 = _2w3Jmue4up8iVDUA51WZqomEF438;
    const _4LqirZspQbFWWQEbFcXAxm7tTDN1: ((string | LanguageString))[] = [];

    const _4LqirZspQbFWWQEbFcXAxm7tTDN1__array = values[\\"https://www.w3.org/ns/activitystreams#summary\\"];
    for (
      const v of _4LqirZspQbFWWQEbFcXAxm7tTDN1__array == null
        ? []
        : _4LqirZspQbFWWQEbFcXAxm7tTDN1__array.length === 1 && \\"@list\\" in _4LqirZspQbFWWQEbFcXAxm7tTDN1__array[0]
        ? _4LqirZspQbFWWQEbFcXAxm7tTDN1__array[0][\\"@list\\"]
        : _4LqirZspQbFWWQEbFcXAxm7tTDN1__array
    ) {
      if (v == null) continue;
    
      const decoded =
      typeof v === \\"object\\" && \\"@value\\" in v
        && typeof v[\\"@value\\"] === \\"string\\" && !(\\"@language\\" in v) ? v[\\"@value\\"] : typeof v === \\"object\\" && \\"@language\\" in v && \\"@value\\" in v
        && typeof v[\\"@language\\"] === \\"string\\"
        && typeof v[\\"@value\\"] === \\"string\\" ? new LanguageString(v[\\"@value\\"], v[\\"@language\\"]) : undefined
      ;
      if (typeof decoded === \\"undefined\\") continue;
      _4LqirZspQbFWWQEbFcXAxm7tTDN1.push(decoded);
      
    }
    instance.#_4LqirZspQbFWWQEbFcXAxm7tTDN1 = _4LqirZspQbFWWQEbFcXAxm7tTDN1;
    const _5chuqj6s95p5gg2sk1HntGfarRf: (Object | Link | URL)[] = [];

    const _5chuqj6s95p5gg2sk1HntGfarRf__array = values[\\"https://www.w3.org/ns/activitystreams#tag\\"];
    for (
      const v of _5chuqj6s95p5gg2sk1HntGfarRf__array == null
        ? []
        : _5chuqj6s95p5gg2sk1HntGfarRf__array.length === 1 && \\"@list\\" in _5chuqj6s95p5gg2sk1HntGfarRf__array[0]
        ? _5chuqj6s95p5gg2sk1HntGfarRf__array[0][\\"@list\\"]
        : _5chuqj6s95p5gg2sk1HntGfarRf__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _5chuqj6s95p5gg2sk1HntGfarRf.push(new URL(v[\\"@id\\"]));
        continue;
      }
      
      const decoded =
      typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& [\\"https://www.w3.org/ns/activitystreams#Object\\",\\"http://joinmastodon.org/ns#Emoji\\",\\"https://www.w3.org/ns/activitystreams#Activity\\",\\"https://www.w3.org/ns/activitystreams#Accept\\",\\"https://www.w3.org/ns/activitystreams#Add\\",\\"https://www.w3.org/ns/activitystreams#Announce\\",\\"https://www.w3.org/ns/activitystreams#Create\\",\\"https://www.w3.org/ns/activitystreams#Delete\\",\\"https://www.w3.org/ns/activitystreams#Dislike\\",\\"https://www.w3.org/ns/activitystreams#Flag\\",\\"https://www.w3.org/ns/activitystreams#Follow\\",\\"https://www.w3.org/ns/activitystreams#Ignore\\",\\"https://www.w3.org/ns/activitystreams#Block\\",\\"https://www.w3.org/ns/activitystreams#IntransitiveActivity\\",\\"https://www.w3.org/ns/activitystreams#Arrive\\",\\"https://www.w3.org/ns/activitystreams#Question\\",\\"https://www.w3.org/ns/activitystreams#Join\\",\\"https://www.w3.org/ns/activitystreams#Leave\\",\\"https://www.w3.org/ns/activitystreams#Like\\",\\"https://www.w3.org/ns/activitystreams#Listen\\",\\"https://www.w3.org/ns/activitystreams#Offer\\",\\"https://www.w3.org/ns/activitystreams#Invite\\",\\"https://www.w3.org/ns/activitystreams#Reject\\",\\"https://www.w3.org/ns/activitystreams#Remove\\",\\"https://www.w3.org/ns/activitystreams#Undo\\",\\"https://www.w3.org/ns/activitystreams#Update\\",\\"https://www.w3.org/ns/activitystreams#Application\\",\\"https://www.w3.org/ns/activitystreams#Article\\",\\"https://www.w3.org/ns/activitystreams#Collection\\",\\"https://www.w3.org/ns/activitystreams#CollectionPage\\",\\"https://www.w3.org/ns/activitystreams#OrderedCollectionPage\\",\\"https://www.w3.org/ns/activitystreams#OrderedCollection\\",\\"https://www.w3.org/ns/activitystreams#Document\\",\\"https://www.w3.org/ns/activitystreams#Audio\\",\\"https://www.w3.org/ns/activitystreams#Image\\",\\"https://www.w3.org/ns/activitystreams#Page\\",\\"https://www.w3.org/ns/activitystreams#Video\\",\\"https://www.w3.org/ns/activitystreams#Event\\",\\"https://www.w3.org/ns/activitystreams#Group\\",\\"https://www.w3.org/ns/activitystreams#Note\\",\\"https://www.w3.org/ns/activitystreams#Organization\\",\\"https://www.w3.org/ns/activitystreams#Person\\",\\"https://www.w3.org/ns/activitystreams#Place\\",\\"https://www.w3.org/ns/activitystreams#Profile\\",\\"https://www.w3.org/ns/activitystreams#Relationship\\",\\"https://www.w3.org/ns/activitystreams#Service\\",\\"https://www.w3.org/ns/activitystreams#Tombstone\\"].some(
            t => v[\\"@type\\"].includes(t)) ? await Object.fromJsonLd(
      v, options) : typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& [\\"https://www.w3.org/ns/activitystreams#Link\\",\\"https://www.w3.org/ns/activitystreams#Hashtag\\",\\"https://www.w3.org/ns/activitystreams#Mention\\"].some(
            t => v[\\"@type\\"].includes(t)) ? await Link.fromJsonLd(
      v, options) : undefined
      ;
      if (typeof decoded === \\"undefined\\") continue;
      _5chuqj6s95p5gg2sk1HntGfarRf.push(decoded);
      
    }
    instance.#_5chuqj6s95p5gg2sk1HntGfarRf = _5chuqj6s95p5gg2sk1HntGfarRf;
    const _385aB7ySixcf5Un6z3VsWmThgCzQ: (Temporal.Instant)[] = [];

    const _385aB7ySixcf5Un6z3VsWmThgCzQ__array = values[\\"https://www.w3.org/ns/activitystreams#updated\\"];
    for (
      const v of _385aB7ySixcf5Un6z3VsWmThgCzQ__array == null
        ? []
        : _385aB7ySixcf5Un6z3VsWmThgCzQ__array.length === 1 && \\"@list\\" in _385aB7ySixcf5Un6z3VsWmThgCzQ__array[0]
        ? _385aB7ySixcf5Un6z3VsWmThgCzQ__array[0][\\"@list\\"]
        : _385aB7ySixcf5Un6z3VsWmThgCzQ__array
    ) {
      if (v == null) continue;
    _385aB7ySixcf5Un6z3VsWmThgCzQ.push(Temporal.Instant.from(v[\\"@value\\"]))
    }
    instance.#_385aB7ySixcf5Un6z3VsWmThgCzQ = _385aB7ySixcf5Un6z3VsWmThgCzQ;
    const _2oPEH9MQ3aj8JVwyYuWkqoVwV865: ((URL | Link))[] = [];

    const _2oPEH9MQ3aj8JVwyYuWkqoVwV865__array = values[\\"https://www.w3.org/ns/activitystreams#url\\"];
    for (
      const v of _2oPEH9MQ3aj8JVwyYuWkqoVwV865__array == null
        ? []
        : _2oPEH9MQ3aj8JVwyYuWkqoVwV865__array.length === 1 && \\"@list\\" in _2oPEH9MQ3aj8JVwyYuWkqoVwV865__array[0]
        ? _2oPEH9MQ3aj8JVwyYuWkqoVwV865__array[0][\\"@list\\"]
        : _2oPEH9MQ3aj8JVwyYuWkqoVwV865__array
    ) {
      if (v == null) continue;
    
      const decoded =
      typeof v === \\"object\\" && \\"@id\\" in v
        && typeof v[\\"@id\\"] === \\"string\\" ? new URL(v[\\"@id\\"]) : typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& [\\"https://www.w3.org/ns/activitystreams#Link\\",\\"https://www.w3.org/ns/activitystreams#Hashtag\\",\\"https://www.w3.org/ns/activitystreams#Mention\\"].some(
            t => v[\\"@type\\"].includes(t)) ? await Link.fromJsonLd(
      v, options) : undefined
      ;
      if (typeof decoded === \\"undefined\\") continue;
      _2oPEH9MQ3aj8JVwyYuWkqoVwV865.push(decoded);
      
    }
    instance.#_2oPEH9MQ3aj8JVwyYuWkqoVwV865 = _2oPEH9MQ3aj8JVwyYuWkqoVwV865;
    const _3hFbw7DTpHhq3cvVhkY8njhcsXbd: (Object | URL)[] = [];

    const _3hFbw7DTpHhq3cvVhkY8njhcsXbd__array = values[\\"https://www.w3.org/ns/activitystreams#to\\"];
    for (
      const v of _3hFbw7DTpHhq3cvVhkY8njhcsXbd__array == null
        ? []
        : _3hFbw7DTpHhq3cvVhkY8njhcsXbd__array.length === 1 && \\"@list\\" in _3hFbw7DTpHhq3cvVhkY8njhcsXbd__array[0]
        ? _3hFbw7DTpHhq3cvVhkY8njhcsXbd__array[0][\\"@list\\"]
        : _3hFbw7DTpHhq3cvVhkY8njhcsXbd__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _3hFbw7DTpHhq3cvVhkY8njhcsXbd.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _3hFbw7DTpHhq3cvVhkY8njhcsXbd.push(await Object.fromJsonLd(
      v, options))
    }
    instance.#_3hFbw7DTpHhq3cvVhkY8njhcsXbd = _3hFbw7DTpHhq3cvVhkY8njhcsXbd;
    const _aLZupjwL8XB7tzdLgCMXdjZ6qej: (Object | URL)[] = [];

    const _aLZupjwL8XB7tzdLgCMXdjZ6qej__array = values[\\"https://www.w3.org/ns/activitystreams#bto\\"];
    for (
      const v of _aLZupjwL8XB7tzdLgCMXdjZ6qej__array == null
        ? []
        : _aLZupjwL8XB7tzdLgCMXdjZ6qej__array.length === 1 && \\"@list\\" in _aLZupjwL8XB7tzdLgCMXdjZ6qej__array[0]
        ? _aLZupjwL8XB7tzdLgCMXdjZ6qej__array[0][\\"@list\\"]
        : _aLZupjwL8XB7tzdLgCMXdjZ6qej__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _aLZupjwL8XB7tzdLgCMXdjZ6qej.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _aLZupjwL8XB7tzdLgCMXdjZ6qej.push(await Object.fromJsonLd(
      v, options))
    }
    instance.#_aLZupjwL8XB7tzdLgCMXdjZ6qej = _aLZupjwL8XB7tzdLgCMXdjZ6qej;
    const _42a1SvBs24QSLzKcfjCyNTjW5a1g: (Object | URL)[] = [];

    const _42a1SvBs24QSLzKcfjCyNTjW5a1g__array = values[\\"https://www.w3.org/ns/activitystreams#cc\\"];
    for (
      const v of _42a1SvBs24QSLzKcfjCyNTjW5a1g__array == null
        ? []
        : _42a1SvBs24QSLzKcfjCyNTjW5a1g__array.length === 1 && \\"@list\\" in _42a1SvBs24QSLzKcfjCyNTjW5a1g__array[0]
        ? _42a1SvBs24QSLzKcfjCyNTjW5a1g__array[0][\\"@list\\"]
        : _42a1SvBs24QSLzKcfjCyNTjW5a1g__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _42a1SvBs24QSLzKcfjCyNTjW5a1g.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _42a1SvBs24QSLzKcfjCyNTjW5a1g.push(await Object.fromJsonLd(
      v, options))
    }
    instance.#_42a1SvBs24QSLzKcfjCyNTjW5a1g = _42a1SvBs24QSLzKcfjCyNTjW5a1g;
    const _3qvegKUB8YLgTXRpEf8E6JZSkz2H: (Object | URL)[] = [];

    const _3qvegKUB8YLgTXRpEf8E6JZSkz2H__array = values[\\"https://www.w3.org/ns/activitystreams#bcc\\"];
    for (
      const v of _3qvegKUB8YLgTXRpEf8E6JZSkz2H__array == null
        ? []
        : _3qvegKUB8YLgTXRpEf8E6JZSkz2H__array.length === 1 && \\"@list\\" in _3qvegKUB8YLgTXRpEf8E6JZSkz2H__array[0]
        ? _3qvegKUB8YLgTXRpEf8E6JZSkz2H__array[0][\\"@list\\"]
        : _3qvegKUB8YLgTXRpEf8E6JZSkz2H__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _3qvegKUB8YLgTXRpEf8E6JZSkz2H.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _3qvegKUB8YLgTXRpEf8E6JZSkz2H.push(await Object.fromJsonLd(
      v, options))
    }
    instance.#_3qvegKUB8YLgTXRpEf8E6JZSkz2H = _3qvegKUB8YLgTXRpEf8E6JZSkz2H;
    const _3BLrzmscsjHCw8TF5BHRW9WkPnX8: (string)[] = [];

    const _3BLrzmscsjHCw8TF5BHRW9WkPnX8__array = values[\\"https://www.w3.org/ns/activitystreams#mediaType\\"];
    for (
      const v of _3BLrzmscsjHCw8TF5BHRW9WkPnX8__array == null
        ? []
        : _3BLrzmscsjHCw8TF5BHRW9WkPnX8__array.length === 1 && \\"@list\\" in _3BLrzmscsjHCw8TF5BHRW9WkPnX8__array[0]
        ? _3BLrzmscsjHCw8TF5BHRW9WkPnX8__array[0][\\"@list\\"]
        : _3BLrzmscsjHCw8TF5BHRW9WkPnX8__array
    ) {
      if (v == null) continue;
    _3BLrzmscsjHCw8TF5BHRW9WkPnX8.push(v[\\"@value\\"])
    }
    instance.#_3BLrzmscsjHCw8TF5BHRW9WkPnX8 = _3BLrzmscsjHCw8TF5BHRW9WkPnX8;
    const _3bNvLMBN1bCJETiTihM3wvi1B2JX: (Temporal.Duration)[] = [];

    const _3bNvLMBN1bCJETiTihM3wvi1B2JX__array = values[\\"https://www.w3.org/ns/activitystreams#duration\\"];
    for (
      const v of _3bNvLMBN1bCJETiTihM3wvi1B2JX__array == null
        ? []
        : _3bNvLMBN1bCJETiTihM3wvi1B2JX__array.length === 1 && \\"@list\\" in _3bNvLMBN1bCJETiTihM3wvi1B2JX__array[0]
        ? _3bNvLMBN1bCJETiTihM3wvi1B2JX__array[0][\\"@list\\"]
        : _3bNvLMBN1bCJETiTihM3wvi1B2JX__array
    ) {
      if (v == null) continue;
    _3bNvLMBN1bCJETiTihM3wvi1B2JX.push(Temporal.Duration.from(v[\\"@value\\"]))
    }
    instance.#_3bNvLMBN1bCJETiTihM3wvi1B2JX = _3bNvLMBN1bCJETiTihM3wvi1B2JX;
    const _u8gdcDTtChQ4tbSQMXc4cYWyum7: (boolean)[] = [];

    const _u8gdcDTtChQ4tbSQMXc4cYWyum7__array = values[\\"https://www.w3.org/ns/activitystreams#sensitive\\"];
    for (
      const v of _u8gdcDTtChQ4tbSQMXc4cYWyum7__array == null
        ? []
        : _u8gdcDTtChQ4tbSQMXc4cYWyum7__array.length === 1 && \\"@list\\" in _u8gdcDTtChQ4tbSQMXc4cYWyum7__array[0]
        ? _u8gdcDTtChQ4tbSQMXc4cYWyum7__array[0][\\"@list\\"]
        : _u8gdcDTtChQ4tbSQMXc4cYWyum7__array
    ) {
      if (v == null) continue;
    _u8gdcDTtChQ4tbSQMXc4cYWyum7.push(v[\\"@value\\"])
    }
    instance.#_u8gdcDTtChQ4tbSQMXc4cYWyum7 = _u8gdcDTtChQ4tbSQMXc4cYWyum7;
    const _42rPnotok1ivQ2RNCKNbeFJgx8b8: (DataIntegrityProof | URL)[] = [];

    const _42rPnotok1ivQ2RNCKNbeFJgx8b8__array = values[\\"https://w3id.org/security#proof\\"];
    for (
      const v of _42rPnotok1ivQ2RNCKNbeFJgx8b8__array == null
        ? []
        : _42rPnotok1ivQ2RNCKNbeFJgx8b8__array.length === 1 && \\"@list\\" in _42rPnotok1ivQ2RNCKNbeFJgx8b8__array[0]
        ? _42rPnotok1ivQ2RNCKNbeFJgx8b8__array[0][\\"@list\\"]
        : _42rPnotok1ivQ2RNCKNbeFJgx8b8__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _42rPnotok1ivQ2RNCKNbeFJgx8b8.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _42rPnotok1ivQ2RNCKNbeFJgx8b8.push(await DataIntegrityProof.fromJsonLd(
      v, options))
    }
    instance.#_42rPnotok1ivQ2RNCKNbeFJgx8b8 = _42rPnotok1ivQ2RNCKNbeFJgx8b8;
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  
    const proxy: Record<string, unknown> = {};
    if (this.id != null) {
      proxy.id = {
        [Symbol.for(\\"Deno.customInspect\\")]: (
          inspect: typeof Deno.inspect,
          options: Deno.InspectOptions,
        ): string => \\"URL \\" + inspect(this.id!.href, options),
        [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
          _depth: number,
          options: unknown,
          inspect: (value: unknown, options: unknown) => string,
        ): string => \\"URL \\" + inspect(this.id!.href, options),
      };
    }
    
      const _49BipA5dq9eoH8LX8xdsVumveTca = this.#_49BipA5dq9eoH8LX8xdsVumveTca
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_49BipA5dq9eoH8LX8xdsVumveTca.length > 1
          || !(\\"attachment\\" in proxy)
          && _49BipA5dq9eoH8LX8xdsVumveTca.length > 0) {
        proxy.attachments = _49BipA5dq9eoH8LX8xdsVumveTca;
      }
      
      const _42CGqJ94zgQ3ZBbfHwD8Hrr2L5Py = this.#_42CGqJ94zgQ3ZBbfHwD8Hrr2L5Py
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_42CGqJ94zgQ3ZBbfHwD8Hrr2L5Py.length == 1) {
        proxy.attribution = _42CGqJ94zgQ3ZBbfHwD8Hrr2L5Py[0];
      }
      
      if (_42CGqJ94zgQ3ZBbfHwD8Hrr2L5Py.length > 1
          || !(\\"attribution\\" in proxy)
          && _42CGqJ94zgQ3ZBbfHwD8Hrr2L5Py.length > 0) {
        proxy.attributions = _42CGqJ94zgQ3ZBbfHwD8Hrr2L5Py;
      }
      
      const _3ocC3VVi88cEd5sPWL8djkZsvTN6 = this.#_3ocC3VVi88cEd5sPWL8djkZsvTN6
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3ocC3VVi88cEd5sPWL8djkZsvTN6.length == 1) {
        proxy.audience = _3ocC3VVi88cEd5sPWL8djkZsvTN6[0];
      }
      
      if (_3ocC3VVi88cEd5sPWL8djkZsvTN6.length > 1
          || !(\\"audience\\" in proxy)
          && _3ocC3VVi88cEd5sPWL8djkZsvTN6.length > 0) {
        proxy.audiences = _3ocC3VVi88cEd5sPWL8djkZsvTN6;
      }
      
      const _4HuuRSdSrXq8Jj2J9gcdYfoCzeuz = this.#_4HuuRSdSrXq8Jj2J9gcdYfoCzeuz
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_4HuuRSdSrXq8Jj2J9gcdYfoCzeuz.length == 1) {
        proxy.content = _4HuuRSdSrXq8Jj2J9gcdYfoCzeuz[0];
      }
      
      if (_4HuuRSdSrXq8Jj2J9gcdYfoCzeuz.length > 1
          || !(\\"content\\" in proxy)
          && _4HuuRSdSrXq8Jj2J9gcdYfoCzeuz.length > 0) {
        proxy.contents = _4HuuRSdSrXq8Jj2J9gcdYfoCzeuz;
      }
      
      const _3mhZzGXSpQ431mBSz2kvych22v4e = this.#_3mhZzGXSpQ431mBSz2kvych22v4e
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3mhZzGXSpQ431mBSz2kvych22v4e.length > 1
          || !(\\"context\\" in proxy)
          && _3mhZzGXSpQ431mBSz2kvych22v4e.length > 0) {
        proxy.contexts = _3mhZzGXSpQ431mBSz2kvych22v4e;
      }
      
      const _4ZHbBuK7PrsvGgrjM8wgc6KMWjav = this.#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_4ZHbBuK7PrsvGgrjM8wgc6KMWjav.length == 1) {
        proxy.name = _4ZHbBuK7PrsvGgrjM8wgc6KMWjav[0];
      }
      
      if (_4ZHbBuK7PrsvGgrjM8wgc6KMWjav.length > 1
          || !(\\"name\\" in proxy)
          && _4ZHbBuK7PrsvGgrjM8wgc6KMWjav.length > 0) {
        proxy.names = _4ZHbBuK7PrsvGgrjM8wgc6KMWjav;
      }
      
      const _219RwDanjScTv5tYCjwGZVCM7KZ9 = this.#_219RwDanjScTv5tYCjwGZVCM7KZ9
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_219RwDanjScTv5tYCjwGZVCM7KZ9.length == 1) {
        proxy.endTime = _219RwDanjScTv5tYCjwGZVCM7KZ9[0];
      }
      
      const _86xFhmgBapoMvYqjbjRuDPayTrS = this.#_86xFhmgBapoMvYqjbjRuDPayTrS
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_86xFhmgBapoMvYqjbjRuDPayTrS.length > 1
          || !(\\"generator\\" in proxy)
          && _86xFhmgBapoMvYqjbjRuDPayTrS.length > 0) {
        proxy.generators = _86xFhmgBapoMvYqjbjRuDPayTrS;
      }
      
      const _33CjRLy5ujtsUrwRSCrsggvGdKuR = this.#_33CjRLy5ujtsUrwRSCrsggvGdKuR
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_33CjRLy5ujtsUrwRSCrsggvGdKuR.length == 1) {
        proxy.icon = _33CjRLy5ujtsUrwRSCrsggvGdKuR[0];
      }
      
      if (_33CjRLy5ujtsUrwRSCrsggvGdKuR.length > 1
          || !(\\"icon\\" in proxy)
          && _33CjRLy5ujtsUrwRSCrsggvGdKuR.length > 0) {
        proxy.icons = _33CjRLy5ujtsUrwRSCrsggvGdKuR;
      }
      
      const _3dXrUdkARxwyJLtJcYi1AJ92H41U = this.#_3dXrUdkARxwyJLtJcYi1AJ92H41U
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3dXrUdkARxwyJLtJcYi1AJ92H41U.length == 1) {
        proxy.image = _3dXrUdkARxwyJLtJcYi1AJ92H41U[0];
      }
      
      if (_3dXrUdkARxwyJLtJcYi1AJ92H41U.length > 1
          || !(\\"image\\" in proxy)
          && _3dXrUdkARxwyJLtJcYi1AJ92H41U.length > 0) {
        proxy.images = _3dXrUdkARxwyJLtJcYi1AJ92H41U;
      }
      
      const _3fpbDrvZgf3Kq1a5V9aByFn8kx3s = this.#_3fpbDrvZgf3Kq1a5V9aByFn8kx3s
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3fpbDrvZgf3Kq1a5V9aByFn8kx3s.length == 1) {
        proxy.replyTarget = _3fpbDrvZgf3Kq1a5V9aByFn8kx3s[0];
      }
      
      if (_3fpbDrvZgf3Kq1a5V9aByFn8kx3s.length > 1
          || !(\\"replyTarget\\" in proxy)
          && _3fpbDrvZgf3Kq1a5V9aByFn8kx3s.length > 0) {
        proxy.replyTargets = _3fpbDrvZgf3Kq1a5V9aByFn8kx3s;
      }
      
      const _31k5MUZJsnsPNg8dQQJieWaXTFnR = this.#_31k5MUZJsnsPNg8dQQJieWaXTFnR
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_31k5MUZJsnsPNg8dQQJieWaXTFnR.length == 1) {
        proxy.location = _31k5MUZJsnsPNg8dQQJieWaXTFnR[0];
      }
      
      if (_31k5MUZJsnsPNg8dQQJieWaXTFnR.length > 1
          || !(\\"location\\" in proxy)
          && _31k5MUZJsnsPNg8dQQJieWaXTFnR.length > 0) {
        proxy.locations = _31k5MUZJsnsPNg8dQQJieWaXTFnR;
      }
      
      const _gCVTegXxWWCw6wWRxa1QF65zusg = this.#_gCVTegXxWWCw6wWRxa1QF65zusg
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_gCVTegXxWWCw6wWRxa1QF65zusg.length == 1) {
        proxy.preview = _gCVTegXxWWCw6wWRxa1QF65zusg[0];
      }
      
      if (_gCVTegXxWWCw6wWRxa1QF65zusg.length > 1
          || !(\\"preview\\" in proxy)
          && _gCVTegXxWWCw6wWRxa1QF65zusg.length > 0) {
        proxy.previews = _gCVTegXxWWCw6wWRxa1QF65zusg;
      }
      
      const _5e258TDXtuhaFRPZiGoDfEpjdMr = this.#_5e258TDXtuhaFRPZiGoDfEpjdMr
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_5e258TDXtuhaFRPZiGoDfEpjdMr.length == 1) {
        proxy.published = _5e258TDXtuhaFRPZiGoDfEpjdMr[0];
      }
      
      const _7UpwM3JWcXhADcscukEehBorf6k = this.#_7UpwM3JWcXhADcscukEehBorf6k
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_7UpwM3JWcXhADcscukEehBorf6k.length == 1) {
        proxy.replies = _7UpwM3JWcXhADcscukEehBorf6k[0];
      }
      
      const _2w3Jmue4up8iVDUA51WZqomEF438 = this.#_2w3Jmue4up8iVDUA51WZqomEF438
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2w3Jmue4up8iVDUA51WZqomEF438.length == 1) {
        proxy.startTime = _2w3Jmue4up8iVDUA51WZqomEF438[0];
      }
      
      const _4LqirZspQbFWWQEbFcXAxm7tTDN1 = this.#_4LqirZspQbFWWQEbFcXAxm7tTDN1
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_4LqirZspQbFWWQEbFcXAxm7tTDN1.length == 1) {
        proxy.summary = _4LqirZspQbFWWQEbFcXAxm7tTDN1[0];
      }
      
      if (_4LqirZspQbFWWQEbFcXAxm7tTDN1.length > 1
          || !(\\"summary\\" in proxy)
          && _4LqirZspQbFWWQEbFcXAxm7tTDN1.length > 0) {
        proxy.summaries = _4LqirZspQbFWWQEbFcXAxm7tTDN1;
      }
      
      const _5chuqj6s95p5gg2sk1HntGfarRf = this.#_5chuqj6s95p5gg2sk1HntGfarRf
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_5chuqj6s95p5gg2sk1HntGfarRf.length > 1
          || !(\\"tag\\" in proxy)
          && _5chuqj6s95p5gg2sk1HntGfarRf.length > 0) {
        proxy.tags = _5chuqj6s95p5gg2sk1HntGfarRf;
      }
      
      const _385aB7ySixcf5Un6z3VsWmThgCzQ = this.#_385aB7ySixcf5Un6z3VsWmThgCzQ
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_385aB7ySixcf5Un6z3VsWmThgCzQ.length == 1) {
        proxy.updated = _385aB7ySixcf5Un6z3VsWmThgCzQ[0];
      }
      
      const _2oPEH9MQ3aj8JVwyYuWkqoVwV865 = this.#_2oPEH9MQ3aj8JVwyYuWkqoVwV865
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2oPEH9MQ3aj8JVwyYuWkqoVwV865.length == 1) {
        proxy.url = _2oPEH9MQ3aj8JVwyYuWkqoVwV865[0];
      }
      
      if (_2oPEH9MQ3aj8JVwyYuWkqoVwV865.length > 1
          || !(\\"url\\" in proxy)
          && _2oPEH9MQ3aj8JVwyYuWkqoVwV865.length > 0) {
        proxy.urls = _2oPEH9MQ3aj8JVwyYuWkqoVwV865;
      }
      
      const _3hFbw7DTpHhq3cvVhkY8njhcsXbd = this.#_3hFbw7DTpHhq3cvVhkY8njhcsXbd
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3hFbw7DTpHhq3cvVhkY8njhcsXbd.length == 1) {
        proxy.to = _3hFbw7DTpHhq3cvVhkY8njhcsXbd[0];
      }
      
      if (_3hFbw7DTpHhq3cvVhkY8njhcsXbd.length > 1
          || !(\\"to\\" in proxy)
          && _3hFbw7DTpHhq3cvVhkY8njhcsXbd.length > 0) {
        proxy.tos = _3hFbw7DTpHhq3cvVhkY8njhcsXbd;
      }
      
      const _aLZupjwL8XB7tzdLgCMXdjZ6qej = this.#_aLZupjwL8XB7tzdLgCMXdjZ6qej
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_aLZupjwL8XB7tzdLgCMXdjZ6qej.length == 1) {
        proxy.bto = _aLZupjwL8XB7tzdLgCMXdjZ6qej[0];
      }
      
      if (_aLZupjwL8XB7tzdLgCMXdjZ6qej.length > 1
          || !(\\"bto\\" in proxy)
          && _aLZupjwL8XB7tzdLgCMXdjZ6qej.length > 0) {
        proxy.btos = _aLZupjwL8XB7tzdLgCMXdjZ6qej;
      }
      
      const _42a1SvBs24QSLzKcfjCyNTjW5a1g = this.#_42a1SvBs24QSLzKcfjCyNTjW5a1g
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_42a1SvBs24QSLzKcfjCyNTjW5a1g.length == 1) {
        proxy.cc = _42a1SvBs24QSLzKcfjCyNTjW5a1g[0];
      }
      
      if (_42a1SvBs24QSLzKcfjCyNTjW5a1g.length > 1
          || !(\\"cc\\" in proxy)
          && _42a1SvBs24QSLzKcfjCyNTjW5a1g.length > 0) {
        proxy.ccs = _42a1SvBs24QSLzKcfjCyNTjW5a1g;
      }
      
      const _3qvegKUB8YLgTXRpEf8E6JZSkz2H = this.#_3qvegKUB8YLgTXRpEf8E6JZSkz2H
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3qvegKUB8YLgTXRpEf8E6JZSkz2H.length == 1) {
        proxy.bcc = _3qvegKUB8YLgTXRpEf8E6JZSkz2H[0];
      }
      
      if (_3qvegKUB8YLgTXRpEf8E6JZSkz2H.length > 1
          || !(\\"bcc\\" in proxy)
          && _3qvegKUB8YLgTXRpEf8E6JZSkz2H.length > 0) {
        proxy.bccs = _3qvegKUB8YLgTXRpEf8E6JZSkz2H;
      }
      
      const _3BLrzmscsjHCw8TF5BHRW9WkPnX8 = this.#_3BLrzmscsjHCw8TF5BHRW9WkPnX8
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3BLrzmscsjHCw8TF5BHRW9WkPnX8.length == 1) {
        proxy.mediaType = _3BLrzmscsjHCw8TF5BHRW9WkPnX8[0];
      }
      
      const _3bNvLMBN1bCJETiTihM3wvi1B2JX = this.#_3bNvLMBN1bCJETiTihM3wvi1B2JX
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3bNvLMBN1bCJETiTihM3wvi1B2JX.length == 1) {
        proxy.duration = _3bNvLMBN1bCJETiTihM3wvi1B2JX[0];
      }
      
      const _u8gdcDTtChQ4tbSQMXc4cYWyum7 = this.#_u8gdcDTtChQ4tbSQMXc4cYWyum7
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_u8gdcDTtChQ4tbSQMXc4cYWyum7.length == 1) {
        proxy.sensitive = _u8gdcDTtChQ4tbSQMXc4cYWyum7[0];
      }
      
      const _42rPnotok1ivQ2RNCKNbeFJgx8b8 = this.#_42rPnotok1ivQ2RNCKNbeFJgx8b8
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_42rPnotok1ivQ2RNCKNbeFJgx8b8.length == 1) {
        proxy.proof = _42rPnotok1ivQ2RNCKNbeFJgx8b8[0];
      }
      
      if (_42rPnotok1ivQ2RNCKNbeFJgx8b8.length > 1
          || !(\\"proof\\" in proxy)
          && _42rPnotok1ivQ2RNCKNbeFJgx8b8.length > 0) {
        proxy.proofs = _42rPnotok1ivQ2RNCKNbeFJgx8b8;
      }
      
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Object \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Object \\" + inspect(proxy, options);
  }
  }

/** Represents a custom emoji.
 */
export class Emoji extends Object {

    /**
     * The type URI of {@link Emoji}: \`http://joinmastodon.org/ns#Emoji\`.
     */
    static get typeId(): URL {
      return new URL(\\"http://joinmastodon.org/ns#Emoji\\");
    }
  
  /**
   * Constructs a new instance of Emoji with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });}

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Emoji {
  const clone = super.clone(values, options) as unknown as Emoji;
    return clone;
  }
  
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    values[\\"@type\\"] = [\\"http://joinmastodon.org/ns#Emoji\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",{\\"toot\\":\\"http://joinmastodon.org/ns#\\",\\"Emoji\\":\\"toot:Emoji\\"}],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Emoji> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"http://joinmastodon.org/ns#Emoji\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Emoji)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Emoji \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Emoji \\" + inspect(proxy, options);
  }
  }

/** A pair of property name and value.
 */
export class PropertyValue {

    readonly #documentLoader?: DocumentLoader;
    readonly #contextLoader?: DocumentLoader;
    readonly id: URL | null;

    protected get _documentLoader(): DocumentLoader | undefined {
      return this.#documentLoader;
    }

    protected get _contextLoader(): DocumentLoader | undefined {
      return this.#contextLoader;
    }
    
    /**
     * The type URI of {@link PropertyValue}: \`http://schema.org#PropertyValue\`.
     */
    static get typeId(): URL {
      return new URL(\\"http://schema.org#PropertyValue\\");
    }
  #_4ZHbBuK7PrsvGgrjM8wgc6KMWjav: ((string | LanguageString))[] = [];
#_2cSy2magg4iZ7zLaG8U7DiJMoCkx: ((string | LanguageString))[] = [];

  /**
   * Constructs a new instance of PropertyValue with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
name?: string | LanguageString | null;value?: string | LanguageString | null;}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  
    this.#documentLoader = documentLoader;
    this.#contextLoader = contextLoader;
    if (values.id == null || values.id instanceof URL) {
      this.id = values.id ?? null;
    } else {
      throw new TypeError(\\"The id must be a URL.\\");
    }
    
        if (\\"name\\" in values &&             values.name != null) {
          if (typeof values.name === \\"string\\" || values.name instanceof LanguageString) {
            // @ts-ignore: type is checked above.
            this.#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav = [values.name];
          } else {
            throw new TypeError(
              \\"The name must be of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      
        if (\\"value\\" in values &&             values.value != null) {
          if (typeof values.value === \\"string\\" || values.value instanceof LanguageString) {
            // @ts-ignore: type is checked above.
            this.#_2cSy2magg4iZ7zLaG8U7DiJMoCkx = [values.value];
          } else {
            throw new TypeError(
              \\"The value must be of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      }

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
name?: string | LanguageString | null;value?: string | LanguageString | null;}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): PropertyValue {
  
    // @ts-ignore: this.constructor is not recognized as a constructor, but it is.
    const clone: PropertyValue = new this.constructor(
      { id: values.id ?? this.id },
      options
    );
    clone.#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav = this.#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav;
        if (\\"name\\" in values &&             values.name != null) {
          if (typeof values.name === \\"string\\" || values.name instanceof LanguageString) {
            // @ts-ignore: type is checked above.
            clone.#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav = [values.name];
          } else {
            throw new TypeError(
              \\"The name must be of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      clone.#_2cSy2magg4iZ7zLaG8U7DiJMoCkx = this.#_2cSy2magg4iZ7zLaG8U7DiJMoCkx;
        if (\\"value\\" in values &&             values.value != null) {
          if (typeof values.value === \\"string\\" || values.value instanceof LanguageString) {
            // @ts-ignore: type is checked above.
            clone.#_2cSy2magg4iZ7zLaG8U7DiJMoCkx = [values.value];
          } else {
            throw new TypeError(
              \\"The value must be of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      
    return clone;
  }
  
/** The name of a property.
 */
get name(): (string | LanguageString | null) {
        if (this.#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav.length < 1) return null;
        return this.#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav[0];
      }
      
/** The value of a property.
 */
get value(): (string | LanguageString | null) {
        if (this.#_2cSy2magg4iZ7zLaG8U7DiJMoCkx.length < 1) return null;
        return this.#_2cSy2magg4iZ7zLaG8U7DiJMoCkx[0];
      }
      
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  const values: Record<string, unknown[] | string> = {};
    array = [];
    for (const v of this.#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav) {
      const element = (
    typeof v === \\"string\\" ? { \\"@value\\": v } : {
        \\"@value\\": v.toString(),
        \\"@language\\": v.language.compact(),
      }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#name\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_2cSy2magg4iZ7zLaG8U7DiJMoCkx) {
      const element = (
    typeof v === \\"string\\" ? { \\"@value\\": v } : {
        \\"@value\\": v.toString(),
        \\"@language\\": v.language.compact(),
      }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://schema.org#value\\"] = (
    array
      );
    }
    
    values[\\"@type\\"] = [\\"http://schema.org#PropertyValue\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",{\\"schema\\":\\"http://schema.org#\\",\\"PropertyValue\\":\\"schema:PropertyValue\\",\\"value\\":\\"schema:value\\"}],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<PropertyValue> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"http://schema.org#PropertyValue\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = new this(
      { id: \\"@id\\" in values ? new URL(values[\\"@id\\"] as string) : undefined },
      options,
    );
    const _4ZHbBuK7PrsvGgrjM8wgc6KMWjav: ((string | LanguageString))[] = [];

    const _4ZHbBuK7PrsvGgrjM8wgc6KMWjav__array = values[\\"https://www.w3.org/ns/activitystreams#name\\"];
    for (
      const v of _4ZHbBuK7PrsvGgrjM8wgc6KMWjav__array == null
        ? []
        : _4ZHbBuK7PrsvGgrjM8wgc6KMWjav__array.length === 1 && \\"@list\\" in _4ZHbBuK7PrsvGgrjM8wgc6KMWjav__array[0]
        ? _4ZHbBuK7PrsvGgrjM8wgc6KMWjav__array[0][\\"@list\\"]
        : _4ZHbBuK7PrsvGgrjM8wgc6KMWjav__array
    ) {
      if (v == null) continue;
    
      const decoded =
      typeof v === \\"object\\" && \\"@value\\" in v
        && typeof v[\\"@value\\"] === \\"string\\" && !(\\"@language\\" in v) ? v[\\"@value\\"] : typeof v === \\"object\\" && \\"@language\\" in v && \\"@value\\" in v
        && typeof v[\\"@language\\"] === \\"string\\"
        && typeof v[\\"@value\\"] === \\"string\\" ? new LanguageString(v[\\"@value\\"], v[\\"@language\\"]) : undefined
      ;
      if (typeof decoded === \\"undefined\\") continue;
      _4ZHbBuK7PrsvGgrjM8wgc6KMWjav.push(decoded);
      
    }
    instance.#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav = _4ZHbBuK7PrsvGgrjM8wgc6KMWjav;
    const _2cSy2magg4iZ7zLaG8U7DiJMoCkx: ((string | LanguageString))[] = [];

    const _2cSy2magg4iZ7zLaG8U7DiJMoCkx__array = values[\\"http://schema.org#value\\"];
    for (
      const v of _2cSy2magg4iZ7zLaG8U7DiJMoCkx__array == null
        ? []
        : _2cSy2magg4iZ7zLaG8U7DiJMoCkx__array.length === 1 && \\"@list\\" in _2cSy2magg4iZ7zLaG8U7DiJMoCkx__array[0]
        ? _2cSy2magg4iZ7zLaG8U7DiJMoCkx__array[0][\\"@list\\"]
        : _2cSy2magg4iZ7zLaG8U7DiJMoCkx__array
    ) {
      if (v == null) continue;
    
      const decoded =
      typeof v === \\"object\\" && \\"@value\\" in v
        && typeof v[\\"@value\\"] === \\"string\\" && !(\\"@language\\" in v) ? v[\\"@value\\"] : typeof v === \\"object\\" && \\"@language\\" in v && \\"@value\\" in v
        && typeof v[\\"@language\\"] === \\"string\\"
        && typeof v[\\"@value\\"] === \\"string\\" ? new LanguageString(v[\\"@value\\"], v[\\"@language\\"]) : undefined
      ;
      if (typeof decoded === \\"undefined\\") continue;
      _2cSy2magg4iZ7zLaG8U7DiJMoCkx.push(decoded);
      
    }
    instance.#_2cSy2magg4iZ7zLaG8U7DiJMoCkx = _2cSy2magg4iZ7zLaG8U7DiJMoCkx;
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  
    const proxy: Record<string, unknown> = {};
    if (this.id != null) {
      proxy.id = {
        [Symbol.for(\\"Deno.customInspect\\")]: (
          inspect: typeof Deno.inspect,
          options: Deno.InspectOptions,
        ): string => \\"URL \\" + inspect(this.id!.href, options),
        [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
          _depth: number,
          options: unknown,
          inspect: (value: unknown, options: unknown) => string,
        ): string => \\"URL \\" + inspect(this.id!.href, options),
      };
    }
    
      const _4ZHbBuK7PrsvGgrjM8wgc6KMWjav = this.#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_4ZHbBuK7PrsvGgrjM8wgc6KMWjav.length == 1) {
        proxy.name = _4ZHbBuK7PrsvGgrjM8wgc6KMWjav[0];
      }
      
      const _2cSy2magg4iZ7zLaG8U7DiJMoCkx = this.#_2cSy2magg4iZ7zLaG8U7DiJMoCkx
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2cSy2magg4iZ7zLaG8U7DiJMoCkx.length == 1) {
        proxy.value = _2cSy2magg4iZ7zLaG8U7DiJMoCkx[0];
      }
      
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"PropertyValue \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"PropertyValue \\" + inspect(proxy, options);
  }
  }

/** A proof that can be added to any activity or object, allowing recipients to
 * verify the identity of the actor and the integrity of the data.
 * 
 */
export class DataIntegrityProof {

    readonly #documentLoader?: DocumentLoader;
    readonly #contextLoader?: DocumentLoader;
    readonly id: URL | null;

    protected get _documentLoader(): DocumentLoader | undefined {
      return this.#documentLoader;
    }

    protected get _contextLoader(): DocumentLoader | undefined {
      return this.#contextLoader;
    }
    
    /**
     * The type URI of {@link DataIntegrityProof}: \`https://w3id.org/security#DataIntegrityProof\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://w3id.org/security#DataIntegrityProof\\");
    }
  #_3RurJsa7tnptyqMFR5hDGcP9pMs5: (\\"eddsa-jcs-2022\\")[] = [];
#_2mHVKxqA7zncjveJrDEo3pWpMZqg: (Multikey | URL)[] = [];
#_2AeEnPcAvVrPEuKbpmn9ZKNmWHKb: (\\"assertionMethod\\" | \\"authentication\\" | \\"capabilityInvocation\\" | \\"capabilityDelegation\\" | \\"keyAgreement\\")[] = [];
#_3CjFK5vfKpX4HQuNh2b18TykoVLq: (Uint8Array)[] = [];
#_3qzP3ukEZoUziK5FEiA1RhU4aqac: (Temporal.Instant)[] = [];

  /**
   * Constructs a new instance of DataIntegrityProof with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
cryptosuite?: \\"eddsa-jcs-2022\\" | null;verificationMethod?: Multikey | URL | null;proofPurpose?: \\"assertionMethod\\" | \\"authentication\\" | \\"capabilityInvocation\\" | \\"capabilityDelegation\\" | \\"keyAgreement\\" | null;proofValue?: Uint8Array | null;created?: Temporal.Instant | null;}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  
    this.#documentLoader = documentLoader;
    this.#contextLoader = contextLoader;
    if (values.id == null || values.id instanceof URL) {
      this.id = values.id ?? null;
    } else {
      throw new TypeError(\\"The id must be a URL.\\");
    }
    
        if (\\"cryptosuite\\" in values &&             values.cryptosuite != null) {
          if (values.cryptosuite == \\"eddsa-jcs-2022\\") {
            // @ts-ignore: type is checked above.
            this.#_3RurJsa7tnptyqMFR5hDGcP9pMs5 = [values.cryptosuite];
          } else {
            throw new TypeError(
              \\"The cryptosuite must be of type \\" +
              \\"\\\\\\"eddsa-jcs-2022\\\\\\"\\" + \\".\\",
            );
          }
        }
      
        if (\\"verificationMethod\\" in values &&             values.verificationMethod != null) {
          if (values.verificationMethod instanceof Multikey || values.verificationMethod instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_2mHVKxqA7zncjveJrDEo3pWpMZqg = [values.verificationMethod];
          } else {
            throw new TypeError(
              \\"The verificationMethod must be of type \\" +
              \\"Multikey | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"proofPurpose\\" in values &&             values.proofPurpose != null) {
          if (values.proofPurpose === \\"assertionMethod\\" || values.proofPurpose === \\"authentication\\" ||
        values.proofPurpose === \\"capabilityInvocation\\" || values.proofPurpose === \\"capabilityDelegation\\" ||
        values.proofPurpose === \\"keyAgreement\\") {
            // @ts-ignore: type is checked above.
            this.#_2AeEnPcAvVrPEuKbpmn9ZKNmWHKb = [values.proofPurpose];
          } else {
            throw new TypeError(
              \\"The proofPurpose must be of type \\" +
              \\"\\\\\\"assertionMethod\\\\\\" | \\\\\\"authentication\\\\\\" | \\\\\\"capabilityInvocation\\\\\\" | \\\\\\"capabilityDelegation\\\\\\" | \\\\\\"keyAgreement\\\\\\"\\" + \\".\\",
            );
          }
        }
      
        if (\\"proofValue\\" in values &&             values.proofValue != null) {
          if (values.proofValue instanceof Uint8Array) {
            // @ts-ignore: type is checked above.
            this.#_3CjFK5vfKpX4HQuNh2b18TykoVLq = [values.proofValue];
          } else {
            throw new TypeError(
              \\"The proofValue must be of type \\" +
              \\"Uint8Array\\" + \\".\\",
            );
          }
        }
      
        if (\\"created\\" in values &&             values.created != null) {
          if (values.created instanceof Temporal.Instant) {
            // @ts-ignore: type is checked above.
            this.#_3qzP3ukEZoUziK5FEiA1RhU4aqac = [values.created];
          } else {
            throw new TypeError(
              \\"The created must be of type \\" +
              \\"Temporal.Instant\\" + \\".\\",
            );
          }
        }
      }

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
cryptosuite?: \\"eddsa-jcs-2022\\" | null;verificationMethod?: Multikey | URL | null;proofPurpose?: \\"assertionMethod\\" | \\"authentication\\" | \\"capabilityInvocation\\" | \\"capabilityDelegation\\" | \\"keyAgreement\\" | null;proofValue?: Uint8Array | null;created?: Temporal.Instant | null;}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): DataIntegrityProof {
  
    // @ts-ignore: this.constructor is not recognized as a constructor, but it is.
    const clone: DataIntegrityProof = new this.constructor(
      { id: values.id ?? this.id },
      options
    );
    clone.#_3RurJsa7tnptyqMFR5hDGcP9pMs5 = this.#_3RurJsa7tnptyqMFR5hDGcP9pMs5;
        if (\\"cryptosuite\\" in values &&             values.cryptosuite != null) {
          if (values.cryptosuite == \\"eddsa-jcs-2022\\") {
            // @ts-ignore: type is checked above.
            clone.#_3RurJsa7tnptyqMFR5hDGcP9pMs5 = [values.cryptosuite];
          } else {
            throw new TypeError(
              \\"The cryptosuite must be of type \\" +
              \\"\\\\\\"eddsa-jcs-2022\\\\\\"\\" + \\".\\",
            );
          }
        }
      clone.#_2mHVKxqA7zncjveJrDEo3pWpMZqg = this.#_2mHVKxqA7zncjveJrDEo3pWpMZqg;
        if (\\"verificationMethod\\" in values &&             values.verificationMethod != null) {
          if (values.verificationMethod instanceof Multikey || values.verificationMethod instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_2mHVKxqA7zncjveJrDEo3pWpMZqg = [values.verificationMethod];
          } else {
            throw new TypeError(
              \\"The verificationMethod must be of type \\" +
              \\"Multikey | URL\\" + \\".\\",
            );
          }
        }
      clone.#_2AeEnPcAvVrPEuKbpmn9ZKNmWHKb = this.#_2AeEnPcAvVrPEuKbpmn9ZKNmWHKb;
        if (\\"proofPurpose\\" in values &&             values.proofPurpose != null) {
          if (values.proofPurpose === \\"assertionMethod\\" || values.proofPurpose === \\"authentication\\" ||
        values.proofPurpose === \\"capabilityInvocation\\" || values.proofPurpose === \\"capabilityDelegation\\" ||
        values.proofPurpose === \\"keyAgreement\\") {
            // @ts-ignore: type is checked above.
            clone.#_2AeEnPcAvVrPEuKbpmn9ZKNmWHKb = [values.proofPurpose];
          } else {
            throw new TypeError(
              \\"The proofPurpose must be of type \\" +
              \\"\\\\\\"assertionMethod\\\\\\" | \\\\\\"authentication\\\\\\" | \\\\\\"capabilityInvocation\\\\\\" | \\\\\\"capabilityDelegation\\\\\\" | \\\\\\"keyAgreement\\\\\\"\\" + \\".\\",
            );
          }
        }
      clone.#_3CjFK5vfKpX4HQuNh2b18TykoVLq = this.#_3CjFK5vfKpX4HQuNh2b18TykoVLq;
        if (\\"proofValue\\" in values &&             values.proofValue != null) {
          if (values.proofValue instanceof Uint8Array) {
            // @ts-ignore: type is checked above.
            clone.#_3CjFK5vfKpX4HQuNh2b18TykoVLq = [values.proofValue];
          } else {
            throw new TypeError(
              \\"The proofValue must be of type \\" +
              \\"Uint8Array\\" + \\".\\",
            );
          }
        }
      clone.#_3qzP3ukEZoUziK5FEiA1RhU4aqac = this.#_3qzP3ukEZoUziK5FEiA1RhU4aqac;
        if (\\"created\\" in values &&             values.created != null) {
          if (values.created instanceof Temporal.Instant) {
            // @ts-ignore: type is checked above.
            clone.#_3qzP3ukEZoUziK5FEiA1RhU4aqac = [values.created];
          } else {
            throw new TypeError(
              \\"The created must be of type \\" +
              \\"Temporal.Instant\\" + \\".\\",
            );
          }
        }
      
    return clone;
  }
  
/** The cryptographic suite used to create the proof.
 * 
 */
get cryptosuite(): (\\"eddsa-jcs-2022\\" | null) {
        if (this.#_3RurJsa7tnptyqMFR5hDGcP9pMs5.length < 1) return null;
        return this.#_3RurJsa7tnptyqMFR5hDGcP9pMs5[0];
      }
      
    async #fetchVerificationMethod(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Multikey | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Multikey.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://w3id.org/security#Multikey\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link DataIntegrityProof.getVerificationMethod},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get verificationMethodId(): URL | null {
        if (this.#_2mHVKxqA7zncjveJrDEo3pWpMZqg.length < 1) return null;
        const v = this.#_2mHVKxqA7zncjveJrDEo3pWpMZqg[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** A key owned by an actor according to [FEP-521a: Representing actor's public
 * keys][1].
 * 
 * [1]: https://codeberg.org/fediverse/fep/src/branch/main/fep/521a/fep-521a.md
 * 
 */

      async getVerificationMethod(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Multikey | null> {
        if (this.#_2mHVKxqA7zncjveJrDEo3pWpMZqg.length < 1) return null;
        const v = this.#_2mHVKxqA7zncjveJrDEo3pWpMZqg[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchVerificationMethod(v, options);
          if (fetched == null) return null;
          this.#_2mHVKxqA7zncjveJrDEo3pWpMZqg[0] = fetched;
          return fetched;
        }
        return v;
      }
      
/** The reason the proof was created.
 * 
 * - \`\\"assertionMethod\\"\`
 * - \`\\"authentication\\"\`
 * - \`\\"capabilityInvocation\\"\`
 * - \`\\"capabilityDelegation\\"\`
 * - \`\\"keyAgreement\\"\`
 * 
 */
get proofPurpose(): (\\"assertionMethod\\" | \\"authentication\\" | \\"capabilityInvocation\\" | \\"capabilityDelegation\\" | \\"keyAgreement\\" | null) {
        if (this.#_2AeEnPcAvVrPEuKbpmn9ZKNmWHKb.length < 1) return null;
        return this.#_2AeEnPcAvVrPEuKbpmn9ZKNmWHKb[0];
      }
      
/** The proof value.
 */
get proofValue(): (Uint8Array | null) {
        if (this.#_3CjFK5vfKpX4HQuNh2b18TykoVLq.length < 1) return null;
        return this.#_3CjFK5vfKpX4HQuNh2b18TykoVLq[0];
      }
      
/** The date and time the proof was created.
 */
get created(): (Temporal.Instant | null) {
        if (this.#_3qzP3ukEZoUziK5FEiA1RhU4aqac.length < 1) return null;
        return this.#_3qzP3ukEZoUziK5FEiA1RhU4aqac[0];
      }
      
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  const values: Record<string, unknown[] | string> = {};
    array = [];
    for (const v of this.#_3RurJsa7tnptyqMFR5hDGcP9pMs5) {
      const element = (
    { \\"@value\\": v }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://w3id.org/security#cryptosuite\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_2mHVKxqA7zncjveJrDEo3pWpMZqg) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://w3id.org/security#verificationMethod\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_2AeEnPcAvVrPEuKbpmn9ZKNmWHKb) {
      const element = (
    {
        \\"@id\\": \\"https://w3id.org/security#\\" + v,
      }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://w3id.org/security#proofPurpose\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3CjFK5vfKpX4HQuNh2b18TykoVLq) {
      const element = (
    {
        \\"@type\\": \\"https://w3id.org/security#multibase\\",
        \\"@value\\": new TextDecoder().decode(encodeMultibase(\\"base58btc\\", v)),
      }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://w3id.org/security#proofValue\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3qzP3ukEZoUziK5FEiA1RhU4aqac) {
      const element = (
    {
        \\"@type\\": \\"http://www.w3.org/2001/XMLSchema#dateTime\\",
        \\"@value\\": v.toString(),
      }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://purl.org/dc/terms/created\\"] = (
    array
      );
    }
    
    values[\\"@type\\"] = [\\"https://w3id.org/security#DataIntegrityProof\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? \\"https://w3id.org/security/data-integrity/v1\\",
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<DataIntegrityProof> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://w3id.org/security#DataIntegrityProof\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = new this(
      { id: \\"@id\\" in values ? new URL(values[\\"@id\\"] as string) : undefined },
      options,
    );
    const _3RurJsa7tnptyqMFR5hDGcP9pMs5: (\\"eddsa-jcs-2022\\")[] = [];

    const _3RurJsa7tnptyqMFR5hDGcP9pMs5__array = values[\\"https://w3id.org/security#cryptosuite\\"];
    for (
      const v of _3RurJsa7tnptyqMFR5hDGcP9pMs5__array == null
        ? []
        : _3RurJsa7tnptyqMFR5hDGcP9pMs5__array.length === 1 && \\"@list\\" in _3RurJsa7tnptyqMFR5hDGcP9pMs5__array[0]
        ? _3RurJsa7tnptyqMFR5hDGcP9pMs5__array[0][\\"@list\\"]
        : _3RurJsa7tnptyqMFR5hDGcP9pMs5__array
    ) {
      if (v == null) continue;
    _3RurJsa7tnptyqMFR5hDGcP9pMs5.push(v[\\"@value\\"])
    }
    instance.#_3RurJsa7tnptyqMFR5hDGcP9pMs5 = _3RurJsa7tnptyqMFR5hDGcP9pMs5;
    const _2mHVKxqA7zncjveJrDEo3pWpMZqg: (Multikey | URL)[] = [];

    const _2mHVKxqA7zncjveJrDEo3pWpMZqg__array = values[\\"https://w3id.org/security#verificationMethod\\"];
    for (
      const v of _2mHVKxqA7zncjveJrDEo3pWpMZqg__array == null
        ? []
        : _2mHVKxqA7zncjveJrDEo3pWpMZqg__array.length === 1 && \\"@list\\" in _2mHVKxqA7zncjveJrDEo3pWpMZqg__array[0]
        ? _2mHVKxqA7zncjveJrDEo3pWpMZqg__array[0][\\"@list\\"]
        : _2mHVKxqA7zncjveJrDEo3pWpMZqg__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _2mHVKxqA7zncjveJrDEo3pWpMZqg.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _2mHVKxqA7zncjveJrDEo3pWpMZqg.push(await Multikey.fromJsonLd(
      v, options))
    }
    instance.#_2mHVKxqA7zncjveJrDEo3pWpMZqg = _2mHVKxqA7zncjveJrDEo3pWpMZqg;
    const _2AeEnPcAvVrPEuKbpmn9ZKNmWHKb: (\\"assertionMethod\\" | \\"authentication\\" | \\"capabilityInvocation\\" | \\"capabilityDelegation\\" | \\"keyAgreement\\")[] = [];

    const _2AeEnPcAvVrPEuKbpmn9ZKNmWHKb__array = values[\\"https://w3id.org/security#proofPurpose\\"];
    for (
      const v of _2AeEnPcAvVrPEuKbpmn9ZKNmWHKb__array == null
        ? []
        : _2AeEnPcAvVrPEuKbpmn9ZKNmWHKb__array.length === 1 && \\"@list\\" in _2AeEnPcAvVrPEuKbpmn9ZKNmWHKb__array[0]
        ? _2AeEnPcAvVrPEuKbpmn9ZKNmWHKb__array[0][\\"@list\\"]
        : _2AeEnPcAvVrPEuKbpmn9ZKNmWHKb__array
    ) {
      if (v == null) continue;
    _2AeEnPcAvVrPEuKbpmn9ZKNmWHKb.push(v[\\"@id\\"].substring(26))
    }
    instance.#_2AeEnPcAvVrPEuKbpmn9ZKNmWHKb = _2AeEnPcAvVrPEuKbpmn9ZKNmWHKb;
    const _3CjFK5vfKpX4HQuNh2b18TykoVLq: (Uint8Array)[] = [];

    const _3CjFK5vfKpX4HQuNh2b18TykoVLq__array = values[\\"https://w3id.org/security#proofValue\\"];
    for (
      const v of _3CjFK5vfKpX4HQuNh2b18TykoVLq__array == null
        ? []
        : _3CjFK5vfKpX4HQuNh2b18TykoVLq__array.length === 1 && \\"@list\\" in _3CjFK5vfKpX4HQuNh2b18TykoVLq__array[0]
        ? _3CjFK5vfKpX4HQuNh2b18TykoVLq__array[0][\\"@list\\"]
        : _3CjFK5vfKpX4HQuNh2b18TykoVLq__array
    ) {
      if (v == null) continue;
    _3CjFK5vfKpX4HQuNh2b18TykoVLq.push(decodeMultibase(v[\\"@value\\"]))
    }
    instance.#_3CjFK5vfKpX4HQuNh2b18TykoVLq = _3CjFK5vfKpX4HQuNh2b18TykoVLq;
    const _3qzP3ukEZoUziK5FEiA1RhU4aqac: (Temporal.Instant)[] = [];

    const _3qzP3ukEZoUziK5FEiA1RhU4aqac__array = values[\\"http://purl.org/dc/terms/created\\"];
    for (
      const v of _3qzP3ukEZoUziK5FEiA1RhU4aqac__array == null
        ? []
        : _3qzP3ukEZoUziK5FEiA1RhU4aqac__array.length === 1 && \\"@list\\" in _3qzP3ukEZoUziK5FEiA1RhU4aqac__array[0]
        ? _3qzP3ukEZoUziK5FEiA1RhU4aqac__array[0][\\"@list\\"]
        : _3qzP3ukEZoUziK5FEiA1RhU4aqac__array
    ) {
      if (v == null) continue;
    _3qzP3ukEZoUziK5FEiA1RhU4aqac.push(Temporal.Instant.from(v[\\"@value\\"]))
    }
    instance.#_3qzP3ukEZoUziK5FEiA1RhU4aqac = _3qzP3ukEZoUziK5FEiA1RhU4aqac;
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  
    const proxy: Record<string, unknown> = {};
    if (this.id != null) {
      proxy.id = {
        [Symbol.for(\\"Deno.customInspect\\")]: (
          inspect: typeof Deno.inspect,
          options: Deno.InspectOptions,
        ): string => \\"URL \\" + inspect(this.id!.href, options),
        [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
          _depth: number,
          options: unknown,
          inspect: (value: unknown, options: unknown) => string,
        ): string => \\"URL \\" + inspect(this.id!.href, options),
      };
    }
    
      const _3RurJsa7tnptyqMFR5hDGcP9pMs5 = this.#_3RurJsa7tnptyqMFR5hDGcP9pMs5
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3RurJsa7tnptyqMFR5hDGcP9pMs5.length == 1) {
        proxy.cryptosuite = _3RurJsa7tnptyqMFR5hDGcP9pMs5[0];
      }
      
      const _2mHVKxqA7zncjveJrDEo3pWpMZqg = this.#_2mHVKxqA7zncjveJrDEo3pWpMZqg
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2mHVKxqA7zncjveJrDEo3pWpMZqg.length == 1) {
        proxy.verificationMethod = _2mHVKxqA7zncjveJrDEo3pWpMZqg[0];
      }
      
      const _2AeEnPcAvVrPEuKbpmn9ZKNmWHKb = this.#_2AeEnPcAvVrPEuKbpmn9ZKNmWHKb
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2AeEnPcAvVrPEuKbpmn9ZKNmWHKb.length == 1) {
        proxy.proofPurpose = _2AeEnPcAvVrPEuKbpmn9ZKNmWHKb[0];
      }
      
      const _3CjFK5vfKpX4HQuNh2b18TykoVLq = this.#_3CjFK5vfKpX4HQuNh2b18TykoVLq
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3CjFK5vfKpX4HQuNh2b18TykoVLq.length == 1) {
        proxy.proofValue = _3CjFK5vfKpX4HQuNh2b18TykoVLq[0];
      }
      
      const _3qzP3ukEZoUziK5FEiA1RhU4aqac = this.#_3qzP3ukEZoUziK5FEiA1RhU4aqac
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3qzP3ukEZoUziK5FEiA1RhU4aqac.length == 1) {
        proxy.created = _3qzP3ukEZoUziK5FEiA1RhU4aqac[0];
      }
      
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"DataIntegrityProof \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"DataIntegrityProof \\" + inspect(proxy, options);
  }
  }

/** A key owned by an actor.
 */
export class CryptographicKey {

    readonly #documentLoader?: DocumentLoader;
    readonly #contextLoader?: DocumentLoader;
    readonly id: URL | null;

    protected get _documentLoader(): DocumentLoader | undefined {
      return this.#documentLoader;
    }

    protected get _contextLoader(): DocumentLoader | undefined {
      return this.#contextLoader;
    }
    
    /**
     * The type URI of {@link CryptographicKey}: \`https://w3id.org/security#Key\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://w3id.org/security#Key\\");
    }
  #_5UJq9NDh3ZHgswFwwdVxQvJxdx2: (Application | Group | Organization | Person | Service | URL)[] = [];
#_2fE2QMDdg6KFGqa4NEC3TmjApSAD: (CryptoKey)[] = [];

  /**
   * Constructs a new instance of CryptographicKey with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
owner?: Application | Group | Organization | Person | Service | URL | null;publicKey?: CryptoKey | null;}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  
    this.#documentLoader = documentLoader;
    this.#contextLoader = contextLoader;
    if (values.id == null || values.id instanceof URL) {
      this.id = values.id ?? null;
    } else {
      throw new TypeError(\\"The id must be a URL.\\");
    }
    
        if (\\"owner\\" in values &&             values.owner != null) {
          if (values.owner instanceof Application || values.owner instanceof Group || values.owner instanceof Organization || values.owner instanceof Person || values.owner instanceof Service || values.owner instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_5UJq9NDh3ZHgswFwwdVxQvJxdx2 = [values.owner];
          } else {
            throw new TypeError(
              \\"The owner must be of type \\" +
              \\"Application | Group | Organization | Person | Service | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"publicKey\\" in values &&             values.publicKey != null) {
          if (
        // @ts-ignore: CryptoKey exists in the global scope.
        // dnt-shim-ignore
        values.publicKey instanceof CryptoKey
      ) {
            // @ts-ignore: type is checked above.
            this.#_2fE2QMDdg6KFGqa4NEC3TmjApSAD = [values.publicKey];
          } else {
            throw new TypeError(
              \\"The publicKey must be of type \\" +
              \\"CryptoKey\\" + \\".\\",
            );
          }
        }
      }

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
owner?: Application | Group | Organization | Person | Service | URL | null;publicKey?: CryptoKey | null;}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): CryptographicKey {
  
    // @ts-ignore: this.constructor is not recognized as a constructor, but it is.
    const clone: CryptographicKey = new this.constructor(
      { id: values.id ?? this.id },
      options
    );
    clone.#_5UJq9NDh3ZHgswFwwdVxQvJxdx2 = this.#_5UJq9NDh3ZHgswFwwdVxQvJxdx2;
        if (\\"owner\\" in values &&             values.owner != null) {
          if (values.owner instanceof Application || values.owner instanceof Group || values.owner instanceof Organization || values.owner instanceof Person || values.owner instanceof Service || values.owner instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_5UJq9NDh3ZHgswFwwdVxQvJxdx2 = [values.owner];
          } else {
            throw new TypeError(
              \\"The owner must be of type \\" +
              \\"Application | Group | Organization | Person | Service | URL\\" + \\".\\",
            );
          }
        }
      clone.#_2fE2QMDdg6KFGqa4NEC3TmjApSAD = this.#_2fE2QMDdg6KFGqa4NEC3TmjApSAD;
        if (\\"publicKey\\" in values &&             values.publicKey != null) {
          if (
        // @ts-ignore: CryptoKey exists in the global scope.
        // dnt-shim-ignore
        values.publicKey instanceof CryptoKey
      ) {
            // @ts-ignore: type is checked above.
            clone.#_2fE2QMDdg6KFGqa4NEC3TmjApSAD = [values.publicKey];
          } else {
            throw new TypeError(
              \\"The publicKey must be of type \\" +
              \\"CryptoKey\\" + \\".\\",
            );
          }
        }
      
    return clone;
  }
  
    async #fetchOwner(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Application | Group | Organization | Person | Service | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Application.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      try {
        return await Group.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      try {
        return await Organization.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      try {
        return await Person.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      try {
        return await Service.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Application\\",\\"https://www.w3.org/ns/activitystreams#Group\\",\\"https://www.w3.org/ns/activitystreams#Organization\\",\\"https://www.w3.org/ns/activitystreams#Person\\",\\"https://www.w3.org/ns/activitystreams#Service\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link CryptographicKey.getOwner},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get ownerId(): URL | null {
        if (this.#_5UJq9NDh3ZHgswFwwdVxQvJxdx2.length < 1) return null;
        const v = this.#_5UJq9NDh3ZHgswFwwdVxQvJxdx2[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** An actor who owns this key.
 */

      async getOwner(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Application | Group | Organization | Person | Service | null> {
        if (this.#_5UJq9NDh3ZHgswFwwdVxQvJxdx2.length < 1) return null;
        const v = this.#_5UJq9NDh3ZHgswFwwdVxQvJxdx2[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchOwner(v, options);
          if (fetched == null) return null;
          this.#_5UJq9NDh3ZHgswFwwdVxQvJxdx2[0] = fetched;
          return fetched;
        }
        return v;
      }
      
/** A PEM-encoded public key.
 */
get publicKey(): (CryptoKey | null) {
        if (this.#_2fE2QMDdg6KFGqa4NEC3TmjApSAD.length < 1) return null;
        return this.#_2fE2QMDdg6KFGqa4NEC3TmjApSAD[0];
      }
      
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  const values: Record<string, unknown[] | string> = {};
    array = [];
    for (const v of this.#_5UJq9NDh3ZHgswFwwdVxQvJxdx2) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : v instanceof Application ? await v.toJsonLd(options) : v instanceof Group ? await v.toJsonLd(options) : v instanceof Organization ? await v.toJsonLd(options) : v instanceof Person ? await v.toJsonLd(options) : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://w3id.org/security#owner\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_2fE2QMDdg6KFGqa4NEC3TmjApSAD) {
      const element = (
    { \\"@value\\": await exportSpki(v) }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://w3id.org/security#publicKeyPem\\"] = (
    array
      );
    }
    
    values[\\"@type\\"] = [\\"https://w3id.org/security#Key\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? \\"https://w3id.org/security/v1\\",
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<CryptographicKey> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://w3id.org/security#Key\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = new this(
      { id: \\"@id\\" in values ? new URL(values[\\"@id\\"] as string) : undefined },
      options,
    );
    const _5UJq9NDh3ZHgswFwwdVxQvJxdx2: (Application | Group | Organization | Person | Service | URL)[] = [];

    const _5UJq9NDh3ZHgswFwwdVxQvJxdx2__array = values[\\"https://w3id.org/security#owner\\"];
    for (
      const v of _5UJq9NDh3ZHgswFwwdVxQvJxdx2__array == null
        ? []
        : _5UJq9NDh3ZHgswFwwdVxQvJxdx2__array.length === 1 && \\"@list\\" in _5UJq9NDh3ZHgswFwwdVxQvJxdx2__array[0]
        ? _5UJq9NDh3ZHgswFwwdVxQvJxdx2__array[0][\\"@list\\"]
        : _5UJq9NDh3ZHgswFwwdVxQvJxdx2__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _5UJq9NDh3ZHgswFwwdVxQvJxdx2.push(new URL(v[\\"@id\\"]));
        continue;
      }
      
      const decoded =
      typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& v[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Application\\") ? await Application.fromJsonLd(
      v, options) : typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& v[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Group\\") ? await Group.fromJsonLd(
      v, options) : typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& v[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Organization\\") ? await Organization.fromJsonLd(
      v, options) : typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& v[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Person\\") ? await Person.fromJsonLd(
      v, options) : typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& v[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Service\\") ? await Service.fromJsonLd(
      v, options) : undefined
      ;
      if (typeof decoded === \\"undefined\\") continue;
      _5UJq9NDh3ZHgswFwwdVxQvJxdx2.push(decoded);
      
    }
    instance.#_5UJq9NDh3ZHgswFwwdVxQvJxdx2 = _5UJq9NDh3ZHgswFwwdVxQvJxdx2;
    const _2fE2QMDdg6KFGqa4NEC3TmjApSAD: (CryptoKey)[] = [];

    const _2fE2QMDdg6KFGqa4NEC3TmjApSAD__array = values[\\"https://w3id.org/security#publicKeyPem\\"];
    for (
      const v of _2fE2QMDdg6KFGqa4NEC3TmjApSAD__array == null
        ? []
        : _2fE2QMDdg6KFGqa4NEC3TmjApSAD__array.length === 1 && \\"@list\\" in _2fE2QMDdg6KFGqa4NEC3TmjApSAD__array[0]
        ? _2fE2QMDdg6KFGqa4NEC3TmjApSAD__array[0][\\"@list\\"]
        : _2fE2QMDdg6KFGqa4NEC3TmjApSAD__array
    ) {
      if (v == null) continue;
    _2fE2QMDdg6KFGqa4NEC3TmjApSAD.push(await importSpki(v[\\"@value\\"]))
    }
    instance.#_2fE2QMDdg6KFGqa4NEC3TmjApSAD = _2fE2QMDdg6KFGqa4NEC3TmjApSAD;
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  
    const proxy: Record<string, unknown> = {};
    if (this.id != null) {
      proxy.id = {
        [Symbol.for(\\"Deno.customInspect\\")]: (
          inspect: typeof Deno.inspect,
          options: Deno.InspectOptions,
        ): string => \\"URL \\" + inspect(this.id!.href, options),
        [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
          _depth: number,
          options: unknown,
          inspect: (value: unknown, options: unknown) => string,
        ): string => \\"URL \\" + inspect(this.id!.href, options),
      };
    }
    
      const _5UJq9NDh3ZHgswFwwdVxQvJxdx2 = this.#_5UJq9NDh3ZHgswFwwdVxQvJxdx2
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_5UJq9NDh3ZHgswFwwdVxQvJxdx2.length == 1) {
        proxy.owner = _5UJq9NDh3ZHgswFwwdVxQvJxdx2[0];
      }
      
      const _2fE2QMDdg6KFGqa4NEC3TmjApSAD = this.#_2fE2QMDdg6KFGqa4NEC3TmjApSAD
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2fE2QMDdg6KFGqa4NEC3TmjApSAD.length == 1) {
        proxy.publicKey = _2fE2QMDdg6KFGqa4NEC3TmjApSAD[0];
      }
      
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"CryptographicKey \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"CryptographicKey \\" + inspect(proxy, options);
  }
  }

/** Represents a key owned by an actor according to [FEP-521a: Representing
 * actor's public keys.][1]
 * 
 * [1]: https://codeberg.org/fediverse/fep/src/branch/main/fep/521a/fep-521a.md
 * 
 */
export class Multikey {

    readonly #documentLoader?: DocumentLoader;
    readonly #contextLoader?: DocumentLoader;
    readonly id: URL | null;

    protected get _documentLoader(): DocumentLoader | undefined {
      return this.#documentLoader;
    }

    protected get _contextLoader(): DocumentLoader | undefined {
      return this.#contextLoader;
    }
    
    /**
     * The type URI of {@link Multikey}: \`https://w3id.org/security#Multikey\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://w3id.org/security#Multikey\\");
    }
  #_2yr3eUBTP6cNcyaxKzAXWjFsnGzN: (Application | Group | Organization | Person | Service | URL)[] = [];
#_4XLHbsR2gLVWU3NpEqKt9wANzn4F: (CryptoKey)[] = [];

  /**
   * Constructs a new instance of Multikey with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
controller?: Application | Group | Organization | Person | Service | URL | null;publicKey?: CryptoKey | null;}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  
    this.#documentLoader = documentLoader;
    this.#contextLoader = contextLoader;
    if (values.id == null || values.id instanceof URL) {
      this.id = values.id ?? null;
    } else {
      throw new TypeError(\\"The id must be a URL.\\");
    }
    
        if (\\"controller\\" in values &&             values.controller != null) {
          if (values.controller instanceof Application || values.controller instanceof Group || values.controller instanceof Organization || values.controller instanceof Person || values.controller instanceof Service || values.controller instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_2yr3eUBTP6cNcyaxKzAXWjFsnGzN = [values.controller];
          } else {
            throw new TypeError(
              \\"The controller must be of type \\" +
              \\"Application | Group | Organization | Person | Service | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"publicKey\\" in values &&             values.publicKey != null) {
          if (
        // @ts-ignore: CryptoKey exists in the global scope.
        // dnt-shim-ignore
        values.publicKey instanceof CryptoKey
      ) {
            // @ts-ignore: type is checked above.
            this.#_4XLHbsR2gLVWU3NpEqKt9wANzn4F = [values.publicKey];
          } else {
            throw new TypeError(
              \\"The publicKey must be of type \\" +
              \\"CryptoKey\\" + \\".\\",
            );
          }
        }
      }

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
controller?: Application | Group | Organization | Person | Service | URL | null;publicKey?: CryptoKey | null;}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Multikey {
  
    // @ts-ignore: this.constructor is not recognized as a constructor, but it is.
    const clone: Multikey = new this.constructor(
      { id: values.id ?? this.id },
      options
    );
    clone.#_2yr3eUBTP6cNcyaxKzAXWjFsnGzN = this.#_2yr3eUBTP6cNcyaxKzAXWjFsnGzN;
        if (\\"controller\\" in values &&             values.controller != null) {
          if (values.controller instanceof Application || values.controller instanceof Group || values.controller instanceof Organization || values.controller instanceof Person || values.controller instanceof Service || values.controller instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_2yr3eUBTP6cNcyaxKzAXWjFsnGzN = [values.controller];
          } else {
            throw new TypeError(
              \\"The controller must be of type \\" +
              \\"Application | Group | Organization | Person | Service | URL\\" + \\".\\",
            );
          }
        }
      clone.#_4XLHbsR2gLVWU3NpEqKt9wANzn4F = this.#_4XLHbsR2gLVWU3NpEqKt9wANzn4F;
        if (\\"publicKey\\" in values &&             values.publicKey != null) {
          if (
        // @ts-ignore: CryptoKey exists in the global scope.
        // dnt-shim-ignore
        values.publicKey instanceof CryptoKey
      ) {
            // @ts-ignore: type is checked above.
            clone.#_4XLHbsR2gLVWU3NpEqKt9wANzn4F = [values.publicKey];
          } else {
            throw new TypeError(
              \\"The publicKey must be of type \\" +
              \\"CryptoKey\\" + \\".\\",
            );
          }
        }
      
    return clone;
  }
  
    async #fetchController(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Application | Group | Organization | Person | Service | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Application.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      try {
        return await Group.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      try {
        return await Organization.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      try {
        return await Person.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      try {
        return await Service.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Application\\",\\"https://www.w3.org/ns/activitystreams#Group\\",\\"https://www.w3.org/ns/activitystreams#Organization\\",\\"https://www.w3.org/ns/activitystreams#Person\\",\\"https://www.w3.org/ns/activitystreams#Service\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Multikey.getController},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get controllerId(): URL | null {
        if (this.#_2yr3eUBTP6cNcyaxKzAXWjFsnGzN.length < 1) return null;
        const v = this.#_2yr3eUBTP6cNcyaxKzAXWjFsnGzN[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** An actor who owns this key.
 */

      async getController(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Application | Group | Organization | Person | Service | null> {
        if (this.#_2yr3eUBTP6cNcyaxKzAXWjFsnGzN.length < 1) return null;
        const v = this.#_2yr3eUBTP6cNcyaxKzAXWjFsnGzN[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchController(v, options);
          if (fetched == null) return null;
          this.#_2yr3eUBTP6cNcyaxKzAXWjFsnGzN[0] = fetched;
          return fetched;
        }
        return v;
      }
      
/** A [Multibase]-encoded value of a [Multicodec] prefix and the key.
 * 
 * [Multibase]: https://www.w3.org/TR/vc-data-integrity/#multibase-0
 * [Multicodec]: https://github.com/multiformats/multicodec/
 * 
 */
get publicKey(): (CryptoKey | null) {
        if (this.#_4XLHbsR2gLVWU3NpEqKt9wANzn4F.length < 1) return null;
        return this.#_4XLHbsR2gLVWU3NpEqKt9wANzn4F[0];
      }
      
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  const values: Record<string, unknown[] | string> = {};
    array = [];
    for (const v of this.#_2yr3eUBTP6cNcyaxKzAXWjFsnGzN) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : v instanceof Application ? await v.toJsonLd(options) : v instanceof Group ? await v.toJsonLd(options) : v instanceof Organization ? await v.toJsonLd(options) : v instanceof Person ? await v.toJsonLd(options) : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://w3id.org/security#controller\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_4XLHbsR2gLVWU3NpEqKt9wANzn4F) {
      const element = (
    {
        \\"@type\\": \\"https://w3id.org/security#multibase\\",
        \\"@value\\": await exportMultibaseKey(v),
      }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://w3id.org/security#publicKeyMultibase\\"] = (
    array
      );
    }
    
    values[\\"@type\\"] = [\\"https://w3id.org/security#Multikey\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? \\"https://w3id.org/security/multikey/v1\\",
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Multikey> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://w3id.org/security#Multikey\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = new this(
      { id: \\"@id\\" in values ? new URL(values[\\"@id\\"] as string) : undefined },
      options,
    );
    const _2yr3eUBTP6cNcyaxKzAXWjFsnGzN: (Application | Group | Organization | Person | Service | URL)[] = [];

    const _2yr3eUBTP6cNcyaxKzAXWjFsnGzN__array = values[\\"https://w3id.org/security#controller\\"];
    for (
      const v of _2yr3eUBTP6cNcyaxKzAXWjFsnGzN__array == null
        ? []
        : _2yr3eUBTP6cNcyaxKzAXWjFsnGzN__array.length === 1 && \\"@list\\" in _2yr3eUBTP6cNcyaxKzAXWjFsnGzN__array[0]
        ? _2yr3eUBTP6cNcyaxKzAXWjFsnGzN__array[0][\\"@list\\"]
        : _2yr3eUBTP6cNcyaxKzAXWjFsnGzN__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _2yr3eUBTP6cNcyaxKzAXWjFsnGzN.push(new URL(v[\\"@id\\"]));
        continue;
      }
      
      const decoded =
      typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& v[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Application\\") ? await Application.fromJsonLd(
      v, options) : typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& v[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Group\\") ? await Group.fromJsonLd(
      v, options) : typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& v[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Organization\\") ? await Organization.fromJsonLd(
      v, options) : typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& v[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Person\\") ? await Person.fromJsonLd(
      v, options) : typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& v[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Service\\") ? await Service.fromJsonLd(
      v, options) : undefined
      ;
      if (typeof decoded === \\"undefined\\") continue;
      _2yr3eUBTP6cNcyaxKzAXWjFsnGzN.push(decoded);
      
    }
    instance.#_2yr3eUBTP6cNcyaxKzAXWjFsnGzN = _2yr3eUBTP6cNcyaxKzAXWjFsnGzN;
    const _4XLHbsR2gLVWU3NpEqKt9wANzn4F: (CryptoKey)[] = [];

    const _4XLHbsR2gLVWU3NpEqKt9wANzn4F__array = values[\\"https://w3id.org/security#publicKeyMultibase\\"];
    for (
      const v of _4XLHbsR2gLVWU3NpEqKt9wANzn4F__array == null
        ? []
        : _4XLHbsR2gLVWU3NpEqKt9wANzn4F__array.length === 1 && \\"@list\\" in _4XLHbsR2gLVWU3NpEqKt9wANzn4F__array[0]
        ? _4XLHbsR2gLVWU3NpEqKt9wANzn4F__array[0][\\"@list\\"]
        : _4XLHbsR2gLVWU3NpEqKt9wANzn4F__array
    ) {
      if (v == null) continue;
    _4XLHbsR2gLVWU3NpEqKt9wANzn4F.push(await importMultibaseKey(v[\\"@value\\"]))
    }
    instance.#_4XLHbsR2gLVWU3NpEqKt9wANzn4F = _4XLHbsR2gLVWU3NpEqKt9wANzn4F;
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  
    const proxy: Record<string, unknown> = {};
    if (this.id != null) {
      proxy.id = {
        [Symbol.for(\\"Deno.customInspect\\")]: (
          inspect: typeof Deno.inspect,
          options: Deno.InspectOptions,
        ): string => \\"URL \\" + inspect(this.id!.href, options),
        [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
          _depth: number,
          options: unknown,
          inspect: (value: unknown, options: unknown) => string,
        ): string => \\"URL \\" + inspect(this.id!.href, options),
      };
    }
    
      const _2yr3eUBTP6cNcyaxKzAXWjFsnGzN = this.#_2yr3eUBTP6cNcyaxKzAXWjFsnGzN
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2yr3eUBTP6cNcyaxKzAXWjFsnGzN.length == 1) {
        proxy.controller = _2yr3eUBTP6cNcyaxKzAXWjFsnGzN[0];
      }
      
      const _4XLHbsR2gLVWU3NpEqKt9wANzn4F = this.#_4XLHbsR2gLVWU3NpEqKt9wANzn4F
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_4XLHbsR2gLVWU3NpEqKt9wANzn4F.length == 1) {
        proxy.publicKey = _4XLHbsR2gLVWU3NpEqKt9wANzn4F[0];
      }
      
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Multikey \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Multikey \\" + inspect(proxy, options);
  }
  }

/** An Activity is a subtype of {@link Object} that describes some form of action
 * that may happen, is currently happening, or has already happened.
 * The {@link Activity} type itself serves as an abstract base type for all types
 * of activities.  It is important to note that the {@link Activity} type itself
 * does not carry any specific semantics about the kind of action being taken.
 * 
 */
export class Activity extends Object {

    /**
     * The type URI of {@link Activity}: \`https://www.w3.org/ns/activitystreams#Activity\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Activity\\");
    }
  #_2DjTTboo3CNHU2a2JQqUSE2dbv9D: (Application | Group | Organization | Person | Service | URL)[] = [];
#_2MH19yxjn1wnHsNfa5n4JBhJzxyc: (Object | URL)[] = [];
#_3JQCmF2Ww56Ag9EWRYoSZRDNCYtF: (Object | URL)[] = [];
#_u4QGFbRFcYmPEKGbPv1hpBR9r5G: (Object | URL)[] = [];
#_25zu2s3VxVujgEKqrDycjE284XQR: (Object | URL)[] = [];
#_3c5t2x7DYRo2shwTxpkd4kYSS5WQ: (Object | URL)[] = [];

  /**
   * Constructs a new instance of Activity with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });
        if (\\"actor\\" in values &&             values.actor != null) {
          if (values.actor instanceof Application || values.actor instanceof Group || values.actor instanceof Organization || values.actor instanceof Person || values.actor instanceof Service || values.actor instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_2DjTTboo3CNHU2a2JQqUSE2dbv9D = [values.actor];
          } else {
            throw new TypeError(
              \\"The actor must be of type \\" +
              \\"Application | Group | Organization | Person | Service | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"actors\\" in values &&             values.actors != null) {
      
          if (\\"actor\\" in values &&
              values.actor != null) {
            throw new TypeError(
              \\"Cannot initialize both actor and \\" +
                \\"actors at the same time.\\",
            );
          }
        
          if (Array.isArray(values.actors) &&
              values.actors.every(v => v instanceof Application || v instanceof Group || v instanceof Organization || v instanceof Person || v instanceof Service || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_2DjTTboo3CNHU2a2JQqUSE2dbv9D = values.actors;
          } else {
            throw new TypeError(
              \\"The actors must be an array of type \\" +
              \\"Application | Group | Organization | Person | Service | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"object\\" in values &&             values.object != null) {
          if (values.object instanceof Object || values.object instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_2MH19yxjn1wnHsNfa5n4JBhJzxyc = [values.object];
          } else {
            throw new TypeError(
              \\"The object must be of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"objects\\" in values &&             values.objects != null) {
      
          if (\\"object\\" in values &&
              values.object != null) {
            throw new TypeError(
              \\"Cannot initialize both object and \\" +
                \\"objects at the same time.\\",
            );
          }
        
          if (Array.isArray(values.objects) &&
              values.objects.every(v => v instanceof Object || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_2MH19yxjn1wnHsNfa5n4JBhJzxyc = values.objects;
          } else {
            throw new TypeError(
              \\"The objects must be an array of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"target\\" in values &&             values.target != null) {
          if (values.target instanceof Object || values.target instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_3JQCmF2Ww56Ag9EWRYoSZRDNCYtF = [values.target];
          } else {
            throw new TypeError(
              \\"The target must be of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"targets\\" in values &&             values.targets != null) {
      
          if (\\"target\\" in values &&
              values.target != null) {
            throw new TypeError(
              \\"Cannot initialize both target and \\" +
                \\"targets at the same time.\\",
            );
          }
        
          if (Array.isArray(values.targets) &&
              values.targets.every(v => v instanceof Object || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_3JQCmF2Ww56Ag9EWRYoSZRDNCYtF = values.targets;
          } else {
            throw new TypeError(
              \\"The targets must be an array of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"result\\" in values &&             values.result != null) {
          if (values.result instanceof Object || values.result instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_u4QGFbRFcYmPEKGbPv1hpBR9r5G = [values.result];
          } else {
            throw new TypeError(
              \\"The result must be of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"results\\" in values &&             values.results != null) {
      
          if (\\"result\\" in values &&
              values.result != null) {
            throw new TypeError(
              \\"Cannot initialize both result and \\" +
                \\"results at the same time.\\",
            );
          }
        
          if (Array.isArray(values.results) &&
              values.results.every(v => v instanceof Object || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_u4QGFbRFcYmPEKGbPv1hpBR9r5G = values.results;
          } else {
            throw new TypeError(
              \\"The results must be an array of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"origin\\" in values &&             values.origin != null) {
          if (values.origin instanceof Object || values.origin instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_25zu2s3VxVujgEKqrDycjE284XQR = [values.origin];
          } else {
            throw new TypeError(
              \\"The origin must be of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"origins\\" in values &&             values.origins != null) {
      
          if (\\"origin\\" in values &&
              values.origin != null) {
            throw new TypeError(
              \\"Cannot initialize both origin and \\" +
                \\"origins at the same time.\\",
            );
          }
        
          if (Array.isArray(values.origins) &&
              values.origins.every(v => v instanceof Object || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_25zu2s3VxVujgEKqrDycjE284XQR = values.origins;
          } else {
            throw new TypeError(
              \\"The origins must be an array of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"instrument\\" in values &&             values.instrument != null) {
          if (values.instrument instanceof Object || values.instrument instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_3c5t2x7DYRo2shwTxpkd4kYSS5WQ = [values.instrument];
          } else {
            throw new TypeError(
              \\"The instrument must be of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"instruments\\" in values &&             values.instruments != null) {
      
          if (\\"instrument\\" in values &&
              values.instrument != null) {
            throw new TypeError(
              \\"Cannot initialize both instrument and \\" +
                \\"instruments at the same time.\\",
            );
          }
        
          if (Array.isArray(values.instruments) &&
              values.instruments.every(v => v instanceof Object || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_3c5t2x7DYRo2shwTxpkd4kYSS5WQ = values.instruments;
          } else {
            throw new TypeError(
              \\"The instruments must be an array of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      }

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Activity {
  const clone = super.clone(values, options) as unknown as Activity;clone.#_2DjTTboo3CNHU2a2JQqUSE2dbv9D = this.#_2DjTTboo3CNHU2a2JQqUSE2dbv9D;
        if (\\"actor\\" in values &&             values.actor != null) {
          if (values.actor instanceof Application || values.actor instanceof Group || values.actor instanceof Organization || values.actor instanceof Person || values.actor instanceof Service || values.actor instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_2DjTTboo3CNHU2a2JQqUSE2dbv9D = [values.actor];
          } else {
            throw new TypeError(
              \\"The actor must be of type \\" +
              \\"Application | Group | Organization | Person | Service | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"actors\\" in values &&             values.actors != null) {
      
          if (\\"actor\\" in values &&
              values.actor != null) {
            throw new TypeError(
              \\"Cannot update both actor and \\" +
                \\"actors at the same time.\\",
            );
          }
        
          if (Array.isArray(values.actors) &&
              values.actors.every(v => v instanceof Application || v instanceof Group || v instanceof Organization || v instanceof Person || v instanceof Service || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_2DjTTboo3CNHU2a2JQqUSE2dbv9D = values.actors;
          } else {
            throw new TypeError(
              \\"The actors must be an array of type \\" +
              \\"Application | Group | Organization | Person | Service | URL\\" + \\".\\",
            );
          }
        }
      clone.#_2MH19yxjn1wnHsNfa5n4JBhJzxyc = this.#_2MH19yxjn1wnHsNfa5n4JBhJzxyc;
        if (\\"object\\" in values &&             values.object != null) {
          if (values.object instanceof Object || values.object instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_2MH19yxjn1wnHsNfa5n4JBhJzxyc = [values.object];
          } else {
            throw new TypeError(
              \\"The object must be of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"objects\\" in values &&             values.objects != null) {
      
          if (\\"object\\" in values &&
              values.object != null) {
            throw new TypeError(
              \\"Cannot update both object and \\" +
                \\"objects at the same time.\\",
            );
          }
        
          if (Array.isArray(values.objects) &&
              values.objects.every(v => v instanceof Object || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_2MH19yxjn1wnHsNfa5n4JBhJzxyc = values.objects;
          } else {
            throw new TypeError(
              \\"The objects must be an array of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      clone.#_3JQCmF2Ww56Ag9EWRYoSZRDNCYtF = this.#_3JQCmF2Ww56Ag9EWRYoSZRDNCYtF;
        if (\\"target\\" in values &&             values.target != null) {
          if (values.target instanceof Object || values.target instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_3JQCmF2Ww56Ag9EWRYoSZRDNCYtF = [values.target];
          } else {
            throw new TypeError(
              \\"The target must be of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"targets\\" in values &&             values.targets != null) {
      
          if (\\"target\\" in values &&
              values.target != null) {
            throw new TypeError(
              \\"Cannot update both target and \\" +
                \\"targets at the same time.\\",
            );
          }
        
          if (Array.isArray(values.targets) &&
              values.targets.every(v => v instanceof Object || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_3JQCmF2Ww56Ag9EWRYoSZRDNCYtF = values.targets;
          } else {
            throw new TypeError(
              \\"The targets must be an array of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      clone.#_u4QGFbRFcYmPEKGbPv1hpBR9r5G = this.#_u4QGFbRFcYmPEKGbPv1hpBR9r5G;
        if (\\"result\\" in values &&             values.result != null) {
          if (values.result instanceof Object || values.result instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_u4QGFbRFcYmPEKGbPv1hpBR9r5G = [values.result];
          } else {
            throw new TypeError(
              \\"The result must be of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"results\\" in values &&             values.results != null) {
      
          if (\\"result\\" in values &&
              values.result != null) {
            throw new TypeError(
              \\"Cannot update both result and \\" +
                \\"results at the same time.\\",
            );
          }
        
          if (Array.isArray(values.results) &&
              values.results.every(v => v instanceof Object || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_u4QGFbRFcYmPEKGbPv1hpBR9r5G = values.results;
          } else {
            throw new TypeError(
              \\"The results must be an array of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      clone.#_25zu2s3VxVujgEKqrDycjE284XQR = this.#_25zu2s3VxVujgEKqrDycjE284XQR;
        if (\\"origin\\" in values &&             values.origin != null) {
          if (values.origin instanceof Object || values.origin instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_25zu2s3VxVujgEKqrDycjE284XQR = [values.origin];
          } else {
            throw new TypeError(
              \\"The origin must be of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"origins\\" in values &&             values.origins != null) {
      
          if (\\"origin\\" in values &&
              values.origin != null) {
            throw new TypeError(
              \\"Cannot update both origin and \\" +
                \\"origins at the same time.\\",
            );
          }
        
          if (Array.isArray(values.origins) &&
              values.origins.every(v => v instanceof Object || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_25zu2s3VxVujgEKqrDycjE284XQR = values.origins;
          } else {
            throw new TypeError(
              \\"The origins must be an array of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      clone.#_3c5t2x7DYRo2shwTxpkd4kYSS5WQ = this.#_3c5t2x7DYRo2shwTxpkd4kYSS5WQ;
        if (\\"instrument\\" in values &&             values.instrument != null) {
          if (values.instrument instanceof Object || values.instrument instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_3c5t2x7DYRo2shwTxpkd4kYSS5WQ = [values.instrument];
          } else {
            throw new TypeError(
              \\"The instrument must be of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"instruments\\" in values &&             values.instruments != null) {
      
          if (\\"instrument\\" in values &&
              values.instrument != null) {
            throw new TypeError(
              \\"Cannot update both instrument and \\" +
                \\"instruments at the same time.\\",
            );
          }
        
          if (Array.isArray(values.instruments) &&
              values.instruments.every(v => v instanceof Object || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_3c5t2x7DYRo2shwTxpkd4kYSS5WQ = values.instruments;
          } else {
            throw new TypeError(
              \\"The instruments must be an array of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
    return clone;
  }
  
    async #fetchActor(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Application | Group | Organization | Person | Service | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Application.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      try {
        return await Group.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      try {
        return await Organization.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      try {
        return await Person.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      try {
        return await Service.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Application\\",\\"https://www.w3.org/ns/activitystreams#Group\\",\\"https://www.w3.org/ns/activitystreams#Organization\\",\\"https://www.w3.org/ns/activitystreams#Person\\",\\"https://www.w3.org/ns/activitystreams#Service\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Activity.getActor},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get actorId(): URL | null {
        if (this.#_2DjTTboo3CNHU2a2JQqUSE2dbv9D.length < 1) return null;
        const v = this.#_2DjTTboo3CNHU2a2JQqUSE2dbv9D[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** Describes one or more entities that either performed or are expected to
 * perform the activity.  Any single activity can have multiple actors.
 * The actor MAY be specified using an indirect {@link Link}.
 * 
 */

      async getActor(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Application | Group | Organization | Person | Service | null> {
        if (this.#_2DjTTboo3CNHU2a2JQqUSE2dbv9D.length < 1) return null;
        const v = this.#_2DjTTboo3CNHU2a2JQqUSE2dbv9D[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchActor(v, options);
          if (fetched == null) return null;
          this.#_2DjTTboo3CNHU2a2JQqUSE2dbv9D[0] = fetched;
          return fetched;
        }
        return v;
      }
      
      /**
       * Similar to
       * {@link Activity.getActors},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get actorIds(): URL[] {
        return this.#_2DjTTboo3CNHU2a2JQqUSE2dbv9D.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** Describes one or more entities that either performed or are expected to
 * perform the activity.  Any single activity can have multiple actors.
 * The actor MAY be specified using an indirect {@link Link}.
 * 
 */

      async* getActors(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Application | Group | Organization | Person | Service> {
        const vs = this.#_2DjTTboo3CNHU2a2JQqUSE2dbv9D;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchActor(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
    async #fetchObject(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Object | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Object.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Object\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Activity.getObject},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get objectId(): URL | null {
        if (this.#_2MH19yxjn1wnHsNfa5n4JBhJzxyc.length < 1) return null;
        const v = this.#_2MH19yxjn1wnHsNfa5n4JBhJzxyc[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** When used within an {@link Activity}, describes the direct object of
 * the activity.  For instance, in the activity \\"John added a movie to his
 * wishlist\\", the object of the activity is the movie added.
 * 
 */

      async getObject(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Object | null> {
        if (this.#_2MH19yxjn1wnHsNfa5n4JBhJzxyc.length < 1) return null;
        const v = this.#_2MH19yxjn1wnHsNfa5n4JBhJzxyc[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchObject(v, options);
          if (fetched == null) return null;
          this.#_2MH19yxjn1wnHsNfa5n4JBhJzxyc[0] = fetched;
          return fetched;
        }
        return v;
      }
      
      /**
       * Similar to
       * {@link Activity.getObjects},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get objectIds(): URL[] {
        return this.#_2MH19yxjn1wnHsNfa5n4JBhJzxyc.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** When used within an {@link Activity}, describes the direct object of
 * the activity.  For instance, in the activity \\"John added a movie to his
 * wishlist\\", the object of the activity is the movie added.
 * 
 */

      async* getObjects(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Object> {
        const vs = this.#_2MH19yxjn1wnHsNfa5n4JBhJzxyc;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchObject(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
    async #fetchTarget(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Object | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Object.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Object\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Activity.getTarget},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get targetId(): URL | null {
        if (this.#_3JQCmF2Ww56Ag9EWRYoSZRDNCYtF.length < 1) return null;
        const v = this.#_3JQCmF2Ww56Ag9EWRYoSZRDNCYtF[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** Describes the indirect object, or target, of the activity.  The precise
 * meaning of the target is largely dependent on the type of action being
 * described but will often be the object of the English preposition \\"to\\".
 * For instance, in the activity \\"John added a movie to his wishlist\\",
 * the target of the activity is John's wishlist.  An activity can have more
 * than one target. 
 * 
 */

      async getTarget(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Object | null> {
        if (this.#_3JQCmF2Ww56Ag9EWRYoSZRDNCYtF.length < 1) return null;
        const v = this.#_3JQCmF2Ww56Ag9EWRYoSZRDNCYtF[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchTarget(v, options);
          if (fetched == null) return null;
          this.#_3JQCmF2Ww56Ag9EWRYoSZRDNCYtF[0] = fetched;
          return fetched;
        }
        return v;
      }
      
      /**
       * Similar to
       * {@link Activity.getTargets},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get targetIds(): URL[] {
        return this.#_3JQCmF2Ww56Ag9EWRYoSZRDNCYtF.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** Describes the indirect object, or target, of the activity.  The precise
 * meaning of the target is largely dependent on the type of action being
 * described but will often be the object of the English preposition \\"to\\".
 * For instance, in the activity \\"John added a movie to his wishlist\\",
 * the target of the activity is John's wishlist.  An activity can have more
 * than one target. 
 * 
 */

      async* getTargets(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Object> {
        const vs = this.#_3JQCmF2Ww56Ag9EWRYoSZRDNCYtF;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchTarget(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
    async #fetchResult(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Object | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Object.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Object\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Activity.getResult},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get resultId(): URL | null {
        if (this.#_u4QGFbRFcYmPEKGbPv1hpBR9r5G.length < 1) return null;
        const v = this.#_u4QGFbRFcYmPEKGbPv1hpBR9r5G[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** Describes the result of the activity.  For instance, if a particular action
 * results in the creation of a new resource, the result property can be used
 * to describe that new resource. 
 * 
 */

      async getResult(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Object | null> {
        if (this.#_u4QGFbRFcYmPEKGbPv1hpBR9r5G.length < 1) return null;
        const v = this.#_u4QGFbRFcYmPEKGbPv1hpBR9r5G[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchResult(v, options);
          if (fetched == null) return null;
          this.#_u4QGFbRFcYmPEKGbPv1hpBR9r5G[0] = fetched;
          return fetched;
        }
        return v;
      }
      
      /**
       * Similar to
       * {@link Activity.getResults},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get resultIds(): URL[] {
        return this.#_u4QGFbRFcYmPEKGbPv1hpBR9r5G.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** Describes the result of the activity.  For instance, if a particular action
 * results in the creation of a new resource, the result property can be used
 * to describe that new resource. 
 * 
 */

      async* getResults(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Object> {
        const vs = this.#_u4QGFbRFcYmPEKGbPv1hpBR9r5G;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchResult(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
    async #fetchOrigin(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Object | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Object.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Object\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Activity.getOrigin},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get originId(): URL | null {
        if (this.#_25zu2s3VxVujgEKqrDycjE284XQR.length < 1) return null;
        const v = this.#_25zu2s3VxVujgEKqrDycjE284XQR[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** Describes an indirect object of the activity from which the activity is
 * directed.  The precise meaning of the origin is the object of the English
 * preposition \\"from\\". For instance, in the activity \\"John moved an item to
 * List B from List A\\", the origin of the activity is \\"List A\\".
 * 
 */

      async getOrigin(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Object | null> {
        if (this.#_25zu2s3VxVujgEKqrDycjE284XQR.length < 1) return null;
        const v = this.#_25zu2s3VxVujgEKqrDycjE284XQR[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchOrigin(v, options);
          if (fetched == null) return null;
          this.#_25zu2s3VxVujgEKqrDycjE284XQR[0] = fetched;
          return fetched;
        }
        return v;
      }
      
      /**
       * Similar to
       * {@link Activity.getOrigins},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get originIds(): URL[] {
        return this.#_25zu2s3VxVujgEKqrDycjE284XQR.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** Describes an indirect object of the activity from which the activity is
 * directed.  The precise meaning of the origin is the object of the English
 * preposition \\"from\\". For instance, in the activity \\"John moved an item to
 * List B from List A\\", the origin of the activity is \\"List A\\".
 * 
 */

      async* getOrigins(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Object> {
        const vs = this.#_25zu2s3VxVujgEKqrDycjE284XQR;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchOrigin(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
    async #fetchInstrument(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Object | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Object.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Object\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Activity.getInstrument},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get instrumentId(): URL | null {
        if (this.#_3c5t2x7DYRo2shwTxpkd4kYSS5WQ.length < 1) return null;
        const v = this.#_3c5t2x7DYRo2shwTxpkd4kYSS5WQ[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** Identifies one or more objects used (or to be used) in the completion of
 * an {@link Activity}.
 * 
 */

      async getInstrument(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Object | null> {
        if (this.#_3c5t2x7DYRo2shwTxpkd4kYSS5WQ.length < 1) return null;
        const v = this.#_3c5t2x7DYRo2shwTxpkd4kYSS5WQ[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchInstrument(v, options);
          if (fetched == null) return null;
          this.#_3c5t2x7DYRo2shwTxpkd4kYSS5WQ[0] = fetched;
          return fetched;
        }
        return v;
      }
      
      /**
       * Similar to
       * {@link Activity.getInstruments},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get instrumentIds(): URL[] {
        return this.#_3c5t2x7DYRo2shwTxpkd4kYSS5WQ.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** Identifies one or more objects used (or to be used) in the completion of
 * an {@link Activity}.
 * 
 */

      async* getInstruments(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Object> {
        const vs = this.#_3c5t2x7DYRo2shwTxpkd4kYSS5WQ;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchInstrument(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    array = [];
    for (const v of this.#_2DjTTboo3CNHU2a2JQqUSE2dbv9D) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : v instanceof Application ? await v.toJsonLd(options) : v instanceof Group ? await v.toJsonLd(options) : v instanceof Organization ? await v.toJsonLd(options) : v instanceof Person ? await v.toJsonLd(options) : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#actor\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_2MH19yxjn1wnHsNfa5n4JBhJzxyc) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#object\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3JQCmF2Ww56Ag9EWRYoSZRDNCYtF) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#target\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_u4QGFbRFcYmPEKGbPv1hpBR9r5G) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#result\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_25zu2s3VxVujgEKqrDycjE284XQR) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#origin\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3c5t2x7DYRo2shwTxpkd4kYSS5WQ) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#instrument\\"] = (
    array
      );
    }
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Activity\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/v1\\",\\"https://w3id.org/security/data-integrity/v1\\"],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Activity> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Accept\\")) {
      delete values[\\"@type\\"];
      return await Accept.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Add\\")) {
      delete values[\\"@type\\"];
      return await Add.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Announce\\")) {
      delete values[\\"@type\\"];
      return await Announce.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Create\\")) {
      delete values[\\"@type\\"];
      return await Create.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Delete\\")) {
      delete values[\\"@type\\"];
      return await Delete.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Dislike\\")) {
      delete values[\\"@type\\"];
      return await Dislike.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Flag\\")) {
      delete values[\\"@type\\"];
      return await Flag.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Follow\\")) {
      delete values[\\"@type\\"];
      return await Follow.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Ignore\\")) {
      delete values[\\"@type\\"];
      return await Ignore.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Block\\")) {
      delete values[\\"@type\\"];
      return await Block.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#IntransitiveActivity\\")) {
      delete values[\\"@type\\"];
      return await IntransitiveActivity.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Arrive\\")) {
      delete values[\\"@type\\"];
      return await Arrive.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Question\\")) {
      delete values[\\"@type\\"];
      return await Question.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Join\\")) {
      delete values[\\"@type\\"];
      return await Join.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Leave\\")) {
      delete values[\\"@type\\"];
      return await Leave.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Like\\")) {
      delete values[\\"@type\\"];
      return await Like.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Listen\\")) {
      delete values[\\"@type\\"];
      return await Listen.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Offer\\")) {
      delete values[\\"@type\\"];
      return await Offer.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Invite\\")) {
      delete values[\\"@type\\"];
      return await Invite.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Reject\\")) {
      delete values[\\"@type\\"];
      return await Reject.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Remove\\")) {
      delete values[\\"@type\\"];
      return await Remove.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Undo\\")) {
      delete values[\\"@type\\"];
      return await Undo.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Update\\")) {
      delete values[\\"@type\\"];
      return await Update.fromJsonLd(values, options);
    }
    
    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Activity\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Activity)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    const _2DjTTboo3CNHU2a2JQqUSE2dbv9D: (Application | Group | Organization | Person | Service | URL)[] = [];

    const _2DjTTboo3CNHU2a2JQqUSE2dbv9D__array = values[\\"https://www.w3.org/ns/activitystreams#actor\\"];
    for (
      const v of _2DjTTboo3CNHU2a2JQqUSE2dbv9D__array == null
        ? []
        : _2DjTTboo3CNHU2a2JQqUSE2dbv9D__array.length === 1 && \\"@list\\" in _2DjTTboo3CNHU2a2JQqUSE2dbv9D__array[0]
        ? _2DjTTboo3CNHU2a2JQqUSE2dbv9D__array[0][\\"@list\\"]
        : _2DjTTboo3CNHU2a2JQqUSE2dbv9D__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _2DjTTboo3CNHU2a2JQqUSE2dbv9D.push(new URL(v[\\"@id\\"]));
        continue;
      }
      
      const decoded =
      typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& v[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Application\\") ? await Application.fromJsonLd(
      v, options) : typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& v[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Group\\") ? await Group.fromJsonLd(
      v, options) : typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& v[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Organization\\") ? await Organization.fromJsonLd(
      v, options) : typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& v[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Person\\") ? await Person.fromJsonLd(
      v, options) : typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& v[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Service\\") ? await Service.fromJsonLd(
      v, options) : undefined
      ;
      if (typeof decoded === \\"undefined\\") continue;
      _2DjTTboo3CNHU2a2JQqUSE2dbv9D.push(decoded);
      
    }
    instance.#_2DjTTboo3CNHU2a2JQqUSE2dbv9D = _2DjTTboo3CNHU2a2JQqUSE2dbv9D;
    const _2MH19yxjn1wnHsNfa5n4JBhJzxyc: (Object | URL)[] = [];

    const _2MH19yxjn1wnHsNfa5n4JBhJzxyc__array = values[\\"https://www.w3.org/ns/activitystreams#object\\"];
    for (
      const v of _2MH19yxjn1wnHsNfa5n4JBhJzxyc__array == null
        ? []
        : _2MH19yxjn1wnHsNfa5n4JBhJzxyc__array.length === 1 && \\"@list\\" in _2MH19yxjn1wnHsNfa5n4JBhJzxyc__array[0]
        ? _2MH19yxjn1wnHsNfa5n4JBhJzxyc__array[0][\\"@list\\"]
        : _2MH19yxjn1wnHsNfa5n4JBhJzxyc__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _2MH19yxjn1wnHsNfa5n4JBhJzxyc.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _2MH19yxjn1wnHsNfa5n4JBhJzxyc.push(await Object.fromJsonLd(
      v, options))
    }
    instance.#_2MH19yxjn1wnHsNfa5n4JBhJzxyc = _2MH19yxjn1wnHsNfa5n4JBhJzxyc;
    const _3JQCmF2Ww56Ag9EWRYoSZRDNCYtF: (Object | URL)[] = [];

    const _3JQCmF2Ww56Ag9EWRYoSZRDNCYtF__array = values[\\"https://www.w3.org/ns/activitystreams#target\\"];
    for (
      const v of _3JQCmF2Ww56Ag9EWRYoSZRDNCYtF__array == null
        ? []
        : _3JQCmF2Ww56Ag9EWRYoSZRDNCYtF__array.length === 1 && \\"@list\\" in _3JQCmF2Ww56Ag9EWRYoSZRDNCYtF__array[0]
        ? _3JQCmF2Ww56Ag9EWRYoSZRDNCYtF__array[0][\\"@list\\"]
        : _3JQCmF2Ww56Ag9EWRYoSZRDNCYtF__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _3JQCmF2Ww56Ag9EWRYoSZRDNCYtF.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _3JQCmF2Ww56Ag9EWRYoSZRDNCYtF.push(await Object.fromJsonLd(
      v, options))
    }
    instance.#_3JQCmF2Ww56Ag9EWRYoSZRDNCYtF = _3JQCmF2Ww56Ag9EWRYoSZRDNCYtF;
    const _u4QGFbRFcYmPEKGbPv1hpBR9r5G: (Object | URL)[] = [];

    const _u4QGFbRFcYmPEKGbPv1hpBR9r5G__array = values[\\"https://www.w3.org/ns/activitystreams#result\\"];
    for (
      const v of _u4QGFbRFcYmPEKGbPv1hpBR9r5G__array == null
        ? []
        : _u4QGFbRFcYmPEKGbPv1hpBR9r5G__array.length === 1 && \\"@list\\" in _u4QGFbRFcYmPEKGbPv1hpBR9r5G__array[0]
        ? _u4QGFbRFcYmPEKGbPv1hpBR9r5G__array[0][\\"@list\\"]
        : _u4QGFbRFcYmPEKGbPv1hpBR9r5G__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _u4QGFbRFcYmPEKGbPv1hpBR9r5G.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _u4QGFbRFcYmPEKGbPv1hpBR9r5G.push(await Object.fromJsonLd(
      v, options))
    }
    instance.#_u4QGFbRFcYmPEKGbPv1hpBR9r5G = _u4QGFbRFcYmPEKGbPv1hpBR9r5G;
    const _25zu2s3VxVujgEKqrDycjE284XQR: (Object | URL)[] = [];

    const _25zu2s3VxVujgEKqrDycjE284XQR__array = values[\\"https://www.w3.org/ns/activitystreams#origin\\"];
    for (
      const v of _25zu2s3VxVujgEKqrDycjE284XQR__array == null
        ? []
        : _25zu2s3VxVujgEKqrDycjE284XQR__array.length === 1 && \\"@list\\" in _25zu2s3VxVujgEKqrDycjE284XQR__array[0]
        ? _25zu2s3VxVujgEKqrDycjE284XQR__array[0][\\"@list\\"]
        : _25zu2s3VxVujgEKqrDycjE284XQR__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _25zu2s3VxVujgEKqrDycjE284XQR.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _25zu2s3VxVujgEKqrDycjE284XQR.push(await Object.fromJsonLd(
      v, options))
    }
    instance.#_25zu2s3VxVujgEKqrDycjE284XQR = _25zu2s3VxVujgEKqrDycjE284XQR;
    const _3c5t2x7DYRo2shwTxpkd4kYSS5WQ: (Object | URL)[] = [];

    const _3c5t2x7DYRo2shwTxpkd4kYSS5WQ__array = values[\\"https://www.w3.org/ns/activitystreams#instrument\\"];
    for (
      const v of _3c5t2x7DYRo2shwTxpkd4kYSS5WQ__array == null
        ? []
        : _3c5t2x7DYRo2shwTxpkd4kYSS5WQ__array.length === 1 && \\"@list\\" in _3c5t2x7DYRo2shwTxpkd4kYSS5WQ__array[0]
        ? _3c5t2x7DYRo2shwTxpkd4kYSS5WQ__array[0][\\"@list\\"]
        : _3c5t2x7DYRo2shwTxpkd4kYSS5WQ__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _3c5t2x7DYRo2shwTxpkd4kYSS5WQ.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _3c5t2x7DYRo2shwTxpkd4kYSS5WQ.push(await Object.fromJsonLd(
      v, options))
    }
    instance.#_3c5t2x7DYRo2shwTxpkd4kYSS5WQ = _3c5t2x7DYRo2shwTxpkd4kYSS5WQ;
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
      const _2DjTTboo3CNHU2a2JQqUSE2dbv9D = this.#_2DjTTboo3CNHU2a2JQqUSE2dbv9D
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2DjTTboo3CNHU2a2JQqUSE2dbv9D.length == 1) {
        proxy.actor = _2DjTTboo3CNHU2a2JQqUSE2dbv9D[0];
      }
      
      if (_2DjTTboo3CNHU2a2JQqUSE2dbv9D.length > 1
          || !(\\"actor\\" in proxy)
          && _2DjTTboo3CNHU2a2JQqUSE2dbv9D.length > 0) {
        proxy.actors = _2DjTTboo3CNHU2a2JQqUSE2dbv9D;
      }
      
      const _2MH19yxjn1wnHsNfa5n4JBhJzxyc = this.#_2MH19yxjn1wnHsNfa5n4JBhJzxyc
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2MH19yxjn1wnHsNfa5n4JBhJzxyc.length == 1) {
        proxy.object = _2MH19yxjn1wnHsNfa5n4JBhJzxyc[0];
      }
      
      if (_2MH19yxjn1wnHsNfa5n4JBhJzxyc.length > 1
          || !(\\"object\\" in proxy)
          && _2MH19yxjn1wnHsNfa5n4JBhJzxyc.length > 0) {
        proxy.objects = _2MH19yxjn1wnHsNfa5n4JBhJzxyc;
      }
      
      const _3JQCmF2Ww56Ag9EWRYoSZRDNCYtF = this.#_3JQCmF2Ww56Ag9EWRYoSZRDNCYtF
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3JQCmF2Ww56Ag9EWRYoSZRDNCYtF.length == 1) {
        proxy.target = _3JQCmF2Ww56Ag9EWRYoSZRDNCYtF[0];
      }
      
      if (_3JQCmF2Ww56Ag9EWRYoSZRDNCYtF.length > 1
          || !(\\"target\\" in proxy)
          && _3JQCmF2Ww56Ag9EWRYoSZRDNCYtF.length > 0) {
        proxy.targets = _3JQCmF2Ww56Ag9EWRYoSZRDNCYtF;
      }
      
      const _u4QGFbRFcYmPEKGbPv1hpBR9r5G = this.#_u4QGFbRFcYmPEKGbPv1hpBR9r5G
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_u4QGFbRFcYmPEKGbPv1hpBR9r5G.length == 1) {
        proxy.result = _u4QGFbRFcYmPEKGbPv1hpBR9r5G[0];
      }
      
      if (_u4QGFbRFcYmPEKGbPv1hpBR9r5G.length > 1
          || !(\\"result\\" in proxy)
          && _u4QGFbRFcYmPEKGbPv1hpBR9r5G.length > 0) {
        proxy.results = _u4QGFbRFcYmPEKGbPv1hpBR9r5G;
      }
      
      const _25zu2s3VxVujgEKqrDycjE284XQR = this.#_25zu2s3VxVujgEKqrDycjE284XQR
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_25zu2s3VxVujgEKqrDycjE284XQR.length == 1) {
        proxy.origin = _25zu2s3VxVujgEKqrDycjE284XQR[0];
      }
      
      if (_25zu2s3VxVujgEKqrDycjE284XQR.length > 1
          || !(\\"origin\\" in proxy)
          && _25zu2s3VxVujgEKqrDycjE284XQR.length > 0) {
        proxy.origins = _25zu2s3VxVujgEKqrDycjE284XQR;
      }
      
      const _3c5t2x7DYRo2shwTxpkd4kYSS5WQ = this.#_3c5t2x7DYRo2shwTxpkd4kYSS5WQ
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3c5t2x7DYRo2shwTxpkd4kYSS5WQ.length == 1) {
        proxy.instrument = _3c5t2x7DYRo2shwTxpkd4kYSS5WQ[0];
      }
      
      if (_3c5t2x7DYRo2shwTxpkd4kYSS5WQ.length > 1
          || !(\\"instrument\\" in proxy)
          && _3c5t2x7DYRo2shwTxpkd4kYSS5WQ.length > 0) {
        proxy.instruments = _3c5t2x7DYRo2shwTxpkd4kYSS5WQ;
      }
      
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Activity \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Activity \\" + inspect(proxy, options);
  }
  }

/** Indicates that the \`actor\` accepts the \`object\`.  The \`target\` property can be
 * used in certain circumstances to indicate the context into which the \`object\`
 * has been accepted.
 * 
 */
export class Accept extends Activity {

    /**
     * The type URI of {@link Accept}: \`https://www.w3.org/ns/activitystreams#Accept\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Accept\\");
    }
  
  /**
   * Constructs a new instance of Accept with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });}

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Accept {
  const clone = super.clone(values, options) as unknown as Accept;
    return clone;
  }
  
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Accept\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\"],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Accept> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Accept\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Accept)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Accept \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Accept \\" + inspect(proxy, options);
  }
  }

/** Indicates that the \`actor\` has added the \`object\` to the \`target\`.
 * If the \`target\` property is not explicitly specified, the target would need
 * to be determined implicitly by context.  The \`origin\` can be used to identify
 * the context from which the \`object\` originated.
 * 
 */
export class Add extends Activity {

    /**
     * The type URI of {@link Add}: \`https://www.w3.org/ns/activitystreams#Add\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Add\\");
    }
  
  /**
   * Constructs a new instance of Add with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });}

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Add {
  const clone = super.clone(values, options) as unknown as Add;
    return clone;
  }
  
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Add\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\"],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Add> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Add\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Add)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Add \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Add \\" + inspect(proxy, options);
  }
  }

/** Indicates that the \`actor\` is calling the \`target\`'s attention the \`object\`.
 * 
 * The \`origin\` typically has no defined meaning.
 * 
 */
export class Announce extends Activity {

    /**
     * The type URI of {@link Announce}: \`https://www.w3.org/ns/activitystreams#Announce\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Announce\\");
    }
  
  /**
   * Constructs a new instance of Announce with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });}

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Announce {
  const clone = super.clone(values, options) as unknown as Announce;
    return clone;
  }
  
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Announce\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\",{\\"toot\\":\\"http://joinmastodon.org/ns#\\",\\"sensitive\\":\\"as:sensitive\\",\\"Emoji\\":\\"toot:Emoji\\",\\"Hashtag\\":\\"as:Hashtag\\"}],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Announce> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Announce\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Announce)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Announce \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Announce \\" + inspect(proxy, options);
  }
  }

/** Describes a software application.
 */
export class Application extends Object {

    /**
     * The type URI of {@link Application}: \`https://www.w3.org/ns/activitystreams#Application\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Application\\");
    }
  #_3isuDgRAKSntq9XdbjiNxjwyPZAf: ((string | LanguageString))[] = [];
#_axq166E2eZADq34V4MYUc8KMZdC: (CryptographicKey | URL)[] = [];
#_4EHQFWZSz1k1d4LmPrQiMba2GbP3: (Multikey | URL)[] = [];
#_36QNc9MxfkKf6h8sEUQSHnV9NZA: (boolean)[] = [];
#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB: (OrderedCollection | URL)[] = [];
#_41QwhqJouoLg3h8dRPKat21brynC: (OrderedCollection | URL)[] = [];
#_3yAv8jymNfNuJUDuBzJ1NQhdbAee: (Collection | URL)[] = [];
#_BBCTgfphhsFzpVfKTykGSpBNwoA: (Collection | URL)[] = [];
#_3bgkPwJanyTCoVFM9ovRcus8tKkU: (Collection | URL)[] = [];
#_4N1vBJzXDf8NbBumeECQMFvKetja: (Collection | URL)[] = [];
#_2MxnRRLq9iPzx5CFq2NPrXdUDCac: (Collection | URL)[] = [];
#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9: (Collection | URL)[] = [];
#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG: (Endpoints)[] = [];
#_gAJzg1QDc4rcefFsUzGSYmyXvNH: (boolean)[] = [];
#_2kGKkJtoFWg8c18PaVSqj9NKP4t7: (boolean)[] = [];
#_79S8K4f5J9MWUgCxziRyUe6PTHZ: (boolean)[] = [];
#_2diCorzqPGQQqftp6e4SrCEwEnyk: (boolean)[] = [];

  /**
   * Constructs a new instance of Application with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];preferredUsername?: string | LanguageString | null;
preferredUsernames?: ((string | LanguageString))[];publicKey?: CryptographicKey | URL | null;
publicKeys?: (CryptographicKey | URL)[];assertionMethod?: Multikey | URL | null;
assertionMethods?: (Multikey | URL)[];manuallyApprovesFollowers?: boolean | null;inbox?: OrderedCollection | URL | null;outbox?: OrderedCollection | URL | null;following?: Collection | URL | null;followers?: Collection | URL | null;liked?: Collection | URL | null;featured?: Collection | URL | null;featuredTags?: Collection | URL | null;streams?: (Collection | URL)[];endpoints?: Endpoints | null;discoverable?: boolean | null;suspended?: boolean | null;memorial?: boolean | null;indexable?: boolean | null;}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });
        if (\\"preferredUsername\\" in values &&             values.preferredUsername != null) {
          if (typeof values.preferredUsername === \\"string\\" || values.preferredUsername instanceof LanguageString) {
            // @ts-ignore: type is checked above.
            this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf = [values.preferredUsername];
          } else {
            throw new TypeError(
              \\"The preferredUsername must be of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      
        if (\\"preferredUsernames\\" in values &&             values.preferredUsernames != null) {
      
          if (\\"preferredUsername\\" in values &&
              values.preferredUsername != null) {
            throw new TypeError(
              \\"Cannot initialize both preferredUsername and \\" +
                \\"preferredUsernames at the same time.\\",
            );
          }
        
          if (Array.isArray(values.preferredUsernames) &&
              values.preferredUsernames.every(v => typeof v === \\"string\\" || v instanceof LanguageString)) {
            // @ts-ignore: type is checked above.
            this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf = values.preferredUsernames;
          } else {
            throw new TypeError(
              \\"The preferredUsernames must be an array of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      
        if (\\"publicKey\\" in values &&             values.publicKey != null) {
          if (values.publicKey instanceof CryptographicKey || values.publicKey instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_axq166E2eZADq34V4MYUc8KMZdC = [values.publicKey];
          } else {
            throw new TypeError(
              \\"The publicKey must be of type \\" +
              \\"CryptographicKey | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"publicKeys\\" in values &&             values.publicKeys != null) {
      
          if (\\"publicKey\\" in values &&
              values.publicKey != null) {
            throw new TypeError(
              \\"Cannot initialize both publicKey and \\" +
                \\"publicKeys at the same time.\\",
            );
          }
        
          if (Array.isArray(values.publicKeys) &&
              values.publicKeys.every(v => v instanceof CryptographicKey || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_axq166E2eZADq34V4MYUc8KMZdC = values.publicKeys;
          } else {
            throw new TypeError(
              \\"The publicKeys must be an array of type \\" +
              \\"CryptographicKey | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"assertionMethod\\" in values &&             values.assertionMethod != null) {
          if (values.assertionMethod instanceof Multikey || values.assertionMethod instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3 = [values.assertionMethod];
          } else {
            throw new TypeError(
              \\"The assertionMethod must be of type \\" +
              \\"Multikey | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"assertionMethods\\" in values &&             values.assertionMethods != null) {
      
          if (\\"assertionMethod\\" in values &&
              values.assertionMethod != null) {
            throw new TypeError(
              \\"Cannot initialize both assertionMethod and \\" +
                \\"assertionMethods at the same time.\\",
            );
          }
        
          if (Array.isArray(values.assertionMethods) &&
              values.assertionMethods.every(v => v instanceof Multikey || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3 = values.assertionMethods;
          } else {
            throw new TypeError(
              \\"The assertionMethods must be an array of type \\" +
              \\"Multikey | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"manuallyApprovesFollowers\\" in values &&             values.manuallyApprovesFollowers != null) {
          if (typeof values.manuallyApprovesFollowers === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            this.#_36QNc9MxfkKf6h8sEUQSHnV9NZA = [values.manuallyApprovesFollowers];
          } else {
            throw new TypeError(
              \\"The manuallyApprovesFollowers must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      
        if (\\"inbox\\" in values &&             values.inbox != null) {
          if (values.inbox instanceof OrderedCollection || values.inbox instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB = [values.inbox];
          } else {
            throw new TypeError(
              \\"The inbox must be of type \\" +
              \\"OrderedCollection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"outbox\\" in values &&             values.outbox != null) {
          if (values.outbox instanceof OrderedCollection || values.outbox instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_41QwhqJouoLg3h8dRPKat21brynC = [values.outbox];
          } else {
            throw new TypeError(
              \\"The outbox must be of type \\" +
              \\"OrderedCollection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"following\\" in values &&             values.following != null) {
          if (values.following instanceof Collection || values.following instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee = [values.following];
          } else {
            throw new TypeError(
              \\"The following must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"followers\\" in values &&             values.followers != null) {
          if (values.followers instanceof Collection || values.followers instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_BBCTgfphhsFzpVfKTykGSpBNwoA = [values.followers];
          } else {
            throw new TypeError(
              \\"The followers must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"liked\\" in values &&             values.liked != null) {
          if (values.liked instanceof Collection || values.liked instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU = [values.liked];
          } else {
            throw new TypeError(
              \\"The liked must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"featured\\" in values &&             values.featured != null) {
          if (values.featured instanceof Collection || values.featured instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_4N1vBJzXDf8NbBumeECQMFvKetja = [values.featured];
          } else {
            throw new TypeError(
              \\"The featured must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"featuredTags\\" in values &&             values.featuredTags != null) {
          if (values.featuredTags instanceof Collection || values.featuredTags instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac = [values.featuredTags];
          } else {
            throw new TypeError(
              \\"The featuredTags must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"streams\\" in values &&             values.streams != null) {
      
          if (Array.isArray(values.streams) &&
              values.streams.every(v => v instanceof Collection || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9 = values.streams;
          } else {
            throw new TypeError(
              \\"The streams must be an array of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"endpoints\\" in values &&             values.endpoints != null) {
          if (values.endpoints instanceof Endpoints) {
            // @ts-ignore: type is checked above.
            this.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG = [values.endpoints];
          } else {
            throw new TypeError(
              \\"The endpoints must be of type \\" +
              \\"Endpoints\\" + \\".\\",
            );
          }
        }
      
        if (\\"discoverable\\" in values &&             values.discoverable != null) {
          if (typeof values.discoverable === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            this.#_gAJzg1QDc4rcefFsUzGSYmyXvNH = [values.discoverable];
          } else {
            throw new TypeError(
              \\"The discoverable must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      
        if (\\"suspended\\" in values &&             values.suspended != null) {
          if (typeof values.suspended === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            this.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7 = [values.suspended];
          } else {
            throw new TypeError(
              \\"The suspended must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      
        if (\\"memorial\\" in values &&             values.memorial != null) {
          if (typeof values.memorial === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            this.#_79S8K4f5J9MWUgCxziRyUe6PTHZ = [values.memorial];
          } else {
            throw new TypeError(
              \\"The memorial must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      
        if (\\"indexable\\" in values &&             values.indexable != null) {
          if (typeof values.indexable === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            this.#_2diCorzqPGQQqftp6e4SrCEwEnyk = [values.indexable];
          } else {
            throw new TypeError(
              \\"The indexable must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      }

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];preferredUsername?: string | LanguageString | null;
preferredUsernames?: ((string | LanguageString))[];publicKey?: CryptographicKey | URL | null;
publicKeys?: (CryptographicKey | URL)[];assertionMethod?: Multikey | URL | null;
assertionMethods?: (Multikey | URL)[];manuallyApprovesFollowers?: boolean | null;inbox?: OrderedCollection | URL | null;outbox?: OrderedCollection | URL | null;following?: Collection | URL | null;followers?: Collection | URL | null;liked?: Collection | URL | null;featured?: Collection | URL | null;featuredTags?: Collection | URL | null;streams?: (Collection | URL)[];endpoints?: Endpoints | null;discoverable?: boolean | null;suspended?: boolean | null;memorial?: boolean | null;indexable?: boolean | null;}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Application {
  const clone = super.clone(values, options) as unknown as Application;clone.#_3isuDgRAKSntq9XdbjiNxjwyPZAf = this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf;
        if (\\"preferredUsername\\" in values &&             values.preferredUsername != null) {
          if (typeof values.preferredUsername === \\"string\\" || values.preferredUsername instanceof LanguageString) {
            // @ts-ignore: type is checked above.
            clone.#_3isuDgRAKSntq9XdbjiNxjwyPZAf = [values.preferredUsername];
          } else {
            throw new TypeError(
              \\"The preferredUsername must be of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      
        if (\\"preferredUsernames\\" in values &&             values.preferredUsernames != null) {
      
          if (\\"preferredUsername\\" in values &&
              values.preferredUsername != null) {
            throw new TypeError(
              \\"Cannot update both preferredUsername and \\" +
                \\"preferredUsernames at the same time.\\",
            );
          }
        
          if (Array.isArray(values.preferredUsernames) &&
              values.preferredUsernames.every(v => typeof v === \\"string\\" || v instanceof LanguageString)) {
            // @ts-ignore: type is checked above.
            clone.#_3isuDgRAKSntq9XdbjiNxjwyPZAf = values.preferredUsernames;
          } else {
            throw new TypeError(
              \\"The preferredUsernames must be an array of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      clone.#_axq166E2eZADq34V4MYUc8KMZdC = this.#_axq166E2eZADq34V4MYUc8KMZdC;
        if (\\"publicKey\\" in values &&             values.publicKey != null) {
          if (values.publicKey instanceof CryptographicKey || values.publicKey instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_axq166E2eZADq34V4MYUc8KMZdC = [values.publicKey];
          } else {
            throw new TypeError(
              \\"The publicKey must be of type \\" +
              \\"CryptographicKey | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"publicKeys\\" in values &&             values.publicKeys != null) {
      
          if (\\"publicKey\\" in values &&
              values.publicKey != null) {
            throw new TypeError(
              \\"Cannot update both publicKey and \\" +
                \\"publicKeys at the same time.\\",
            );
          }
        
          if (Array.isArray(values.publicKeys) &&
              values.publicKeys.every(v => v instanceof CryptographicKey || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_axq166E2eZADq34V4MYUc8KMZdC = values.publicKeys;
          } else {
            throw new TypeError(
              \\"The publicKeys must be an array of type \\" +
              \\"CryptographicKey | URL\\" + \\".\\",
            );
          }
        }
      clone.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3 = this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3;
        if (\\"assertionMethod\\" in values &&             values.assertionMethod != null) {
          if (values.assertionMethod instanceof Multikey || values.assertionMethod instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3 = [values.assertionMethod];
          } else {
            throw new TypeError(
              \\"The assertionMethod must be of type \\" +
              \\"Multikey | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"assertionMethods\\" in values &&             values.assertionMethods != null) {
      
          if (\\"assertionMethod\\" in values &&
              values.assertionMethod != null) {
            throw new TypeError(
              \\"Cannot update both assertionMethod and \\" +
                \\"assertionMethods at the same time.\\",
            );
          }
        
          if (Array.isArray(values.assertionMethods) &&
              values.assertionMethods.every(v => v instanceof Multikey || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3 = values.assertionMethods;
          } else {
            throw new TypeError(
              \\"The assertionMethods must be an array of type \\" +
              \\"Multikey | URL\\" + \\".\\",
            );
          }
        }
      clone.#_36QNc9MxfkKf6h8sEUQSHnV9NZA = this.#_36QNc9MxfkKf6h8sEUQSHnV9NZA;
        if (\\"manuallyApprovesFollowers\\" in values &&             values.manuallyApprovesFollowers != null) {
          if (typeof values.manuallyApprovesFollowers === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            clone.#_36QNc9MxfkKf6h8sEUQSHnV9NZA = [values.manuallyApprovesFollowers];
          } else {
            throw new TypeError(
              \\"The manuallyApprovesFollowers must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      clone.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB = this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB;
        if (\\"inbox\\" in values &&             values.inbox != null) {
          if (values.inbox instanceof OrderedCollection || values.inbox instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB = [values.inbox];
          } else {
            throw new TypeError(
              \\"The inbox must be of type \\" +
              \\"OrderedCollection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_41QwhqJouoLg3h8dRPKat21brynC = this.#_41QwhqJouoLg3h8dRPKat21brynC;
        if (\\"outbox\\" in values &&             values.outbox != null) {
          if (values.outbox instanceof OrderedCollection || values.outbox instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_41QwhqJouoLg3h8dRPKat21brynC = [values.outbox];
          } else {
            throw new TypeError(
              \\"The outbox must be of type \\" +
              \\"OrderedCollection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee = this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee;
        if (\\"following\\" in values &&             values.following != null) {
          if (values.following instanceof Collection || values.following instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee = [values.following];
          } else {
            throw new TypeError(
              \\"The following must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_BBCTgfphhsFzpVfKTykGSpBNwoA = this.#_BBCTgfphhsFzpVfKTykGSpBNwoA;
        if (\\"followers\\" in values &&             values.followers != null) {
          if (values.followers instanceof Collection || values.followers instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_BBCTgfphhsFzpVfKTykGSpBNwoA = [values.followers];
          } else {
            throw new TypeError(
              \\"The followers must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_3bgkPwJanyTCoVFM9ovRcus8tKkU = this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU;
        if (\\"liked\\" in values &&             values.liked != null) {
          if (values.liked instanceof Collection || values.liked instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_3bgkPwJanyTCoVFM9ovRcus8tKkU = [values.liked];
          } else {
            throw new TypeError(
              \\"The liked must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_4N1vBJzXDf8NbBumeECQMFvKetja = this.#_4N1vBJzXDf8NbBumeECQMFvKetja;
        if (\\"featured\\" in values &&             values.featured != null) {
          if (values.featured instanceof Collection || values.featured instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_4N1vBJzXDf8NbBumeECQMFvKetja = [values.featured];
          } else {
            throw new TypeError(
              \\"The featured must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac = this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac;
        if (\\"featuredTags\\" in values &&             values.featuredTags != null) {
          if (values.featuredTags instanceof Collection || values.featuredTags instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac = [values.featuredTags];
          } else {
            throw new TypeError(
              \\"The featuredTags must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9 = this.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9;
        if (\\"streams\\" in values &&             values.streams != null) {
      
          if (Array.isArray(values.streams) &&
              values.streams.every(v => v instanceof Collection || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9 = values.streams;
          } else {
            throw new TypeError(
              \\"The streams must be an array of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG = this.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG;
        if (\\"endpoints\\" in values &&             values.endpoints != null) {
          if (values.endpoints instanceof Endpoints) {
            // @ts-ignore: type is checked above.
            clone.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG = [values.endpoints];
          } else {
            throw new TypeError(
              \\"The endpoints must be of type \\" +
              \\"Endpoints\\" + \\".\\",
            );
          }
        }
      clone.#_gAJzg1QDc4rcefFsUzGSYmyXvNH = this.#_gAJzg1QDc4rcefFsUzGSYmyXvNH;
        if (\\"discoverable\\" in values &&             values.discoverable != null) {
          if (typeof values.discoverable === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            clone.#_gAJzg1QDc4rcefFsUzGSYmyXvNH = [values.discoverable];
          } else {
            throw new TypeError(
              \\"The discoverable must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      clone.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7 = this.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7;
        if (\\"suspended\\" in values &&             values.suspended != null) {
          if (typeof values.suspended === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            clone.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7 = [values.suspended];
          } else {
            throw new TypeError(
              \\"The suspended must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      clone.#_79S8K4f5J9MWUgCxziRyUe6PTHZ = this.#_79S8K4f5J9MWUgCxziRyUe6PTHZ;
        if (\\"memorial\\" in values &&             values.memorial != null) {
          if (typeof values.memorial === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            clone.#_79S8K4f5J9MWUgCxziRyUe6PTHZ = [values.memorial];
          } else {
            throw new TypeError(
              \\"The memorial must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      clone.#_2diCorzqPGQQqftp6e4SrCEwEnyk = this.#_2diCorzqPGQQqftp6e4SrCEwEnyk;
        if (\\"indexable\\" in values &&             values.indexable != null) {
          if (typeof values.indexable === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            clone.#_2diCorzqPGQQqftp6e4SrCEwEnyk = [values.indexable];
          } else {
            throw new TypeError(
              \\"The indexable must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      
    return clone;
  }
  
/** A short username which may be used to refer to the actor,
 * with no uniqueness guarantees.
 * 
 */
get preferredUsername(): (string | LanguageString | null) {
        if (this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf.length < 1) return null;
        return this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf[0];
      }
      
/** A short username which may be used to refer to the actor,
 * with no uniqueness guarantees.
 * 
 */
get preferredUsernames(): ((string | LanguageString))[] {
        return this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf;
      }
      
    async #fetchPublicKey(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<CryptographicKey | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await CryptographicKey.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://w3id.org/security#Key\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Application.getPublicKey},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get publicKeyId(): URL | null {
        if (this.#_axq166E2eZADq34V4MYUc8KMZdC.length < 1) return null;
        const v = this.#_axq166E2eZADq34V4MYUc8KMZdC[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** A public part of the key pair owned by this actor.
 */

      async getPublicKey(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<CryptographicKey | null> {
        if (this.#_axq166E2eZADq34V4MYUc8KMZdC.length < 1) return null;
        const v = this.#_axq166E2eZADq34V4MYUc8KMZdC[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchPublicKey(v, options);
          if (fetched == null) return null;
          this.#_axq166E2eZADq34V4MYUc8KMZdC[0] = fetched;
          return fetched;
        }
        return v;
      }
      
      /**
       * Similar to
       * {@link Application.getPublicKeys},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get publicKeyIds(): URL[] {
        return this.#_axq166E2eZADq34V4MYUc8KMZdC.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** A public part of the key pair owned by this actor.
 */

      async* getPublicKeys(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<CryptographicKey> {
        const vs = this.#_axq166E2eZADq34V4MYUc8KMZdC;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchPublicKey(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
    async #fetchAssertionMethod(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Multikey | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Multikey.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://w3id.org/security#Multikey\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Application.getAssertionMethod},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get assertionMethodId(): URL | null {
        if (this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3.length < 1) return null;
        const v = this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** Represents this actor's public keys.  It serves as equivalent to
 * the \`publicKeys\` property, but is used for [FEP-521a] compliance.
 * 
 * [FEP-521a]: https://codeberg.org/fediverse/fep/src/branch/main/fep/521a/fep-521a.md
 * 
 */

      async getAssertionMethod(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Multikey | null> {
        if (this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3.length < 1) return null;
        const v = this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchAssertionMethod(v, options);
          if (fetched == null) return null;
          this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3[0] = fetched;
          return fetched;
        }
        return v;
      }
      
      /**
       * Similar to
       * {@link Application.getAssertionMethods},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get assertionMethodIds(): URL[] {
        return this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** Represents this actor's public keys.  It serves as equivalent to
 * the \`publicKeys\` property, but is used for [FEP-521a] compliance.
 * 
 * [FEP-521a]: https://codeberg.org/fediverse/fep/src/branch/main/fep/521a/fep-521a.md
 * 
 */

      async* getAssertionMethods(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Multikey> {
        const vs = this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchAssertionMethod(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
/** When \`true\`, conveys that for this actor, follow requests are not usually
 * automatically approved, but instead are examined by a person who may accept
 * or reject the request, at some time in the future.  Setting of \`false\`
 * conveys no information and may be ignored.  This information is typically
 * used to affect display of accounts, such as showing an account as private or
 * locked.
 * 
 */
get manuallyApprovesFollowers(): (boolean | null) {
        if (this.#_36QNc9MxfkKf6h8sEUQSHnV9NZA.length < 1) return null;
        return this.#_36QNc9MxfkKf6h8sEUQSHnV9NZA[0];
      }
      
    async #fetchInbox(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<OrderedCollection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await OrderedCollection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#OrderedCollection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Application.getInbox},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get inboxId(): URL | null {
        if (this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB.length < 1) return null;
        const v = this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** The inbox stream contains all activities received by the actor.  The server
 * SHOULD filter content according to the requester's permission.  In general,
 * the owner of an inbox is likely to be able to access all of their inbox
 * contents.  Depending on access control, some other content may be public,
 * whereas other content may require authentication for non-owner users,
 * if they can access the inbox at all.
 * 
 * The server MUST perform de-duplication of activities returned by the inbox.
 * Duplication can occur if an activity is addressed both to an actor's
 * followers, and a specific actor who also follows the recipient actor,
 * and the server has failed to de-duplicate the recipients list.
 * Such deduplication MUST be performed by comparing the \`id\` of the activities
 * and dropping any activities already seen.
 * 
 */

      async getInbox(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<OrderedCollection | null> {
        if (this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB.length < 1) return null;
        const v = this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchInbox(v, options);
          if (fetched == null) return null;
          this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchOutbox(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<OrderedCollection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await OrderedCollection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#OrderedCollection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Application.getOutbox},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get outboxId(): URL | null {
        if (this.#_41QwhqJouoLg3h8dRPKat21brynC.length < 1) return null;
        const v = this.#_41QwhqJouoLg3h8dRPKat21brynC[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** The outbox stream contains activities the user has published,
 * subject to the ability of the requestor to retrieve the activity
 * (that is, the contents of the outbox are filtered by the permissions of
 * the person reading it).  If a user submits a request without
 * [Authorization](https://www.w3.org/TR/activitypub/#authorization)
 * the server should respond with all of the
 * [Public](https://www.w3.org/TR/activitypub/#public-addressing) posts.
 * This could potentially be all relevant objects published by the user,
 * though the number of available items is left to the discretion of those
 * implementing and deploying the server.
 * 
 */

      async getOutbox(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<OrderedCollection | null> {
        if (this.#_41QwhqJouoLg3h8dRPKat21brynC.length < 1) return null;
        const v = this.#_41QwhqJouoLg3h8dRPKat21brynC[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchOutbox(v, options);
          if (fetched == null) return null;
          this.#_41QwhqJouoLg3h8dRPKat21brynC[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchFollowing(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Collection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Collection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Collection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Application.getFollowing},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get followingId(): URL | null {
        if (this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee.length < 1) return null;
        const v = this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** This is a list of everybody that the actor has followed, added as a
 * [side effect](https://www.w3.org/TR/activitypub/#follow-activity-outbox).
 * The \`following\` collection MUST be either an {@link OrderedCollection}
 * or a {@link Collection} and MAY be filtered on privileges of
 * an authenticated user or as appropriate when no authentication is given.
 * 
 */

      async getFollowing(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Collection | null> {
        if (this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee.length < 1) return null;
        const v = this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchFollowing(v, options);
          if (fetched == null) return null;
          this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchFollowers(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Collection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Collection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Collection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Application.getFollowers},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get followersId(): URL | null {
        if (this.#_BBCTgfphhsFzpVfKTykGSpBNwoA.length < 1) return null;
        const v = this.#_BBCTgfphhsFzpVfKTykGSpBNwoA[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** This is a list of everyone who has sent a {@link Follow} activity
 * for the actor, added as a
 * [side effect](https://www.w3.org/TR/activitypub/#follow-activity-outbox).
 * This is where one would find a list of all the actors that are following
 * the actor.  The \`followers\` collection MUST be either
 * an {@link OrderedCollection} or a {@link Collection} and MAY be filtered on
 * privileges of an authenticated user or as appropriate when no authentication
 * is given.
 * 
 */

      async getFollowers(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Collection | null> {
        if (this.#_BBCTgfphhsFzpVfKTykGSpBNwoA.length < 1) return null;
        const v = this.#_BBCTgfphhsFzpVfKTykGSpBNwoA[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchFollowers(v, options);
          if (fetched == null) return null;
          this.#_BBCTgfphhsFzpVfKTykGSpBNwoA[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchLiked(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Collection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Collection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Collection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Application.getLiked},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get likedId(): URL | null {
        if (this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU.length < 1) return null;
        const v = this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** This is a list of every object from all of the actor's {@link Like}
 * activities, added as a
 * [side effect](https://www.w3.org/TR/activitypub/#like-activity-outbox).
 * The \`liked\` collection MUST be either an {@link OrderedCollection} or
 * a {@link Collection} and MAY be filtered on privileges of an authenticated
 * user or as appropriate when no authentication is given.
 * 
 */

      async getLiked(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Collection | null> {
        if (this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU.length < 1) return null;
        const v = this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchLiked(v, options);
          if (fetched == null) return null;
          this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchFeatured(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Collection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Collection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Collection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Application.getFeatured},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get featuredId(): URL | null {
        if (this.#_4N1vBJzXDf8NbBumeECQMFvKetja.length < 1) return null;
        const v = this.#_4N1vBJzXDf8NbBumeECQMFvKetja[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** What is known in Mastodon as \\"pinned statuses\\", or statuses that are always
 * featured at the top of people's profiles, is implemented using an extra
 * property \`featured\` on the actor object that points to a {@link Collection}
 * of objects.
 * 
 */

      async getFeatured(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Collection | null> {
        if (this.#_4N1vBJzXDf8NbBumeECQMFvKetja.length < 1) return null;
        const v = this.#_4N1vBJzXDf8NbBumeECQMFvKetja[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchFeatured(v, options);
          if (fetched == null) return null;
          this.#_4N1vBJzXDf8NbBumeECQMFvKetja[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchFeaturedTags(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Collection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Collection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Collection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Application.getFeaturedTags},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get featuredTagsId(): URL | null {
        if (this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac.length < 1) return null;
        const v = this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** What is known in Mastodon as \\"featured hashtags\\", hashtags that are featured
 * at people's profiles, is implemented using an extra property \`featuredTags\`
 * on the actor object that points to a {@link Collection} of {@link Hashtag}
 * objects specifically.
 * 
 */

      async getFeaturedTags(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Collection | null> {
        if (this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac.length < 1) return null;
        const v = this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchFeaturedTags(v, options);
          if (fetched == null) return null;
          this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchStream(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Collection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Collection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Collection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Application.getStreams},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get streamIds(): URL[] {
        return this.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** A list of supplementary Collections which may be of interest.
 * 
 */

      async* getStreams(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Collection> {
        const vs = this.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchStream(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
/** A JSON object which maps additional (typically server/domain-wide) endpoints
 * which may be useful either for this actor or someone referencing this actor.
 * This mapping may be nested inside the actor document as the value or may be
 * a link to a JSON-LD document with these properties.
 * 
 */
get endpoints(): (Endpoints | null) {
        if (this.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG.length < 1) return null;
        return this.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG[0];
      }
      
/** Allows users to opt-in or opt-out of discoverability features like
 * the profile directory.  This flag may also be used as an indicator of
 * the user's preferences toward being included in external discovery services,
 * such as search engines or other indexing tools.
 * 
 */
get discoverable(): (boolean | null) {
        if (this.#_gAJzg1QDc4rcefFsUzGSYmyXvNH.length < 1) return null;
        return this.#_gAJzg1QDc4rcefFsUzGSYmyXvNH[0];
      }
      
/** Reports whether a user was locally suspended, for better handling of
 * these accounts.
 * 
 */
get suspended(): (boolean | null) {
        if (this.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7.length < 1) return null;
        return this.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7[0];
      }
      
/** Whether the actor is in-memorial state.
 */
get memorial(): (boolean | null) {
        if (this.#_79S8K4f5J9MWUgCxziRyUe6PTHZ.length < 1) return null;
        return this.#_79S8K4f5J9MWUgCxziRyUe6PTHZ[0];
      }
      
/** Whether the actor allows to be indexed.
 */
get indexable(): (boolean | null) {
        if (this.#_2diCorzqPGQQqftp6e4SrCEwEnyk.length < 1) return null;
        return this.#_2diCorzqPGQQqftp6e4SrCEwEnyk[0];
      }
      
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    array = [];
    for (const v of this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf) {
      const element = (
    typeof v === \\"string\\" ? { \\"@value\\": v } : {
        \\"@value\\": v.toString(),
        \\"@language\\": v.language.compact(),
      }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#preferredUsername\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_axq166E2eZADq34V4MYUc8KMZdC) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://w3id.org/security#publicKey\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://w3id.org/security#assertionMethod\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_36QNc9MxfkKf6h8sEUQSHnV9NZA) {
      const element = (
    { \\"@value\\": v }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#manuallyApprovesFollowers\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://www.w3.org/ns/ldp#inbox\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_41QwhqJouoLg3h8dRPKat21brynC) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#outbox\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#following\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_BBCTgfphhsFzpVfKTykGSpBNwoA) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#followers\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#liked\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_4N1vBJzXDf8NbBumeECQMFvKetja) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://joinmastodon.org/ns#featured\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://joinmastodon.org/ns#featuredTags\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#streams\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG) {
      const element = (
    await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#endpoints\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_gAJzg1QDc4rcefFsUzGSYmyXvNH) {
      const element = (
    { \\"@value\\": v }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://joinmastodon.org/ns#discoverable\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7) {
      const element = (
    { \\"@value\\": v }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://joinmastodon.org/ns#suspended\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_79S8K4f5J9MWUgCxziRyUe6PTHZ) {
      const element = (
    { \\"@value\\": v }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://joinmastodon.org/ns#memorial\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_2diCorzqPGQQqftp6e4SrCEwEnyk) {
      const element = (
    { \\"@value\\": v }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://joinmastodon.org/ns#indexable\\"] = (
    array
      );
    }
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Application\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/v1\\",\\"https://w3id.org/security/data-integrity/v1\\",\\"https://www.w3.org/ns/did/v1\\",\\"https://w3id.org/security/multikey/v1\\",{\\"manuallyApprovesFollowers\\":\\"as:manuallyApprovesFollowers\\",\\"toot\\":\\"http://joinmastodon.org/ns#\\",\\"featured\\":{\\"@id\\":\\"toot:featured\\",\\"@type\\":\\"@id\\"},\\"featuredTags\\":{\\"@id\\":\\"toot:featuredTags\\",\\"@type\\":\\"@id\\"},\\"discoverable\\":\\"toot:discoverable\\",\\"suspended\\":\\"toot:suspended\\",\\"memorial\\":\\"toot:memorial\\",\\"indexable\\":\\"toot:indexable\\",\\"schema\\":\\"http://schema.org#\\",\\"PropertyValue\\":\\"schema:PropertyValue\\",\\"value\\":\\"schema:value\\"}],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Application> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Application\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Application)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    const _3isuDgRAKSntq9XdbjiNxjwyPZAf: ((string | LanguageString))[] = [];

    const _3isuDgRAKSntq9XdbjiNxjwyPZAf__array = values[\\"https://www.w3.org/ns/activitystreams#preferredUsername\\"];
    for (
      const v of _3isuDgRAKSntq9XdbjiNxjwyPZAf__array == null
        ? []
        : _3isuDgRAKSntq9XdbjiNxjwyPZAf__array.length === 1 && \\"@list\\" in _3isuDgRAKSntq9XdbjiNxjwyPZAf__array[0]
        ? _3isuDgRAKSntq9XdbjiNxjwyPZAf__array[0][\\"@list\\"]
        : _3isuDgRAKSntq9XdbjiNxjwyPZAf__array
    ) {
      if (v == null) continue;
    
      const decoded =
      typeof v === \\"object\\" && \\"@value\\" in v
        && typeof v[\\"@value\\"] === \\"string\\" && !(\\"@language\\" in v) ? v[\\"@value\\"] : typeof v === \\"object\\" && \\"@language\\" in v && \\"@value\\" in v
        && typeof v[\\"@language\\"] === \\"string\\"
        && typeof v[\\"@value\\"] === \\"string\\" ? new LanguageString(v[\\"@value\\"], v[\\"@language\\"]) : undefined
      ;
      if (typeof decoded === \\"undefined\\") continue;
      _3isuDgRAKSntq9XdbjiNxjwyPZAf.push(decoded);
      
    }
    instance.#_3isuDgRAKSntq9XdbjiNxjwyPZAf = _3isuDgRAKSntq9XdbjiNxjwyPZAf;
    const _axq166E2eZADq34V4MYUc8KMZdC: (CryptographicKey | URL)[] = [];

    const _axq166E2eZADq34V4MYUc8KMZdC__array = values[\\"https://w3id.org/security#publicKey\\"];
    for (
      const v of _axq166E2eZADq34V4MYUc8KMZdC__array == null
        ? []
        : _axq166E2eZADq34V4MYUc8KMZdC__array.length === 1 && \\"@list\\" in _axq166E2eZADq34V4MYUc8KMZdC__array[0]
        ? _axq166E2eZADq34V4MYUc8KMZdC__array[0][\\"@list\\"]
        : _axq166E2eZADq34V4MYUc8KMZdC__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _axq166E2eZADq34V4MYUc8KMZdC.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _axq166E2eZADq34V4MYUc8KMZdC.push(await CryptographicKey.fromJsonLd(
      v, options))
    }
    instance.#_axq166E2eZADq34V4MYUc8KMZdC = _axq166E2eZADq34V4MYUc8KMZdC;
    const _4EHQFWZSz1k1d4LmPrQiMba2GbP3: (Multikey | URL)[] = [];

    const _4EHQFWZSz1k1d4LmPrQiMba2GbP3__array = values[\\"https://w3id.org/security#assertionMethod\\"];
    for (
      const v of _4EHQFWZSz1k1d4LmPrQiMba2GbP3__array == null
        ? []
        : _4EHQFWZSz1k1d4LmPrQiMba2GbP3__array.length === 1 && \\"@list\\" in _4EHQFWZSz1k1d4LmPrQiMba2GbP3__array[0]
        ? _4EHQFWZSz1k1d4LmPrQiMba2GbP3__array[0][\\"@list\\"]
        : _4EHQFWZSz1k1d4LmPrQiMba2GbP3__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _4EHQFWZSz1k1d4LmPrQiMba2GbP3.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _4EHQFWZSz1k1d4LmPrQiMba2GbP3.push(await Multikey.fromJsonLd(
      v, options))
    }
    instance.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3 = _4EHQFWZSz1k1d4LmPrQiMba2GbP3;
    const _36QNc9MxfkKf6h8sEUQSHnV9NZA: (boolean)[] = [];

    const _36QNc9MxfkKf6h8sEUQSHnV9NZA__array = values[\\"https://www.w3.org/ns/activitystreams#manuallyApprovesFollowers\\"];
    for (
      const v of _36QNc9MxfkKf6h8sEUQSHnV9NZA__array == null
        ? []
        : _36QNc9MxfkKf6h8sEUQSHnV9NZA__array.length === 1 && \\"@list\\" in _36QNc9MxfkKf6h8sEUQSHnV9NZA__array[0]
        ? _36QNc9MxfkKf6h8sEUQSHnV9NZA__array[0][\\"@list\\"]
        : _36QNc9MxfkKf6h8sEUQSHnV9NZA__array
    ) {
      if (v == null) continue;
    _36QNc9MxfkKf6h8sEUQSHnV9NZA.push(v[\\"@value\\"])
    }
    instance.#_36QNc9MxfkKf6h8sEUQSHnV9NZA = _36QNc9MxfkKf6h8sEUQSHnV9NZA;
    const _3ghX3VfZXXbLvhCRH7QJqpzLrXjB: (OrderedCollection | URL)[] = [];

    const _3ghX3VfZXXbLvhCRH7QJqpzLrXjB__array = values[\\"http://www.w3.org/ns/ldp#inbox\\"];
    for (
      const v of _3ghX3VfZXXbLvhCRH7QJqpzLrXjB__array == null
        ? []
        : _3ghX3VfZXXbLvhCRH7QJqpzLrXjB__array.length === 1 && \\"@list\\" in _3ghX3VfZXXbLvhCRH7QJqpzLrXjB__array[0]
        ? _3ghX3VfZXXbLvhCRH7QJqpzLrXjB__array[0][\\"@list\\"]
        : _3ghX3VfZXXbLvhCRH7QJqpzLrXjB__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _3ghX3VfZXXbLvhCRH7QJqpzLrXjB.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _3ghX3VfZXXbLvhCRH7QJqpzLrXjB.push(await OrderedCollection.fromJsonLd(
      v, options))
    }
    instance.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB = _3ghX3VfZXXbLvhCRH7QJqpzLrXjB;
    const _41QwhqJouoLg3h8dRPKat21brynC: (OrderedCollection | URL)[] = [];

    const _41QwhqJouoLg3h8dRPKat21brynC__array = values[\\"https://www.w3.org/ns/activitystreams#outbox\\"];
    for (
      const v of _41QwhqJouoLg3h8dRPKat21brynC__array == null
        ? []
        : _41QwhqJouoLg3h8dRPKat21brynC__array.length === 1 && \\"@list\\" in _41QwhqJouoLg3h8dRPKat21brynC__array[0]
        ? _41QwhqJouoLg3h8dRPKat21brynC__array[0][\\"@list\\"]
        : _41QwhqJouoLg3h8dRPKat21brynC__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _41QwhqJouoLg3h8dRPKat21brynC.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _41QwhqJouoLg3h8dRPKat21brynC.push(await OrderedCollection.fromJsonLd(
      v, options))
    }
    instance.#_41QwhqJouoLg3h8dRPKat21brynC = _41QwhqJouoLg3h8dRPKat21brynC;
    const _3yAv8jymNfNuJUDuBzJ1NQhdbAee: (Collection | URL)[] = [];

    const _3yAv8jymNfNuJUDuBzJ1NQhdbAee__array = values[\\"https://www.w3.org/ns/activitystreams#following\\"];
    for (
      const v of _3yAv8jymNfNuJUDuBzJ1NQhdbAee__array == null
        ? []
        : _3yAv8jymNfNuJUDuBzJ1NQhdbAee__array.length === 1 && \\"@list\\" in _3yAv8jymNfNuJUDuBzJ1NQhdbAee__array[0]
        ? _3yAv8jymNfNuJUDuBzJ1NQhdbAee__array[0][\\"@list\\"]
        : _3yAv8jymNfNuJUDuBzJ1NQhdbAee__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _3yAv8jymNfNuJUDuBzJ1NQhdbAee.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _3yAv8jymNfNuJUDuBzJ1NQhdbAee.push(await Collection.fromJsonLd(
      v, options))
    }
    instance.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee = _3yAv8jymNfNuJUDuBzJ1NQhdbAee;
    const _BBCTgfphhsFzpVfKTykGSpBNwoA: (Collection | URL)[] = [];

    const _BBCTgfphhsFzpVfKTykGSpBNwoA__array = values[\\"https://www.w3.org/ns/activitystreams#followers\\"];
    for (
      const v of _BBCTgfphhsFzpVfKTykGSpBNwoA__array == null
        ? []
        : _BBCTgfphhsFzpVfKTykGSpBNwoA__array.length === 1 && \\"@list\\" in _BBCTgfphhsFzpVfKTykGSpBNwoA__array[0]
        ? _BBCTgfphhsFzpVfKTykGSpBNwoA__array[0][\\"@list\\"]
        : _BBCTgfphhsFzpVfKTykGSpBNwoA__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _BBCTgfphhsFzpVfKTykGSpBNwoA.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _BBCTgfphhsFzpVfKTykGSpBNwoA.push(await Collection.fromJsonLd(
      v, options))
    }
    instance.#_BBCTgfphhsFzpVfKTykGSpBNwoA = _BBCTgfphhsFzpVfKTykGSpBNwoA;
    const _3bgkPwJanyTCoVFM9ovRcus8tKkU: (Collection | URL)[] = [];

    const _3bgkPwJanyTCoVFM9ovRcus8tKkU__array = values[\\"https://www.w3.org/ns/activitystreams#liked\\"];
    for (
      const v of _3bgkPwJanyTCoVFM9ovRcus8tKkU__array == null
        ? []
        : _3bgkPwJanyTCoVFM9ovRcus8tKkU__array.length === 1 && \\"@list\\" in _3bgkPwJanyTCoVFM9ovRcus8tKkU__array[0]
        ? _3bgkPwJanyTCoVFM9ovRcus8tKkU__array[0][\\"@list\\"]
        : _3bgkPwJanyTCoVFM9ovRcus8tKkU__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _3bgkPwJanyTCoVFM9ovRcus8tKkU.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _3bgkPwJanyTCoVFM9ovRcus8tKkU.push(await Collection.fromJsonLd(
      v, options))
    }
    instance.#_3bgkPwJanyTCoVFM9ovRcus8tKkU = _3bgkPwJanyTCoVFM9ovRcus8tKkU;
    const _4N1vBJzXDf8NbBumeECQMFvKetja: (Collection | URL)[] = [];

    const _4N1vBJzXDf8NbBumeECQMFvKetja__array = values[\\"http://joinmastodon.org/ns#featured\\"];
    for (
      const v of _4N1vBJzXDf8NbBumeECQMFvKetja__array == null
        ? []
        : _4N1vBJzXDf8NbBumeECQMFvKetja__array.length === 1 && \\"@list\\" in _4N1vBJzXDf8NbBumeECQMFvKetja__array[0]
        ? _4N1vBJzXDf8NbBumeECQMFvKetja__array[0][\\"@list\\"]
        : _4N1vBJzXDf8NbBumeECQMFvKetja__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _4N1vBJzXDf8NbBumeECQMFvKetja.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _4N1vBJzXDf8NbBumeECQMFvKetja.push(await Collection.fromJsonLd(
      v, options))
    }
    instance.#_4N1vBJzXDf8NbBumeECQMFvKetja = _4N1vBJzXDf8NbBumeECQMFvKetja;
    const _2MxnRRLq9iPzx5CFq2NPrXdUDCac: (Collection | URL)[] = [];

    const _2MxnRRLq9iPzx5CFq2NPrXdUDCac__array = values[\\"http://joinmastodon.org/ns#featuredTags\\"];
    for (
      const v of _2MxnRRLq9iPzx5CFq2NPrXdUDCac__array == null
        ? []
        : _2MxnRRLq9iPzx5CFq2NPrXdUDCac__array.length === 1 && \\"@list\\" in _2MxnRRLq9iPzx5CFq2NPrXdUDCac__array[0]
        ? _2MxnRRLq9iPzx5CFq2NPrXdUDCac__array[0][\\"@list\\"]
        : _2MxnRRLq9iPzx5CFq2NPrXdUDCac__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _2MxnRRLq9iPzx5CFq2NPrXdUDCac.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _2MxnRRLq9iPzx5CFq2NPrXdUDCac.push(await Collection.fromJsonLd(
      v, options))
    }
    instance.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac = _2MxnRRLq9iPzx5CFq2NPrXdUDCac;
    const _3sG2Hdwn9qzKGu9mpYkqakAMUkH9: (Collection | URL)[] = [];

    const _3sG2Hdwn9qzKGu9mpYkqakAMUkH9__array = values[\\"https://www.w3.org/ns/activitystreams#streams\\"];
    for (
      const v of _3sG2Hdwn9qzKGu9mpYkqakAMUkH9__array == null
        ? []
        : _3sG2Hdwn9qzKGu9mpYkqakAMUkH9__array.length === 1 && \\"@list\\" in _3sG2Hdwn9qzKGu9mpYkqakAMUkH9__array[0]
        ? _3sG2Hdwn9qzKGu9mpYkqakAMUkH9__array[0][\\"@list\\"]
        : _3sG2Hdwn9qzKGu9mpYkqakAMUkH9__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _3sG2Hdwn9qzKGu9mpYkqakAMUkH9.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _3sG2Hdwn9qzKGu9mpYkqakAMUkH9.push(await Collection.fromJsonLd(
      v, options))
    }
    instance.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9 = _3sG2Hdwn9qzKGu9mpYkqakAMUkH9;
    const _sEoQwUbfk4hEfugzNQ2ZiDcLMkG: (Endpoints)[] = [];

    const _sEoQwUbfk4hEfugzNQ2ZiDcLMkG__array = values[\\"https://www.w3.org/ns/activitystreams#endpoints\\"];
    for (
      const v of _sEoQwUbfk4hEfugzNQ2ZiDcLMkG__array == null
        ? []
        : _sEoQwUbfk4hEfugzNQ2ZiDcLMkG__array.length === 1 && \\"@list\\" in _sEoQwUbfk4hEfugzNQ2ZiDcLMkG__array[0]
        ? _sEoQwUbfk4hEfugzNQ2ZiDcLMkG__array[0][\\"@list\\"]
        : _sEoQwUbfk4hEfugzNQ2ZiDcLMkG__array
    ) {
      if (v == null) continue;
    _sEoQwUbfk4hEfugzNQ2ZiDcLMkG.push(await Endpoints.fromJsonLd(
      v, options))
    }
    instance.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG = _sEoQwUbfk4hEfugzNQ2ZiDcLMkG;
    const _gAJzg1QDc4rcefFsUzGSYmyXvNH: (boolean)[] = [];

    const _gAJzg1QDc4rcefFsUzGSYmyXvNH__array = values[\\"http://joinmastodon.org/ns#discoverable\\"];
    for (
      const v of _gAJzg1QDc4rcefFsUzGSYmyXvNH__array == null
        ? []
        : _gAJzg1QDc4rcefFsUzGSYmyXvNH__array.length === 1 && \\"@list\\" in _gAJzg1QDc4rcefFsUzGSYmyXvNH__array[0]
        ? _gAJzg1QDc4rcefFsUzGSYmyXvNH__array[0][\\"@list\\"]
        : _gAJzg1QDc4rcefFsUzGSYmyXvNH__array
    ) {
      if (v == null) continue;
    _gAJzg1QDc4rcefFsUzGSYmyXvNH.push(v[\\"@value\\"])
    }
    instance.#_gAJzg1QDc4rcefFsUzGSYmyXvNH = _gAJzg1QDc4rcefFsUzGSYmyXvNH;
    const _2kGKkJtoFWg8c18PaVSqj9NKP4t7: (boolean)[] = [];

    const _2kGKkJtoFWg8c18PaVSqj9NKP4t7__array = values[\\"http://joinmastodon.org/ns#suspended\\"];
    for (
      const v of _2kGKkJtoFWg8c18PaVSqj9NKP4t7__array == null
        ? []
        : _2kGKkJtoFWg8c18PaVSqj9NKP4t7__array.length === 1 && \\"@list\\" in _2kGKkJtoFWg8c18PaVSqj9NKP4t7__array[0]
        ? _2kGKkJtoFWg8c18PaVSqj9NKP4t7__array[0][\\"@list\\"]
        : _2kGKkJtoFWg8c18PaVSqj9NKP4t7__array
    ) {
      if (v == null) continue;
    _2kGKkJtoFWg8c18PaVSqj9NKP4t7.push(v[\\"@value\\"])
    }
    instance.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7 = _2kGKkJtoFWg8c18PaVSqj9NKP4t7;
    const _79S8K4f5J9MWUgCxziRyUe6PTHZ: (boolean)[] = [];

    const _79S8K4f5J9MWUgCxziRyUe6PTHZ__array = values[\\"http://joinmastodon.org/ns#memorial\\"];
    for (
      const v of _79S8K4f5J9MWUgCxziRyUe6PTHZ__array == null
        ? []
        : _79S8K4f5J9MWUgCxziRyUe6PTHZ__array.length === 1 && \\"@list\\" in _79S8K4f5J9MWUgCxziRyUe6PTHZ__array[0]
        ? _79S8K4f5J9MWUgCxziRyUe6PTHZ__array[0][\\"@list\\"]
        : _79S8K4f5J9MWUgCxziRyUe6PTHZ__array
    ) {
      if (v == null) continue;
    _79S8K4f5J9MWUgCxziRyUe6PTHZ.push(v[\\"@value\\"])
    }
    instance.#_79S8K4f5J9MWUgCxziRyUe6PTHZ = _79S8K4f5J9MWUgCxziRyUe6PTHZ;
    const _2diCorzqPGQQqftp6e4SrCEwEnyk: (boolean)[] = [];

    const _2diCorzqPGQQqftp6e4SrCEwEnyk__array = values[\\"http://joinmastodon.org/ns#indexable\\"];
    for (
      const v of _2diCorzqPGQQqftp6e4SrCEwEnyk__array == null
        ? []
        : _2diCorzqPGQQqftp6e4SrCEwEnyk__array.length === 1 && \\"@list\\" in _2diCorzqPGQQqftp6e4SrCEwEnyk__array[0]
        ? _2diCorzqPGQQqftp6e4SrCEwEnyk__array[0][\\"@list\\"]
        : _2diCorzqPGQQqftp6e4SrCEwEnyk__array
    ) {
      if (v == null) continue;
    _2diCorzqPGQQqftp6e4SrCEwEnyk.push(v[\\"@value\\"])
    }
    instance.#_2diCorzqPGQQqftp6e4SrCEwEnyk = _2diCorzqPGQQqftp6e4SrCEwEnyk;
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
      const _3isuDgRAKSntq9XdbjiNxjwyPZAf = this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3isuDgRAKSntq9XdbjiNxjwyPZAf.length == 1) {
        proxy.preferredUsername = _3isuDgRAKSntq9XdbjiNxjwyPZAf[0];
      }
      
      if (_3isuDgRAKSntq9XdbjiNxjwyPZAf.length > 1
          || !(\\"preferredUsername\\" in proxy)
          && _3isuDgRAKSntq9XdbjiNxjwyPZAf.length > 0) {
        proxy.preferredUsernames = _3isuDgRAKSntq9XdbjiNxjwyPZAf;
      }
      
      const _axq166E2eZADq34V4MYUc8KMZdC = this.#_axq166E2eZADq34V4MYUc8KMZdC
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_axq166E2eZADq34V4MYUc8KMZdC.length == 1) {
        proxy.publicKey = _axq166E2eZADq34V4MYUc8KMZdC[0];
      }
      
      if (_axq166E2eZADq34V4MYUc8KMZdC.length > 1
          || !(\\"publicKey\\" in proxy)
          && _axq166E2eZADq34V4MYUc8KMZdC.length > 0) {
        proxy.publicKeys = _axq166E2eZADq34V4MYUc8KMZdC;
      }
      
      const _4EHQFWZSz1k1d4LmPrQiMba2GbP3 = this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_4EHQFWZSz1k1d4LmPrQiMba2GbP3.length == 1) {
        proxy.assertionMethod = _4EHQFWZSz1k1d4LmPrQiMba2GbP3[0];
      }
      
      if (_4EHQFWZSz1k1d4LmPrQiMba2GbP3.length > 1
          || !(\\"assertionMethod\\" in proxy)
          && _4EHQFWZSz1k1d4LmPrQiMba2GbP3.length > 0) {
        proxy.assertionMethods = _4EHQFWZSz1k1d4LmPrQiMba2GbP3;
      }
      
      const _36QNc9MxfkKf6h8sEUQSHnV9NZA = this.#_36QNc9MxfkKf6h8sEUQSHnV9NZA
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_36QNc9MxfkKf6h8sEUQSHnV9NZA.length == 1) {
        proxy.manuallyApprovesFollowers = _36QNc9MxfkKf6h8sEUQSHnV9NZA[0];
      }
      
      const _3ghX3VfZXXbLvhCRH7QJqpzLrXjB = this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3ghX3VfZXXbLvhCRH7QJqpzLrXjB.length == 1) {
        proxy.inbox = _3ghX3VfZXXbLvhCRH7QJqpzLrXjB[0];
      }
      
      const _41QwhqJouoLg3h8dRPKat21brynC = this.#_41QwhqJouoLg3h8dRPKat21brynC
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_41QwhqJouoLg3h8dRPKat21brynC.length == 1) {
        proxy.outbox = _41QwhqJouoLg3h8dRPKat21brynC[0];
      }
      
      const _3yAv8jymNfNuJUDuBzJ1NQhdbAee = this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3yAv8jymNfNuJUDuBzJ1NQhdbAee.length == 1) {
        proxy.following = _3yAv8jymNfNuJUDuBzJ1NQhdbAee[0];
      }
      
      const _BBCTgfphhsFzpVfKTykGSpBNwoA = this.#_BBCTgfphhsFzpVfKTykGSpBNwoA
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_BBCTgfphhsFzpVfKTykGSpBNwoA.length == 1) {
        proxy.followers = _BBCTgfphhsFzpVfKTykGSpBNwoA[0];
      }
      
      const _3bgkPwJanyTCoVFM9ovRcus8tKkU = this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3bgkPwJanyTCoVFM9ovRcus8tKkU.length == 1) {
        proxy.liked = _3bgkPwJanyTCoVFM9ovRcus8tKkU[0];
      }
      
      const _4N1vBJzXDf8NbBumeECQMFvKetja = this.#_4N1vBJzXDf8NbBumeECQMFvKetja
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_4N1vBJzXDf8NbBumeECQMFvKetja.length == 1) {
        proxy.featured = _4N1vBJzXDf8NbBumeECQMFvKetja[0];
      }
      
      const _2MxnRRLq9iPzx5CFq2NPrXdUDCac = this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2MxnRRLq9iPzx5CFq2NPrXdUDCac.length == 1) {
        proxy.featuredTags = _2MxnRRLq9iPzx5CFq2NPrXdUDCac[0];
      }
      
      const _3sG2Hdwn9qzKGu9mpYkqakAMUkH9 = this.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3sG2Hdwn9qzKGu9mpYkqakAMUkH9.length > 1
          || !(\\"stream\\" in proxy)
          && _3sG2Hdwn9qzKGu9mpYkqakAMUkH9.length > 0) {
        proxy.streams = _3sG2Hdwn9qzKGu9mpYkqakAMUkH9;
      }
      
      const _sEoQwUbfk4hEfugzNQ2ZiDcLMkG = this.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_sEoQwUbfk4hEfugzNQ2ZiDcLMkG.length == 1) {
        proxy.endpoints = _sEoQwUbfk4hEfugzNQ2ZiDcLMkG[0];
      }
      
      const _gAJzg1QDc4rcefFsUzGSYmyXvNH = this.#_gAJzg1QDc4rcefFsUzGSYmyXvNH
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_gAJzg1QDc4rcefFsUzGSYmyXvNH.length == 1) {
        proxy.discoverable = _gAJzg1QDc4rcefFsUzGSYmyXvNH[0];
      }
      
      const _2kGKkJtoFWg8c18PaVSqj9NKP4t7 = this.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2kGKkJtoFWg8c18PaVSqj9NKP4t7.length == 1) {
        proxy.suspended = _2kGKkJtoFWg8c18PaVSqj9NKP4t7[0];
      }
      
      const _79S8K4f5J9MWUgCxziRyUe6PTHZ = this.#_79S8K4f5J9MWUgCxziRyUe6PTHZ
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_79S8K4f5J9MWUgCxziRyUe6PTHZ.length == 1) {
        proxy.memorial = _79S8K4f5J9MWUgCxziRyUe6PTHZ[0];
      }
      
      const _2diCorzqPGQQqftp6e4SrCEwEnyk = this.#_2diCorzqPGQQqftp6e4SrCEwEnyk
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2diCorzqPGQQqftp6e4SrCEwEnyk.length == 1) {
        proxy.indexable = _2diCorzqPGQQqftp6e4SrCEwEnyk[0];
      }
      
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Application \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Application \\" + inspect(proxy, options);
  }
  }

/** Instances of \`IntransitiveActivity\` are a subtype of {@link Activity}
 * representing intransitive actions.  The \`object\` property is therefore
 * inappropriate for these activities.
 * 
 */
export class IntransitiveActivity extends Activity {

    /**
     * The type URI of {@link IntransitiveActivity}: \`https://www.w3.org/ns/activitystreams#IntransitiveActivity\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#IntransitiveActivity\\");
    }
  
  /**
   * Constructs a new instance of IntransitiveActivity with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });}

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): IntransitiveActivity {
  const clone = super.clone(values, options) as unknown as IntransitiveActivity;
    return clone;
  }
  
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#IntransitiveActivity\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\"],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<IntransitiveActivity> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Arrive\\")) {
      delete values[\\"@type\\"];
      return await Arrive.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Question\\")) {
      delete values[\\"@type\\"];
      return await Question.fromJsonLd(values, options);
    }
    
    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#IntransitiveActivity\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof IntransitiveActivity)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"IntransitiveActivity \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"IntransitiveActivity \\" + inspect(proxy, options);
  }
  }

/** An \`IntransitiveActivity\` that indicates that the \`actor\` has arrived at the \`location\`.
 * The \`origin\` can be used to identify the context from which the \`actor\` originated.
 * The \`target\` typically has no defined meaning.
 * 
 */
export class Arrive extends IntransitiveActivity {

    /**
     * The type URI of {@link Arrive}: \`https://www.w3.org/ns/activitystreams#Arrive\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Arrive\\");
    }
  
  /**
   * Constructs a new instance of Arrive with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });}

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Arrive {
  const clone = super.clone(values, options) as unknown as Arrive;
    return clone;
  }
  
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Arrive\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\"],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Arrive> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Arrive\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Arrive)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Arrive \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Arrive \\" + inspect(proxy, options);
  }
  }

/** Represents any kind of multi-paragraph written work.
 */
export class Article extends Object {

    /**
     * The type URI of {@link Article}: \`https://www.w3.org/ns/activitystreams#Article\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Article\\");
    }
  
  /**
   * Constructs a new instance of Article with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });}

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Article {
  const clone = super.clone(values, options) as unknown as Article;
    return clone;
  }
  
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Article\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\",{\\"toot\\":\\"http://joinmastodon.org/ns#\\",\\"sensitive\\":\\"as:sensitive\\",\\"Emoji\\":\\"toot:Emoji\\",\\"Hashtag\\":\\"as:Hashtag\\"}],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Article> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Article\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Article)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Article \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Article \\" + inspect(proxy, options);
  }
  }

/** Represents a document of any kind.
 */
export class Document extends Object {

    /**
     * The type URI of {@link Document}: \`https://www.w3.org/ns/activitystreams#Document\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Document\\");
    }
  #_2e9AP7WdHBJYAgXG6GEyq7nSkNMe: (number)[] = [];
#_2cGKFeFJMmiNpGZFEF75mCwFQsKb: (number)[] = [];

  /**
   * Constructs a new instance of Document with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];width?: number | null;height?: number | null;}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });
        if (\\"width\\" in values &&             values.width != null) {
          if (typeof values.width === \\"number\\" && Number.isInteger(values.width) && values.width >= 0) {
            // @ts-ignore: type is checked above.
            this.#_2e9AP7WdHBJYAgXG6GEyq7nSkNMe = [values.width];
          } else {
            throw new TypeError(
              \\"The width must be of type \\" +
              \\"number\\" + \\".\\",
            );
          }
        }
      
        if (\\"height\\" in values &&             values.height != null) {
          if (typeof values.height === \\"number\\" && Number.isInteger(values.height) && values.height >= 0) {
            // @ts-ignore: type is checked above.
            this.#_2cGKFeFJMmiNpGZFEF75mCwFQsKb = [values.height];
          } else {
            throw new TypeError(
              \\"The height must be of type \\" +
              \\"number\\" + \\".\\",
            );
          }
        }
      }

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];width?: number | null;height?: number | null;}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Document {
  const clone = super.clone(values, options) as unknown as Document;clone.#_2e9AP7WdHBJYAgXG6GEyq7nSkNMe = this.#_2e9AP7WdHBJYAgXG6GEyq7nSkNMe;
        if (\\"width\\" in values &&             values.width != null) {
          if (typeof values.width === \\"number\\" && Number.isInteger(values.width) && values.width >= 0) {
            // @ts-ignore: type is checked above.
            clone.#_2e9AP7WdHBJYAgXG6GEyq7nSkNMe = [values.width];
          } else {
            throw new TypeError(
              \\"The width must be of type \\" +
              \\"number\\" + \\".\\",
            );
          }
        }
      clone.#_2cGKFeFJMmiNpGZFEF75mCwFQsKb = this.#_2cGKFeFJMmiNpGZFEF75mCwFQsKb;
        if (\\"height\\" in values &&             values.height != null) {
          if (typeof values.height === \\"number\\" && Number.isInteger(values.height) && values.height >= 0) {
            // @ts-ignore: type is checked above.
            clone.#_2cGKFeFJMmiNpGZFEF75mCwFQsKb = [values.height];
          } else {
            throw new TypeError(
              \\"The height must be of type \\" +
              \\"number\\" + \\".\\",
            );
          }
        }
      
    return clone;
  }
  
/** Specifies a hint as to the rendering width in
 * device-independent pixels of the linked resource.
 * 
 */
get width(): (number | null) {
        if (this.#_2e9AP7WdHBJYAgXG6GEyq7nSkNMe.length < 1) return null;
        return this.#_2e9AP7WdHBJYAgXG6GEyq7nSkNMe[0];
      }
      
/** Specifies a hint as to the rendering height in
 * device-independent pixels of the linked resource.
 * 
 */
get height(): (number | null) {
        if (this.#_2cGKFeFJMmiNpGZFEF75mCwFQsKb.length < 1) return null;
        return this.#_2cGKFeFJMmiNpGZFEF75mCwFQsKb[0];
      }
      
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    array = [];
    for (const v of this.#_2e9AP7WdHBJYAgXG6GEyq7nSkNMe) {
      const element = (
    {
        \\"@type\\": \\"http://www.w3.org/2001/XMLSchema#nonNegativeInteger\\",
        \\"@value\\": v,
      }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#width\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_2cGKFeFJMmiNpGZFEF75mCwFQsKb) {
      const element = (
    {
        \\"@type\\": \\"http://www.w3.org/2001/XMLSchema#nonNegativeInteger\\",
        \\"@value\\": v,
      }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#height\\"] = (
    array
      );
    }
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Document\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\"],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Document> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Audio\\")) {
      delete values[\\"@type\\"];
      return await Audio.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Image\\")) {
      delete values[\\"@type\\"];
      return await Image.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Page\\")) {
      delete values[\\"@type\\"];
      return await Page.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Video\\")) {
      delete values[\\"@type\\"];
      return await Video.fromJsonLd(values, options);
    }
    
    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Document\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Document)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    const _2e9AP7WdHBJYAgXG6GEyq7nSkNMe: (number)[] = [];

    const _2e9AP7WdHBJYAgXG6GEyq7nSkNMe__array = values[\\"https://www.w3.org/ns/activitystreams#width\\"];
    for (
      const v of _2e9AP7WdHBJYAgXG6GEyq7nSkNMe__array == null
        ? []
        : _2e9AP7WdHBJYAgXG6GEyq7nSkNMe__array.length === 1 && \\"@list\\" in _2e9AP7WdHBJYAgXG6GEyq7nSkNMe__array[0]
        ? _2e9AP7WdHBJYAgXG6GEyq7nSkNMe__array[0][\\"@list\\"]
        : _2e9AP7WdHBJYAgXG6GEyq7nSkNMe__array
    ) {
      if (v == null) continue;
    _2e9AP7WdHBJYAgXG6GEyq7nSkNMe.push(v[\\"@value\\"])
    }
    instance.#_2e9AP7WdHBJYAgXG6GEyq7nSkNMe = _2e9AP7WdHBJYAgXG6GEyq7nSkNMe;
    const _2cGKFeFJMmiNpGZFEF75mCwFQsKb: (number)[] = [];

    const _2cGKFeFJMmiNpGZFEF75mCwFQsKb__array = values[\\"https://www.w3.org/ns/activitystreams#height\\"];
    for (
      const v of _2cGKFeFJMmiNpGZFEF75mCwFQsKb__array == null
        ? []
        : _2cGKFeFJMmiNpGZFEF75mCwFQsKb__array.length === 1 && \\"@list\\" in _2cGKFeFJMmiNpGZFEF75mCwFQsKb__array[0]
        ? _2cGKFeFJMmiNpGZFEF75mCwFQsKb__array[0][\\"@list\\"]
        : _2cGKFeFJMmiNpGZFEF75mCwFQsKb__array
    ) {
      if (v == null) continue;
    _2cGKFeFJMmiNpGZFEF75mCwFQsKb.push(v[\\"@value\\"])
    }
    instance.#_2cGKFeFJMmiNpGZFEF75mCwFQsKb = _2cGKFeFJMmiNpGZFEF75mCwFQsKb;
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
      const _2e9AP7WdHBJYAgXG6GEyq7nSkNMe = this.#_2e9AP7WdHBJYAgXG6GEyq7nSkNMe
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2e9AP7WdHBJYAgXG6GEyq7nSkNMe.length == 1) {
        proxy.width = _2e9AP7WdHBJYAgXG6GEyq7nSkNMe[0];
      }
      
      const _2cGKFeFJMmiNpGZFEF75mCwFQsKb = this.#_2cGKFeFJMmiNpGZFEF75mCwFQsKb
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2cGKFeFJMmiNpGZFEF75mCwFQsKb.length == 1) {
        proxy.height = _2cGKFeFJMmiNpGZFEF75mCwFQsKb[0];
      }
      
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Document \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Document \\" + inspect(proxy, options);
  }
  }

/** Represents an audio document of any kind.
 */
export class Audio extends Document {

    /**
     * The type URI of {@link Audio}: \`https://www.w3.org/ns/activitystreams#Audio\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Audio\\");
    }
  
  /**
   * Constructs a new instance of Audio with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];width?: number | null;height?: number | null;}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });}

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];width?: number | null;height?: number | null;}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Audio {
  const clone = super.clone(values, options) as unknown as Audio;
    return clone;
  }
  
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Audio\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\"],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Audio> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Audio\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Audio)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Audio \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Audio \\" + inspect(proxy, options);
  }
  }

/** Indicates that the \`actor\` is ignoring the \`object\`.  The \`target\` and
 * \`origin\` typically have no defined meaning.
 * 
 */
export class Ignore extends Activity {

    /**
     * The type URI of {@link Ignore}: \`https://www.w3.org/ns/activitystreams#Ignore\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Ignore\\");
    }
  
  /**
   * Constructs a new instance of Ignore with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });}

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Ignore {
  const clone = super.clone(values, options) as unknown as Ignore;
    return clone;
  }
  
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Ignore\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\"],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Ignore> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Block\\")) {
      delete values[\\"@type\\"];
      return await Block.fromJsonLd(values, options);
    }
    
    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Ignore\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Ignore)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Ignore \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Ignore \\" + inspect(proxy, options);
  }
  }

/** Indicates that the \`actor\` is blocking the \`object\`.  Blocking is a stronger
 * form of {@link Ignore}.  The typical use is to support social systems that
 * allow one user to block activities or content of other users.  The \`target\`
 * and \`origin\` typically have no defined meaning.
 * 
 */
export class Block extends Ignore {

    /**
     * The type URI of {@link Block}: \`https://www.w3.org/ns/activitystreams#Block\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Block\\");
    }
  
  /**
   * Constructs a new instance of Block with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });}

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Block {
  const clone = super.clone(values, options) as unknown as Block;
    return clone;
  }
  
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Block\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\"],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Block> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Block\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Block)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Block \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Block \\" + inspect(proxy, options);
  }
  }

/** A \`Collection\` is a subtype of {@link Object} that represents ordered or
 * unordered sets of {@link Object} or {@link Link} instances.
 * 
 * Refer to the Activity Streams 2.0 Core specification for a complete
 * description of the Collection type.
 * 
 */
export class Collection extends Object {

    /**
     * The type URI of {@link Collection}: \`https://www.w3.org/ns/activitystreams#Collection\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Collection\\");
    }
  #_XDbmNDuWHmrhqH712zqtecdbv1V: (number)[] = [];
#_3UyUdxnyn6cDn53QKrh4MBiearma: (CollectionPage | URL)[] = [];
#_J52RqweMe6hhv7RnLJMC8BExTE5: (CollectionPage | URL)[] = [];
#_gyJJnyEFnuNVi1HFZKfAn3Hfn26: (CollectionPage | URL)[] = [];
#_2JPCKWTcfBmTCcW8Tv3TpRaLVaqg: (Object | Link | URL)[] = [];

  /**
   * Constructs a new instance of Collection with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];totalItems?: number | null;current?: CollectionPage | URL | null;first?: CollectionPage | URL | null;last?: CollectionPage | URL | null;items?: (Object | Link | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });
        if (\\"totalItems\\" in values &&             values.totalItems != null) {
          if (typeof values.totalItems === \\"number\\" && Number.isInteger(values.totalItems) && values.totalItems >= 0) {
            // @ts-ignore: type is checked above.
            this.#_XDbmNDuWHmrhqH712zqtecdbv1V = [values.totalItems];
          } else {
            throw new TypeError(
              \\"The totalItems must be of type \\" +
              \\"number\\" + \\".\\",
            );
          }
        }
      
        if (\\"current\\" in values &&             values.current != null) {
          if (values.current instanceof CollectionPage || values.current instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_3UyUdxnyn6cDn53QKrh4MBiearma = [values.current];
          } else {
            throw new TypeError(
              \\"The current must be of type \\" +
              \\"CollectionPage | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"first\\" in values &&             values.first != null) {
          if (values.first instanceof CollectionPage || values.first instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_J52RqweMe6hhv7RnLJMC8BExTE5 = [values.first];
          } else {
            throw new TypeError(
              \\"The first must be of type \\" +
              \\"CollectionPage | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"last\\" in values &&             values.last != null) {
          if (values.last instanceof CollectionPage || values.last instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_gyJJnyEFnuNVi1HFZKfAn3Hfn26 = [values.last];
          } else {
            throw new TypeError(
              \\"The last must be of type \\" +
              \\"CollectionPage | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"items\\" in values &&             values.items != null) {
      
          if (Array.isArray(values.items) &&
              values.items.every(v => v instanceof Object || v instanceof Link || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_2JPCKWTcfBmTCcW8Tv3TpRaLVaqg = values.items;
          } else {
            throw new TypeError(
              \\"The items must be an array of type \\" +
              \\"Object | Link | URL\\" + \\".\\",
            );
          }
        }
      }

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];totalItems?: number | null;current?: CollectionPage | URL | null;first?: CollectionPage | URL | null;last?: CollectionPage | URL | null;items?: (Object | Link | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Collection {
  const clone = super.clone(values, options) as unknown as Collection;clone.#_XDbmNDuWHmrhqH712zqtecdbv1V = this.#_XDbmNDuWHmrhqH712zqtecdbv1V;
        if (\\"totalItems\\" in values &&             values.totalItems != null) {
          if (typeof values.totalItems === \\"number\\" && Number.isInteger(values.totalItems) && values.totalItems >= 0) {
            // @ts-ignore: type is checked above.
            clone.#_XDbmNDuWHmrhqH712zqtecdbv1V = [values.totalItems];
          } else {
            throw new TypeError(
              \\"The totalItems must be of type \\" +
              \\"number\\" + \\".\\",
            );
          }
        }
      clone.#_3UyUdxnyn6cDn53QKrh4MBiearma = this.#_3UyUdxnyn6cDn53QKrh4MBiearma;
        if (\\"current\\" in values &&             values.current != null) {
          if (values.current instanceof CollectionPage || values.current instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_3UyUdxnyn6cDn53QKrh4MBiearma = [values.current];
          } else {
            throw new TypeError(
              \\"The current must be of type \\" +
              \\"CollectionPage | URL\\" + \\".\\",
            );
          }
        }
      clone.#_J52RqweMe6hhv7RnLJMC8BExTE5 = this.#_J52RqweMe6hhv7RnLJMC8BExTE5;
        if (\\"first\\" in values &&             values.first != null) {
          if (values.first instanceof CollectionPage || values.first instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_J52RqweMe6hhv7RnLJMC8BExTE5 = [values.first];
          } else {
            throw new TypeError(
              \\"The first must be of type \\" +
              \\"CollectionPage | URL\\" + \\".\\",
            );
          }
        }
      clone.#_gyJJnyEFnuNVi1HFZKfAn3Hfn26 = this.#_gyJJnyEFnuNVi1HFZKfAn3Hfn26;
        if (\\"last\\" in values &&             values.last != null) {
          if (values.last instanceof CollectionPage || values.last instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_gyJJnyEFnuNVi1HFZKfAn3Hfn26 = [values.last];
          } else {
            throw new TypeError(
              \\"The last must be of type \\" +
              \\"CollectionPage | URL\\" + \\".\\",
            );
          }
        }
      clone.#_2JPCKWTcfBmTCcW8Tv3TpRaLVaqg = this.#_2JPCKWTcfBmTCcW8Tv3TpRaLVaqg;
        if (\\"items\\" in values &&             values.items != null) {
      
          if (Array.isArray(values.items) &&
              values.items.every(v => v instanceof Object || v instanceof Link || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_2JPCKWTcfBmTCcW8Tv3TpRaLVaqg = values.items;
          } else {
            throw new TypeError(
              \\"The items must be an array of type \\" +
              \\"Object | Link | URL\\" + \\".\\",
            );
          }
        }
      
    return clone;
  }
  
/** A non-negative integer specifying the total number of objects contained by
 * the logical view of the collection. This number might not reflect the actual
 * number of items serialized within the {@link Collection} object instance.
 * 
 */
get totalItems(): (number | null) {
        if (this.#_XDbmNDuWHmrhqH712zqtecdbv1V.length < 1) return null;
        return this.#_XDbmNDuWHmrhqH712zqtecdbv1V[0];
      }
      
    async #fetchCurrent(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<CollectionPage | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await CollectionPage.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#CollectionPage\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Collection.getCurrent},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get currentId(): URL | null {
        if (this.#_3UyUdxnyn6cDn53QKrh4MBiearma.length < 1) return null;
        const v = this.#_3UyUdxnyn6cDn53QKrh4MBiearma[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** In a paged {@link Collection}, indicates the page that contains
 * the most recently updated member items.
 * 
 */

      async getCurrent(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<CollectionPage | null> {
        if (this.#_3UyUdxnyn6cDn53QKrh4MBiearma.length < 1) return null;
        const v = this.#_3UyUdxnyn6cDn53QKrh4MBiearma[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchCurrent(v, options);
          if (fetched == null) return null;
          this.#_3UyUdxnyn6cDn53QKrh4MBiearma[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchFirst(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<CollectionPage | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await CollectionPage.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#CollectionPage\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Collection.getFirst},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get firstId(): URL | null {
        if (this.#_J52RqweMe6hhv7RnLJMC8BExTE5.length < 1) return null;
        const v = this.#_J52RqweMe6hhv7RnLJMC8BExTE5[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** In a paged {@link Collection}, indicates the furthest preceding page of
 * items in the collection.
 * 
 */

      async getFirst(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<CollectionPage | null> {
        if (this.#_J52RqweMe6hhv7RnLJMC8BExTE5.length < 1) return null;
        const v = this.#_J52RqweMe6hhv7RnLJMC8BExTE5[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchFirst(v, options);
          if (fetched == null) return null;
          this.#_J52RqweMe6hhv7RnLJMC8BExTE5[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchLast(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<CollectionPage | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await CollectionPage.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#CollectionPage\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Collection.getLast},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get lastId(): URL | null {
        if (this.#_gyJJnyEFnuNVi1HFZKfAn3Hfn26.length < 1) return null;
        const v = this.#_gyJJnyEFnuNVi1HFZKfAn3Hfn26[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** In a paged {@link Collection}, indicates the furthest proceeding page of
 * the collection.
 * 
 */

      async getLast(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<CollectionPage | null> {
        if (this.#_gyJJnyEFnuNVi1HFZKfAn3Hfn26.length < 1) return null;
        const v = this.#_gyJJnyEFnuNVi1HFZKfAn3Hfn26[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchLast(v, options);
          if (fetched == null) return null;
          this.#_gyJJnyEFnuNVi1HFZKfAn3Hfn26[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchItem(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Object | Link | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Object.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      try {
        return await Link.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Object\\",\\"https://www.w3.org/ns/activitystreams#Link\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Collection.getItems},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get itemIds(): URL[] {
        return this.#_2JPCKWTcfBmTCcW8Tv3TpRaLVaqg.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** Identifies the items contained in a collection.  The items might be ordered
 * or unordered.
 * 
 */

      async* getItems(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Object | Link> {
        const vs = this.#_2JPCKWTcfBmTCcW8Tv3TpRaLVaqg;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchItem(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    array = [];
    for (const v of this.#_XDbmNDuWHmrhqH712zqtecdbv1V) {
      const element = (
    {
        \\"@type\\": \\"http://www.w3.org/2001/XMLSchema#nonNegativeInteger\\",
        \\"@value\\": v,
      }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#totalItems\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3UyUdxnyn6cDn53QKrh4MBiearma) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#current\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_J52RqweMe6hhv7RnLJMC8BExTE5) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#first\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_gyJJnyEFnuNVi1HFZKfAn3Hfn26) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#last\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_2JPCKWTcfBmTCcW8Tv3TpRaLVaqg) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : v instanceof Object ? await v.toJsonLd(options) : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#items\\"] = (
    array
      );
    }
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Collection\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\",{\\"toot\\":\\"http://joinmastodon.org/ns#\\",\\"sensitive\\":\\"as:sensitive\\",\\"Emoji\\":\\"toot:Emoji\\",\\"Hashtag\\":\\"as:Hashtag\\"}],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Collection> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#CollectionPage\\")) {
      delete values[\\"@type\\"];
      return await CollectionPage.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#OrderedCollectionPage\\")) {
      delete values[\\"@type\\"];
      return await OrderedCollectionPage.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#OrderedCollection\\")) {
      delete values[\\"@type\\"];
      return await OrderedCollection.fromJsonLd(values, options);
    }
    
    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Collection\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Collection)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    const _XDbmNDuWHmrhqH712zqtecdbv1V: (number)[] = [];

    const _XDbmNDuWHmrhqH712zqtecdbv1V__array = values[\\"https://www.w3.org/ns/activitystreams#totalItems\\"];
    for (
      const v of _XDbmNDuWHmrhqH712zqtecdbv1V__array == null
        ? []
        : _XDbmNDuWHmrhqH712zqtecdbv1V__array.length === 1 && \\"@list\\" in _XDbmNDuWHmrhqH712zqtecdbv1V__array[0]
        ? _XDbmNDuWHmrhqH712zqtecdbv1V__array[0][\\"@list\\"]
        : _XDbmNDuWHmrhqH712zqtecdbv1V__array
    ) {
      if (v == null) continue;
    _XDbmNDuWHmrhqH712zqtecdbv1V.push(v[\\"@value\\"])
    }
    instance.#_XDbmNDuWHmrhqH712zqtecdbv1V = _XDbmNDuWHmrhqH712zqtecdbv1V;
    const _3UyUdxnyn6cDn53QKrh4MBiearma: (CollectionPage | URL)[] = [];

    const _3UyUdxnyn6cDn53QKrh4MBiearma__array = values[\\"https://www.w3.org/ns/activitystreams#current\\"];
    for (
      const v of _3UyUdxnyn6cDn53QKrh4MBiearma__array == null
        ? []
        : _3UyUdxnyn6cDn53QKrh4MBiearma__array.length === 1 && \\"@list\\" in _3UyUdxnyn6cDn53QKrh4MBiearma__array[0]
        ? _3UyUdxnyn6cDn53QKrh4MBiearma__array[0][\\"@list\\"]
        : _3UyUdxnyn6cDn53QKrh4MBiearma__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _3UyUdxnyn6cDn53QKrh4MBiearma.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _3UyUdxnyn6cDn53QKrh4MBiearma.push(await CollectionPage.fromJsonLd(
      v, options))
    }
    instance.#_3UyUdxnyn6cDn53QKrh4MBiearma = _3UyUdxnyn6cDn53QKrh4MBiearma;
    const _J52RqweMe6hhv7RnLJMC8BExTE5: (CollectionPage | URL)[] = [];

    const _J52RqweMe6hhv7RnLJMC8BExTE5__array = values[\\"https://www.w3.org/ns/activitystreams#first\\"];
    for (
      const v of _J52RqweMe6hhv7RnLJMC8BExTE5__array == null
        ? []
        : _J52RqweMe6hhv7RnLJMC8BExTE5__array.length === 1 && \\"@list\\" in _J52RqweMe6hhv7RnLJMC8BExTE5__array[0]
        ? _J52RqweMe6hhv7RnLJMC8BExTE5__array[0][\\"@list\\"]
        : _J52RqweMe6hhv7RnLJMC8BExTE5__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _J52RqweMe6hhv7RnLJMC8BExTE5.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _J52RqweMe6hhv7RnLJMC8BExTE5.push(await CollectionPage.fromJsonLd(
      v, options))
    }
    instance.#_J52RqweMe6hhv7RnLJMC8BExTE5 = _J52RqweMe6hhv7RnLJMC8BExTE5;
    const _gyJJnyEFnuNVi1HFZKfAn3Hfn26: (CollectionPage | URL)[] = [];

    const _gyJJnyEFnuNVi1HFZKfAn3Hfn26__array = values[\\"https://www.w3.org/ns/activitystreams#last\\"];
    for (
      const v of _gyJJnyEFnuNVi1HFZKfAn3Hfn26__array == null
        ? []
        : _gyJJnyEFnuNVi1HFZKfAn3Hfn26__array.length === 1 && \\"@list\\" in _gyJJnyEFnuNVi1HFZKfAn3Hfn26__array[0]
        ? _gyJJnyEFnuNVi1HFZKfAn3Hfn26__array[0][\\"@list\\"]
        : _gyJJnyEFnuNVi1HFZKfAn3Hfn26__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _gyJJnyEFnuNVi1HFZKfAn3Hfn26.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _gyJJnyEFnuNVi1HFZKfAn3Hfn26.push(await CollectionPage.fromJsonLd(
      v, options))
    }
    instance.#_gyJJnyEFnuNVi1HFZKfAn3Hfn26 = _gyJJnyEFnuNVi1HFZKfAn3Hfn26;
    const _2JPCKWTcfBmTCcW8Tv3TpRaLVaqg: (Object | Link | URL)[] = [];

    const _2JPCKWTcfBmTCcW8Tv3TpRaLVaqg__array = values[\\"https://www.w3.org/ns/activitystreams#items\\"];
    for (
      const v of _2JPCKWTcfBmTCcW8Tv3TpRaLVaqg__array == null
        ? []
        : _2JPCKWTcfBmTCcW8Tv3TpRaLVaqg__array.length === 1 && \\"@list\\" in _2JPCKWTcfBmTCcW8Tv3TpRaLVaqg__array[0]
        ? _2JPCKWTcfBmTCcW8Tv3TpRaLVaqg__array[0][\\"@list\\"]
        : _2JPCKWTcfBmTCcW8Tv3TpRaLVaqg__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _2JPCKWTcfBmTCcW8Tv3TpRaLVaqg.push(new URL(v[\\"@id\\"]));
        continue;
      }
      
      const decoded =
      typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& [\\"https://www.w3.org/ns/activitystreams#Object\\",\\"http://joinmastodon.org/ns#Emoji\\",\\"https://www.w3.org/ns/activitystreams#Activity\\",\\"https://www.w3.org/ns/activitystreams#Accept\\",\\"https://www.w3.org/ns/activitystreams#Add\\",\\"https://www.w3.org/ns/activitystreams#Announce\\",\\"https://www.w3.org/ns/activitystreams#Create\\",\\"https://www.w3.org/ns/activitystreams#Delete\\",\\"https://www.w3.org/ns/activitystreams#Dislike\\",\\"https://www.w3.org/ns/activitystreams#Flag\\",\\"https://www.w3.org/ns/activitystreams#Follow\\",\\"https://www.w3.org/ns/activitystreams#Ignore\\",\\"https://www.w3.org/ns/activitystreams#Block\\",\\"https://www.w3.org/ns/activitystreams#IntransitiveActivity\\",\\"https://www.w3.org/ns/activitystreams#Arrive\\",\\"https://www.w3.org/ns/activitystreams#Question\\",\\"https://www.w3.org/ns/activitystreams#Join\\",\\"https://www.w3.org/ns/activitystreams#Leave\\",\\"https://www.w3.org/ns/activitystreams#Like\\",\\"https://www.w3.org/ns/activitystreams#Listen\\",\\"https://www.w3.org/ns/activitystreams#Offer\\",\\"https://www.w3.org/ns/activitystreams#Invite\\",\\"https://www.w3.org/ns/activitystreams#Reject\\",\\"https://www.w3.org/ns/activitystreams#Remove\\",\\"https://www.w3.org/ns/activitystreams#Undo\\",\\"https://www.w3.org/ns/activitystreams#Update\\",\\"https://www.w3.org/ns/activitystreams#Application\\",\\"https://www.w3.org/ns/activitystreams#Article\\",\\"https://www.w3.org/ns/activitystreams#Collection\\",\\"https://www.w3.org/ns/activitystreams#CollectionPage\\",\\"https://www.w3.org/ns/activitystreams#OrderedCollectionPage\\",\\"https://www.w3.org/ns/activitystreams#OrderedCollection\\",\\"https://www.w3.org/ns/activitystreams#Document\\",\\"https://www.w3.org/ns/activitystreams#Audio\\",\\"https://www.w3.org/ns/activitystreams#Image\\",\\"https://www.w3.org/ns/activitystreams#Page\\",\\"https://www.w3.org/ns/activitystreams#Video\\",\\"https://www.w3.org/ns/activitystreams#Event\\",\\"https://www.w3.org/ns/activitystreams#Group\\",\\"https://www.w3.org/ns/activitystreams#Note\\",\\"https://www.w3.org/ns/activitystreams#Organization\\",\\"https://www.w3.org/ns/activitystreams#Person\\",\\"https://www.w3.org/ns/activitystreams#Place\\",\\"https://www.w3.org/ns/activitystreams#Profile\\",\\"https://www.w3.org/ns/activitystreams#Relationship\\",\\"https://www.w3.org/ns/activitystreams#Service\\",\\"https://www.w3.org/ns/activitystreams#Tombstone\\"].some(
            t => v[\\"@type\\"].includes(t)) ? await Object.fromJsonLd(
      v, options) : typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& [\\"https://www.w3.org/ns/activitystreams#Link\\",\\"https://www.w3.org/ns/activitystreams#Hashtag\\",\\"https://www.w3.org/ns/activitystreams#Mention\\"].some(
            t => v[\\"@type\\"].includes(t)) ? await Link.fromJsonLd(
      v, options) : undefined
      ;
      if (typeof decoded === \\"undefined\\") continue;
      _2JPCKWTcfBmTCcW8Tv3TpRaLVaqg.push(decoded);
      
    }
    instance.#_2JPCKWTcfBmTCcW8Tv3TpRaLVaqg = _2JPCKWTcfBmTCcW8Tv3TpRaLVaqg;
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
      const _XDbmNDuWHmrhqH712zqtecdbv1V = this.#_XDbmNDuWHmrhqH712zqtecdbv1V
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_XDbmNDuWHmrhqH712zqtecdbv1V.length == 1) {
        proxy.totalItems = _XDbmNDuWHmrhqH712zqtecdbv1V[0];
      }
      
      const _3UyUdxnyn6cDn53QKrh4MBiearma = this.#_3UyUdxnyn6cDn53QKrh4MBiearma
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3UyUdxnyn6cDn53QKrh4MBiearma.length == 1) {
        proxy.current = _3UyUdxnyn6cDn53QKrh4MBiearma[0];
      }
      
      const _J52RqweMe6hhv7RnLJMC8BExTE5 = this.#_J52RqweMe6hhv7RnLJMC8BExTE5
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_J52RqweMe6hhv7RnLJMC8BExTE5.length == 1) {
        proxy.first = _J52RqweMe6hhv7RnLJMC8BExTE5[0];
      }
      
      const _gyJJnyEFnuNVi1HFZKfAn3Hfn26 = this.#_gyJJnyEFnuNVi1HFZKfAn3Hfn26
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_gyJJnyEFnuNVi1HFZKfAn3Hfn26.length == 1) {
        proxy.last = _gyJJnyEFnuNVi1HFZKfAn3Hfn26[0];
      }
      
      const _2JPCKWTcfBmTCcW8Tv3TpRaLVaqg = this.#_2JPCKWTcfBmTCcW8Tv3TpRaLVaqg
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2JPCKWTcfBmTCcW8Tv3TpRaLVaqg.length > 1
          || !(\\"item\\" in proxy)
          && _2JPCKWTcfBmTCcW8Tv3TpRaLVaqg.length > 0) {
        proxy.items = _2JPCKWTcfBmTCcW8Tv3TpRaLVaqg;
      }
      
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Collection \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Collection \\" + inspect(proxy, options);
  }
  }

/** Used to represent distinct subsets of items from a \`Collection\`.
 * Refer to the Activity Streams 2.0 Core for a complete description of
 * the \`CollectionPage\` object.
 * 
 */
export class CollectionPage extends Collection {

    /**
     * The type URI of {@link CollectionPage}: \`https://www.w3.org/ns/activitystreams#CollectionPage\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#CollectionPage\\");
    }
  #_2kWgBhQKjEauxx8C6qF3ZQamK4Le: (Collection | URL)[] = [];
#_3BT4kQLcXhHx7TAWaNDKh8nFn9eY: (CollectionPage | URL)[] = [];
#_3b8yG8tDNzQFFEnWhCc13G8eHooA: (CollectionPage | URL)[] = [];

  /**
   * Constructs a new instance of CollectionPage with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];totalItems?: number | null;current?: CollectionPage | URL | null;first?: CollectionPage | URL | null;last?: CollectionPage | URL | null;items?: (Object | Link | URL)[];partOf?: Collection | URL | null;next?: CollectionPage | URL | null;prev?: CollectionPage | URL | null;}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });
        if (\\"partOf\\" in values &&             values.partOf != null) {
          if (values.partOf instanceof Collection || values.partOf instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_2kWgBhQKjEauxx8C6qF3ZQamK4Le = [values.partOf];
          } else {
            throw new TypeError(
              \\"The partOf must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"next\\" in values &&             values.next != null) {
          if (values.next instanceof CollectionPage || values.next instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_3BT4kQLcXhHx7TAWaNDKh8nFn9eY = [values.next];
          } else {
            throw new TypeError(
              \\"The next must be of type \\" +
              \\"CollectionPage | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"prev\\" in values &&             values.prev != null) {
          if (values.prev instanceof CollectionPage || values.prev instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_3b8yG8tDNzQFFEnWhCc13G8eHooA = [values.prev];
          } else {
            throw new TypeError(
              \\"The prev must be of type \\" +
              \\"CollectionPage | URL\\" + \\".\\",
            );
          }
        }
      }

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];totalItems?: number | null;current?: CollectionPage | URL | null;first?: CollectionPage | URL | null;last?: CollectionPage | URL | null;items?: (Object | Link | URL)[];partOf?: Collection | URL | null;next?: CollectionPage | URL | null;prev?: CollectionPage | URL | null;}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): CollectionPage {
  const clone = super.clone(values, options) as unknown as CollectionPage;clone.#_2kWgBhQKjEauxx8C6qF3ZQamK4Le = this.#_2kWgBhQKjEauxx8C6qF3ZQamK4Le;
        if (\\"partOf\\" in values &&             values.partOf != null) {
          if (values.partOf instanceof Collection || values.partOf instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_2kWgBhQKjEauxx8C6qF3ZQamK4Le = [values.partOf];
          } else {
            throw new TypeError(
              \\"The partOf must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_3BT4kQLcXhHx7TAWaNDKh8nFn9eY = this.#_3BT4kQLcXhHx7TAWaNDKh8nFn9eY;
        if (\\"next\\" in values &&             values.next != null) {
          if (values.next instanceof CollectionPage || values.next instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_3BT4kQLcXhHx7TAWaNDKh8nFn9eY = [values.next];
          } else {
            throw new TypeError(
              \\"The next must be of type \\" +
              \\"CollectionPage | URL\\" + \\".\\",
            );
          }
        }
      clone.#_3b8yG8tDNzQFFEnWhCc13G8eHooA = this.#_3b8yG8tDNzQFFEnWhCc13G8eHooA;
        if (\\"prev\\" in values &&             values.prev != null) {
          if (values.prev instanceof CollectionPage || values.prev instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_3b8yG8tDNzQFFEnWhCc13G8eHooA = [values.prev];
          } else {
            throw new TypeError(
              \\"The prev must be of type \\" +
              \\"CollectionPage | URL\\" + \\".\\",
            );
          }
        }
      
    return clone;
  }
  
    async #fetchPartOf(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Collection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Collection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Collection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link CollectionPage.getPartOf},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get partOfId(): URL | null {
        if (this.#_2kWgBhQKjEauxx8C6qF3ZQamK4Le.length < 1) return null;
        const v = this.#_2kWgBhQKjEauxx8C6qF3ZQamK4Le[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** Identifies the {@link Collection} to which a {@link CollectionPage} objects
 * items belong.
 * 
 */

      async getPartOf(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Collection | null> {
        if (this.#_2kWgBhQKjEauxx8C6qF3ZQamK4Le.length < 1) return null;
        const v = this.#_2kWgBhQKjEauxx8C6qF3ZQamK4Le[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchPartOf(v, options);
          if (fetched == null) return null;
          this.#_2kWgBhQKjEauxx8C6qF3ZQamK4Le[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchNext(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<CollectionPage | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await CollectionPage.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#CollectionPage\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link CollectionPage.getNext},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get nextId(): URL | null {
        if (this.#_3BT4kQLcXhHx7TAWaNDKh8nFn9eY.length < 1) return null;
        const v = this.#_3BT4kQLcXhHx7TAWaNDKh8nFn9eY[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** In a paged {@link Collection}, indicates the next page of items.
 */

      async getNext(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<CollectionPage | null> {
        if (this.#_3BT4kQLcXhHx7TAWaNDKh8nFn9eY.length < 1) return null;
        const v = this.#_3BT4kQLcXhHx7TAWaNDKh8nFn9eY[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchNext(v, options);
          if (fetched == null) return null;
          this.#_3BT4kQLcXhHx7TAWaNDKh8nFn9eY[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchPrev(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<CollectionPage | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await CollectionPage.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#CollectionPage\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link CollectionPage.getPrev},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get prevId(): URL | null {
        if (this.#_3b8yG8tDNzQFFEnWhCc13G8eHooA.length < 1) return null;
        const v = this.#_3b8yG8tDNzQFFEnWhCc13G8eHooA[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** In a paged {@link Collection}, identifies the previous page of items.
 * 
 */

      async getPrev(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<CollectionPage | null> {
        if (this.#_3b8yG8tDNzQFFEnWhCc13G8eHooA.length < 1) return null;
        const v = this.#_3b8yG8tDNzQFFEnWhCc13G8eHooA[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchPrev(v, options);
          if (fetched == null) return null;
          this.#_3b8yG8tDNzQFFEnWhCc13G8eHooA[0] = fetched;
          return fetched;
        }
        return v;
      }
      
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    array = [];
    for (const v of this.#_2kWgBhQKjEauxx8C6qF3ZQamK4Le) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#partOf\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3BT4kQLcXhHx7TAWaNDKh8nFn9eY) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#next\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3b8yG8tDNzQFFEnWhCc13G8eHooA) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#prev\\"] = (
    array
      );
    }
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#CollectionPage\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\",{\\"toot\\":\\"http://joinmastodon.org/ns#\\",\\"sensitive\\":\\"as:sensitive\\",\\"Emoji\\":\\"toot:Emoji\\",\\"Hashtag\\":\\"as:Hashtag\\"}],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<CollectionPage> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#OrderedCollectionPage\\")) {
      delete values[\\"@type\\"];
      return await OrderedCollectionPage.fromJsonLd(values, options);
    }
    
    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#CollectionPage\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof CollectionPage)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    const _2kWgBhQKjEauxx8C6qF3ZQamK4Le: (Collection | URL)[] = [];

    const _2kWgBhQKjEauxx8C6qF3ZQamK4Le__array = values[\\"https://www.w3.org/ns/activitystreams#partOf\\"];
    for (
      const v of _2kWgBhQKjEauxx8C6qF3ZQamK4Le__array == null
        ? []
        : _2kWgBhQKjEauxx8C6qF3ZQamK4Le__array.length === 1 && \\"@list\\" in _2kWgBhQKjEauxx8C6qF3ZQamK4Le__array[0]
        ? _2kWgBhQKjEauxx8C6qF3ZQamK4Le__array[0][\\"@list\\"]
        : _2kWgBhQKjEauxx8C6qF3ZQamK4Le__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _2kWgBhQKjEauxx8C6qF3ZQamK4Le.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _2kWgBhQKjEauxx8C6qF3ZQamK4Le.push(await Collection.fromJsonLd(
      v, options))
    }
    instance.#_2kWgBhQKjEauxx8C6qF3ZQamK4Le = _2kWgBhQKjEauxx8C6qF3ZQamK4Le;
    const _3BT4kQLcXhHx7TAWaNDKh8nFn9eY: (CollectionPage | URL)[] = [];

    const _3BT4kQLcXhHx7TAWaNDKh8nFn9eY__array = values[\\"https://www.w3.org/ns/activitystreams#next\\"];
    for (
      const v of _3BT4kQLcXhHx7TAWaNDKh8nFn9eY__array == null
        ? []
        : _3BT4kQLcXhHx7TAWaNDKh8nFn9eY__array.length === 1 && \\"@list\\" in _3BT4kQLcXhHx7TAWaNDKh8nFn9eY__array[0]
        ? _3BT4kQLcXhHx7TAWaNDKh8nFn9eY__array[0][\\"@list\\"]
        : _3BT4kQLcXhHx7TAWaNDKh8nFn9eY__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _3BT4kQLcXhHx7TAWaNDKh8nFn9eY.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _3BT4kQLcXhHx7TAWaNDKh8nFn9eY.push(await CollectionPage.fromJsonLd(
      v, options))
    }
    instance.#_3BT4kQLcXhHx7TAWaNDKh8nFn9eY = _3BT4kQLcXhHx7TAWaNDKh8nFn9eY;
    const _3b8yG8tDNzQFFEnWhCc13G8eHooA: (CollectionPage | URL)[] = [];

    const _3b8yG8tDNzQFFEnWhCc13G8eHooA__array = values[\\"https://www.w3.org/ns/activitystreams#prev\\"];
    for (
      const v of _3b8yG8tDNzQFFEnWhCc13G8eHooA__array == null
        ? []
        : _3b8yG8tDNzQFFEnWhCc13G8eHooA__array.length === 1 && \\"@list\\" in _3b8yG8tDNzQFFEnWhCc13G8eHooA__array[0]
        ? _3b8yG8tDNzQFFEnWhCc13G8eHooA__array[0][\\"@list\\"]
        : _3b8yG8tDNzQFFEnWhCc13G8eHooA__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _3b8yG8tDNzQFFEnWhCc13G8eHooA.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _3b8yG8tDNzQFFEnWhCc13G8eHooA.push(await CollectionPage.fromJsonLd(
      v, options))
    }
    instance.#_3b8yG8tDNzQFFEnWhCc13G8eHooA = _3b8yG8tDNzQFFEnWhCc13G8eHooA;
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
      const _2kWgBhQKjEauxx8C6qF3ZQamK4Le = this.#_2kWgBhQKjEauxx8C6qF3ZQamK4Le
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2kWgBhQKjEauxx8C6qF3ZQamK4Le.length == 1) {
        proxy.partOf = _2kWgBhQKjEauxx8C6qF3ZQamK4Le[0];
      }
      
      const _3BT4kQLcXhHx7TAWaNDKh8nFn9eY = this.#_3BT4kQLcXhHx7TAWaNDKh8nFn9eY
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3BT4kQLcXhHx7TAWaNDKh8nFn9eY.length == 1) {
        proxy.next = _3BT4kQLcXhHx7TAWaNDKh8nFn9eY[0];
      }
      
      const _3b8yG8tDNzQFFEnWhCc13G8eHooA = this.#_3b8yG8tDNzQFFEnWhCc13G8eHooA
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3b8yG8tDNzQFFEnWhCc13G8eHooA.length == 1) {
        proxy.prev = _3b8yG8tDNzQFFEnWhCc13G8eHooA[0];
      }
      
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"CollectionPage \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"CollectionPage \\" + inspect(proxy, options);
  }
  }

/** Indicates that the \`actor\` has created the \`object\`.
 */
export class Create extends Activity {

    /**
     * The type URI of {@link Create}: \`https://www.w3.org/ns/activitystreams#Create\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Create\\");
    }
  
  /**
   * Constructs a new instance of Create with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });}

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Create {
  const clone = super.clone(values, options) as unknown as Create;
    return clone;
  }
  
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Create\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\",{\\"toot\\":\\"http://joinmastodon.org/ns#\\",\\"sensitive\\":\\"as:sensitive\\",\\"Emoji\\":\\"toot:Emoji\\",\\"Hashtag\\":\\"as:Hashtag\\"}],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Create> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Create\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Create)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Create \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Create \\" + inspect(proxy, options);
  }
  }

/** Indicates that the \`actor\` has deleted the \`object\`.  If specified,
 * the \`origin\` indicates the context from which the \`object\` was deleted.
 * 
 */
export class Delete extends Activity {

    /**
     * The type URI of {@link Delete}: \`https://www.w3.org/ns/activitystreams#Delete\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Delete\\");
    }
  
  /**
   * Constructs a new instance of Delete with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });}

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Delete {
  const clone = super.clone(values, options) as unknown as Delete;
    return clone;
  }
  
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Delete\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\"],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Delete> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Delete\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Delete)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Delete \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Delete \\" + inspect(proxy, options);
  }
  }

/** Indicates that the \`actor\` dislikes the \`object\`.
 */
export class Dislike extends Activity {

    /**
     * The type URI of {@link Dislike}: \`https://www.w3.org/ns/activitystreams#Dislike\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Dislike\\");
    }
  
  /**
   * Constructs a new instance of Dislike with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });}

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Dislike {
  const clone = super.clone(values, options) as unknown as Dislike;
    return clone;
  }
  
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Dislike\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\"],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Dislike> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Dislike\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Dislike)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Dislike \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Dislike \\" + inspect(proxy, options);
  }
  }

/** Contents of {@link Actor}'s \`endpoints\`.
 */
export class Endpoints {

    readonly #documentLoader?: DocumentLoader;
    readonly #contextLoader?: DocumentLoader;
    readonly id: URL | null;

    protected get _documentLoader(): DocumentLoader | undefined {
      return this.#documentLoader;
    }

    protected get _contextLoader(): DocumentLoader | undefined {
      return this.#contextLoader;
    }
    
    /**
     * The type URI of {@link Endpoints}: \`https://www.w3.org/ns/activitystreams#Endpoints\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Endpoints\\");
    }
  #_2JCYDbSxEHCCLdBYed33cCETfGyR: (URL)[] = [];
#_25S6UmgzDead8hxL5sQFezZTAusd: (URL)[] = [];
#_iAMxqrSba7yBCRB1FZ5kEVdKEZ3: (URL)[] = [];
#_8Bx9qN8oU7Bpt2xi6khaxWp1gMr: (URL)[] = [];
#_3dU7PMVQZJpsCpo2F4RQXxBXdPmS: (URL)[] = [];
#_3JprUSDLVqqX4dwHRi37qGZZCRCc: (URL)[] = [];

  /**
   * Constructs a new instance of Endpoints with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
proxyUrl?: URL | null;oauthAuthorizationEndpoint?: URL | null;oauthTokenEndpoint?: URL | null;provideClientKey?: URL | null;signClientKey?: URL | null;sharedInbox?: URL | null;}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  
    this.#documentLoader = documentLoader;
    this.#contextLoader = contextLoader;
    if (values.id == null || values.id instanceof URL) {
      this.id = values.id ?? null;
    } else {
      throw new TypeError(\\"The id must be a URL.\\");
    }
    
        if (\\"proxyUrl\\" in values &&             values.proxyUrl != null) {
          if (values.proxyUrl instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_2JCYDbSxEHCCLdBYed33cCETfGyR = [values.proxyUrl];
          } else {
            throw new TypeError(
              \\"The proxyUrl must be of type \\" +
              \\"URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"oauthAuthorizationEndpoint\\" in values &&             values.oauthAuthorizationEndpoint != null) {
          if (values.oauthAuthorizationEndpoint instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_25S6UmgzDead8hxL5sQFezZTAusd = [values.oauthAuthorizationEndpoint];
          } else {
            throw new TypeError(
              \\"The oauthAuthorizationEndpoint must be of type \\" +
              \\"URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"oauthTokenEndpoint\\" in values &&             values.oauthTokenEndpoint != null) {
          if (values.oauthTokenEndpoint instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_iAMxqrSba7yBCRB1FZ5kEVdKEZ3 = [values.oauthTokenEndpoint];
          } else {
            throw new TypeError(
              \\"The oauthTokenEndpoint must be of type \\" +
              \\"URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"provideClientKey\\" in values &&             values.provideClientKey != null) {
          if (values.provideClientKey instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_8Bx9qN8oU7Bpt2xi6khaxWp1gMr = [values.provideClientKey];
          } else {
            throw new TypeError(
              \\"The provideClientKey must be of type \\" +
              \\"URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"signClientKey\\" in values &&             values.signClientKey != null) {
          if (values.signClientKey instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_3dU7PMVQZJpsCpo2F4RQXxBXdPmS = [values.signClientKey];
          } else {
            throw new TypeError(
              \\"The signClientKey must be of type \\" +
              \\"URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"sharedInbox\\" in values &&             values.sharedInbox != null) {
          if (values.sharedInbox instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_3JprUSDLVqqX4dwHRi37qGZZCRCc = [values.sharedInbox];
          } else {
            throw new TypeError(
              \\"The sharedInbox must be of type \\" +
              \\"URL\\" + \\".\\",
            );
          }
        }
      }

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
proxyUrl?: URL | null;oauthAuthorizationEndpoint?: URL | null;oauthTokenEndpoint?: URL | null;provideClientKey?: URL | null;signClientKey?: URL | null;sharedInbox?: URL | null;}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Endpoints {
  
    // @ts-ignore: this.constructor is not recognized as a constructor, but it is.
    const clone: Endpoints = new this.constructor(
      { id: values.id ?? this.id },
      options
    );
    clone.#_2JCYDbSxEHCCLdBYed33cCETfGyR = this.#_2JCYDbSxEHCCLdBYed33cCETfGyR;
        if (\\"proxyUrl\\" in values &&             values.proxyUrl != null) {
          if (values.proxyUrl instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_2JCYDbSxEHCCLdBYed33cCETfGyR = [values.proxyUrl];
          } else {
            throw new TypeError(
              \\"The proxyUrl must be of type \\" +
              \\"URL\\" + \\".\\",
            );
          }
        }
      clone.#_25S6UmgzDead8hxL5sQFezZTAusd = this.#_25S6UmgzDead8hxL5sQFezZTAusd;
        if (\\"oauthAuthorizationEndpoint\\" in values &&             values.oauthAuthorizationEndpoint != null) {
          if (values.oauthAuthorizationEndpoint instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_25S6UmgzDead8hxL5sQFezZTAusd = [values.oauthAuthorizationEndpoint];
          } else {
            throw new TypeError(
              \\"The oauthAuthorizationEndpoint must be of type \\" +
              \\"URL\\" + \\".\\",
            );
          }
        }
      clone.#_iAMxqrSba7yBCRB1FZ5kEVdKEZ3 = this.#_iAMxqrSba7yBCRB1FZ5kEVdKEZ3;
        if (\\"oauthTokenEndpoint\\" in values &&             values.oauthTokenEndpoint != null) {
          if (values.oauthTokenEndpoint instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_iAMxqrSba7yBCRB1FZ5kEVdKEZ3 = [values.oauthTokenEndpoint];
          } else {
            throw new TypeError(
              \\"The oauthTokenEndpoint must be of type \\" +
              \\"URL\\" + \\".\\",
            );
          }
        }
      clone.#_8Bx9qN8oU7Bpt2xi6khaxWp1gMr = this.#_8Bx9qN8oU7Bpt2xi6khaxWp1gMr;
        if (\\"provideClientKey\\" in values &&             values.provideClientKey != null) {
          if (values.provideClientKey instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_8Bx9qN8oU7Bpt2xi6khaxWp1gMr = [values.provideClientKey];
          } else {
            throw new TypeError(
              \\"The provideClientKey must be of type \\" +
              \\"URL\\" + \\".\\",
            );
          }
        }
      clone.#_3dU7PMVQZJpsCpo2F4RQXxBXdPmS = this.#_3dU7PMVQZJpsCpo2F4RQXxBXdPmS;
        if (\\"signClientKey\\" in values &&             values.signClientKey != null) {
          if (values.signClientKey instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_3dU7PMVQZJpsCpo2F4RQXxBXdPmS = [values.signClientKey];
          } else {
            throw new TypeError(
              \\"The signClientKey must be of type \\" +
              \\"URL\\" + \\".\\",
            );
          }
        }
      clone.#_3JprUSDLVqqX4dwHRi37qGZZCRCc = this.#_3JprUSDLVqqX4dwHRi37qGZZCRCc;
        if (\\"sharedInbox\\" in values &&             values.sharedInbox != null) {
          if (values.sharedInbox instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_3JprUSDLVqqX4dwHRi37qGZZCRCc = [values.sharedInbox];
          } else {
            throw new TypeError(
              \\"The sharedInbox must be of type \\" +
              \\"URL\\" + \\".\\",
            );
          }
        }
      
    return clone;
  }
  
/** Endpoint URI so this actor's clients may access remote ActivityStreams
 * objects which require authentication to access.  To use this endpoint,
 * the client posts an \`x-www-form-urlencoded\` \`id\` parameter with the value
 * being the \`id\` of the requested ActivityStreams object.
 * 
 */
get proxyUrl(): (URL | null) {
        if (this.#_2JCYDbSxEHCCLdBYed33cCETfGyR.length < 1) return null;
        return this.#_2JCYDbSxEHCCLdBYed33cCETfGyR[0];
      }
      
/** If OAuth 2.0 bearer tokens [RFC 6749] [RFC 6750] are being used for
 * authenticating [client to server
 * interactions](https://www.w3.org/TR/activitypub/#client-to-server-interactions),
 * this endpoint specifies a URI at which a browser-authenticated user may
 * obtain a new authorization grant.
 * 
 */
get oauthAuthorizationEndpoint(): (URL | null) {
        if (this.#_25S6UmgzDead8hxL5sQFezZTAusd.length < 1) return null;
        return this.#_25S6UmgzDead8hxL5sQFezZTAusd[0];
      }
      
/** If OAuth 2.0 bearer tokens [RFC 6749] [RFC 6750] are being used for
 * authenticating [client to server
 * interactions](https://www.w3.org/TR/activitypub/#client-to-server-interactions),
 * this endpoint specifies a URI at which a client may acquire an access token.
 * 
 */
get oauthTokenEndpoint(): (URL | null) {
        if (this.#_iAMxqrSba7yBCRB1FZ5kEVdKEZ3.length < 1) return null;
        return this.#_iAMxqrSba7yBCRB1FZ5kEVdKEZ3[0];
      }
      
/** If Linked Data Signatures and HTTP Signatures are being used for
 * authentication and authorization, this endpoint specifies a URI at which
 * browser-authenticated users may authorize a client's public key for [client
 * to server interactions](https://www.w3.org/TR/activitypub/#client-to-server-interactions).
 * 
 */
get provideClientKey(): (URL | null) {
        if (this.#_8Bx9qN8oU7Bpt2xi6khaxWp1gMr.length < 1) return null;
        return this.#_8Bx9qN8oU7Bpt2xi6khaxWp1gMr[0];
      }
      
/** If Linked Data Signatures and HTTP Signatures are being used for
 * authentication and authorization, this endpoint specifies a URI at which
 * a client key may be signed by the actor's key for a time window to act on
 * behalf of the actor in interacting with foreign servers.
 * 
 */
get signClientKey(): (URL | null) {
        if (this.#_3dU7PMVQZJpsCpo2F4RQXxBXdPmS.length < 1) return null;
        return this.#_3dU7PMVQZJpsCpo2F4RQXxBXdPmS[0];
      }
      
/** An optional endpoint [used for wide delivery of publicly addressed
 * activities and activities sent to
 * followers](https://www.w3.org/TR/activitypub/#shared-inbox-delivery).
 * \`sharedInbox\` endpoints SHOULD also be publicly readable
 * {@link OrderedCollection} objects containing objects addressed to the
 * [Public](https://www.w3.org/TR/activitypub/#public-addressing) special
 * collection.  Reading from the \`sharedInbox\` endpoint MUST NOT present
 * objects which are not addressed to the \`Public\`\` endpoint.
 * 
 */
get sharedInbox(): (URL | null) {
        if (this.#_3JprUSDLVqqX4dwHRi37qGZZCRCc.length < 1) return null;
        return this.#_3JprUSDLVqqX4dwHRi37qGZZCRCc[0];
      }
      
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  const values: Record<string, unknown[] | string> = {};
    array = [];
    for (const v of this.#_2JCYDbSxEHCCLdBYed33cCETfGyR) {
      const element = (
    { \\"@id\\": v.href }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#proxyUrl\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_25S6UmgzDead8hxL5sQFezZTAusd) {
      const element = (
    { \\"@id\\": v.href }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#oauthAuthorizationEndpoint\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_iAMxqrSba7yBCRB1FZ5kEVdKEZ3) {
      const element = (
    { \\"@id\\": v.href }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#oauthTokenEndpoint\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_8Bx9qN8oU7Bpt2xi6khaxWp1gMr) {
      const element = (
    { \\"@id\\": v.href }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#provideClientKey\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3dU7PMVQZJpsCpo2F4RQXxBXdPmS) {
      const element = (
    { \\"@id\\": v.href }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#signClientKey\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3JprUSDLVqqX4dwHRi37qGZZCRCc) {
      const element = (
    { \\"@id\\": v.href }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#sharedInbox\\"] = (
    array
      );
    }
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Endpoints\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? \\"https://www.w3.org/ns/activitystreams\\",
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Endpoints> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Endpoints\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = new this(
      { id: \\"@id\\" in values ? new URL(values[\\"@id\\"] as string) : undefined },
      options,
    );
    const _2JCYDbSxEHCCLdBYed33cCETfGyR: (URL)[] = [];

    const _2JCYDbSxEHCCLdBYed33cCETfGyR__array = values[\\"https://www.w3.org/ns/activitystreams#proxyUrl\\"];
    for (
      const v of _2JCYDbSxEHCCLdBYed33cCETfGyR__array == null
        ? []
        : _2JCYDbSxEHCCLdBYed33cCETfGyR__array.length === 1 && \\"@list\\" in _2JCYDbSxEHCCLdBYed33cCETfGyR__array[0]
        ? _2JCYDbSxEHCCLdBYed33cCETfGyR__array[0][\\"@list\\"]
        : _2JCYDbSxEHCCLdBYed33cCETfGyR__array
    ) {
      if (v == null) continue;
    _2JCYDbSxEHCCLdBYed33cCETfGyR.push(new URL(v[\\"@id\\"]))
    }
    instance.#_2JCYDbSxEHCCLdBYed33cCETfGyR = _2JCYDbSxEHCCLdBYed33cCETfGyR;
    const _25S6UmgzDead8hxL5sQFezZTAusd: (URL)[] = [];

    const _25S6UmgzDead8hxL5sQFezZTAusd__array = values[\\"https://www.w3.org/ns/activitystreams#oauthAuthorizationEndpoint\\"];
    for (
      const v of _25S6UmgzDead8hxL5sQFezZTAusd__array == null
        ? []
        : _25S6UmgzDead8hxL5sQFezZTAusd__array.length === 1 && \\"@list\\" in _25S6UmgzDead8hxL5sQFezZTAusd__array[0]
        ? _25S6UmgzDead8hxL5sQFezZTAusd__array[0][\\"@list\\"]
        : _25S6UmgzDead8hxL5sQFezZTAusd__array
    ) {
      if (v == null) continue;
    _25S6UmgzDead8hxL5sQFezZTAusd.push(new URL(v[\\"@id\\"]))
    }
    instance.#_25S6UmgzDead8hxL5sQFezZTAusd = _25S6UmgzDead8hxL5sQFezZTAusd;
    const _iAMxqrSba7yBCRB1FZ5kEVdKEZ3: (URL)[] = [];

    const _iAMxqrSba7yBCRB1FZ5kEVdKEZ3__array = values[\\"https://www.w3.org/ns/activitystreams#oauthTokenEndpoint\\"];
    for (
      const v of _iAMxqrSba7yBCRB1FZ5kEVdKEZ3__array == null
        ? []
        : _iAMxqrSba7yBCRB1FZ5kEVdKEZ3__array.length === 1 && \\"@list\\" in _iAMxqrSba7yBCRB1FZ5kEVdKEZ3__array[0]
        ? _iAMxqrSba7yBCRB1FZ5kEVdKEZ3__array[0][\\"@list\\"]
        : _iAMxqrSba7yBCRB1FZ5kEVdKEZ3__array
    ) {
      if (v == null) continue;
    _iAMxqrSba7yBCRB1FZ5kEVdKEZ3.push(new URL(v[\\"@id\\"]))
    }
    instance.#_iAMxqrSba7yBCRB1FZ5kEVdKEZ3 = _iAMxqrSba7yBCRB1FZ5kEVdKEZ3;
    const _8Bx9qN8oU7Bpt2xi6khaxWp1gMr: (URL)[] = [];

    const _8Bx9qN8oU7Bpt2xi6khaxWp1gMr__array = values[\\"https://www.w3.org/ns/activitystreams#provideClientKey\\"];
    for (
      const v of _8Bx9qN8oU7Bpt2xi6khaxWp1gMr__array == null
        ? []
        : _8Bx9qN8oU7Bpt2xi6khaxWp1gMr__array.length === 1 && \\"@list\\" in _8Bx9qN8oU7Bpt2xi6khaxWp1gMr__array[0]
        ? _8Bx9qN8oU7Bpt2xi6khaxWp1gMr__array[0][\\"@list\\"]
        : _8Bx9qN8oU7Bpt2xi6khaxWp1gMr__array
    ) {
      if (v == null) continue;
    _8Bx9qN8oU7Bpt2xi6khaxWp1gMr.push(new URL(v[\\"@id\\"]))
    }
    instance.#_8Bx9qN8oU7Bpt2xi6khaxWp1gMr = _8Bx9qN8oU7Bpt2xi6khaxWp1gMr;
    const _3dU7PMVQZJpsCpo2F4RQXxBXdPmS: (URL)[] = [];

    const _3dU7PMVQZJpsCpo2F4RQXxBXdPmS__array = values[\\"https://www.w3.org/ns/activitystreams#signClientKey\\"];
    for (
      const v of _3dU7PMVQZJpsCpo2F4RQXxBXdPmS__array == null
        ? []
        : _3dU7PMVQZJpsCpo2F4RQXxBXdPmS__array.length === 1 && \\"@list\\" in _3dU7PMVQZJpsCpo2F4RQXxBXdPmS__array[0]
        ? _3dU7PMVQZJpsCpo2F4RQXxBXdPmS__array[0][\\"@list\\"]
        : _3dU7PMVQZJpsCpo2F4RQXxBXdPmS__array
    ) {
      if (v == null) continue;
    _3dU7PMVQZJpsCpo2F4RQXxBXdPmS.push(new URL(v[\\"@id\\"]))
    }
    instance.#_3dU7PMVQZJpsCpo2F4RQXxBXdPmS = _3dU7PMVQZJpsCpo2F4RQXxBXdPmS;
    const _3JprUSDLVqqX4dwHRi37qGZZCRCc: (URL)[] = [];

    const _3JprUSDLVqqX4dwHRi37qGZZCRCc__array = values[\\"https://www.w3.org/ns/activitystreams#sharedInbox\\"];
    for (
      const v of _3JprUSDLVqqX4dwHRi37qGZZCRCc__array == null
        ? []
        : _3JprUSDLVqqX4dwHRi37qGZZCRCc__array.length === 1 && \\"@list\\" in _3JprUSDLVqqX4dwHRi37qGZZCRCc__array[0]
        ? _3JprUSDLVqqX4dwHRi37qGZZCRCc__array[0][\\"@list\\"]
        : _3JprUSDLVqqX4dwHRi37qGZZCRCc__array
    ) {
      if (v == null) continue;
    _3JprUSDLVqqX4dwHRi37qGZZCRCc.push(new URL(v[\\"@id\\"]))
    }
    instance.#_3JprUSDLVqqX4dwHRi37qGZZCRCc = _3JprUSDLVqqX4dwHRi37qGZZCRCc;
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  
    const proxy: Record<string, unknown> = {};
    if (this.id != null) {
      proxy.id = {
        [Symbol.for(\\"Deno.customInspect\\")]: (
          inspect: typeof Deno.inspect,
          options: Deno.InspectOptions,
        ): string => \\"URL \\" + inspect(this.id!.href, options),
        [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
          _depth: number,
          options: unknown,
          inspect: (value: unknown, options: unknown) => string,
        ): string => \\"URL \\" + inspect(this.id!.href, options),
      };
    }
    
      const _2JCYDbSxEHCCLdBYed33cCETfGyR = this.#_2JCYDbSxEHCCLdBYed33cCETfGyR
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2JCYDbSxEHCCLdBYed33cCETfGyR.length == 1) {
        proxy.proxyUrl = _2JCYDbSxEHCCLdBYed33cCETfGyR[0];
      }
      
      const _25S6UmgzDead8hxL5sQFezZTAusd = this.#_25S6UmgzDead8hxL5sQFezZTAusd
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_25S6UmgzDead8hxL5sQFezZTAusd.length == 1) {
        proxy.oauthAuthorizationEndpoint = _25S6UmgzDead8hxL5sQFezZTAusd[0];
      }
      
      const _iAMxqrSba7yBCRB1FZ5kEVdKEZ3 = this.#_iAMxqrSba7yBCRB1FZ5kEVdKEZ3
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_iAMxqrSba7yBCRB1FZ5kEVdKEZ3.length == 1) {
        proxy.oauthTokenEndpoint = _iAMxqrSba7yBCRB1FZ5kEVdKEZ3[0];
      }
      
      const _8Bx9qN8oU7Bpt2xi6khaxWp1gMr = this.#_8Bx9qN8oU7Bpt2xi6khaxWp1gMr
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_8Bx9qN8oU7Bpt2xi6khaxWp1gMr.length == 1) {
        proxy.provideClientKey = _8Bx9qN8oU7Bpt2xi6khaxWp1gMr[0];
      }
      
      const _3dU7PMVQZJpsCpo2F4RQXxBXdPmS = this.#_3dU7PMVQZJpsCpo2F4RQXxBXdPmS
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3dU7PMVQZJpsCpo2F4RQXxBXdPmS.length == 1) {
        proxy.signClientKey = _3dU7PMVQZJpsCpo2F4RQXxBXdPmS[0];
      }
      
      const _3JprUSDLVqqX4dwHRi37qGZZCRCc = this.#_3JprUSDLVqqX4dwHRi37qGZZCRCc
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3JprUSDLVqqX4dwHRi37qGZZCRCc.length == 1) {
        proxy.sharedInbox = _3JprUSDLVqqX4dwHRi37qGZZCRCc[0];
      }
      
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Endpoints \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Endpoints \\" + inspect(proxy, options);
  }
  }

/** Represents any kind of event.
 */
export class Event extends Object {

    /**
     * The type URI of {@link Event}: \`https://www.w3.org/ns/activitystreams#Event\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Event\\");
    }
  
  /**
   * Constructs a new instance of Event with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });}

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Event {
  const clone = super.clone(values, options) as unknown as Event;
    return clone;
  }
  
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Event\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\"],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Event> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Event\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Event)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Event \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Event \\" + inspect(proxy, options);
  }
  }

/** Indicates that the \`actor\` is \\"flagging\\" the \`object\`.  Flagging is defined
 * in the sense common to many social platforms as reporting content as being
 * inappropriate for any number of reasons.
 * 
 */
export class Flag extends Activity {

    /**
     * The type URI of {@link Flag}: \`https://www.w3.org/ns/activitystreams#Flag\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Flag\\");
    }
  
  /**
   * Constructs a new instance of Flag with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });}

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Flag {
  const clone = super.clone(values, options) as unknown as Flag;
    return clone;
  }
  
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Flag\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\"],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Flag> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Flag\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Flag)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Flag \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Flag \\" + inspect(proxy, options);
  }
  }

/** Indicates that the \`actor\` is \\"following\\" the \`object\`.  Following is defined
 * in the sense typically used within Social systems in which the actor is
 * interested in any activity performed by or on the object.  The \`target\` and
 * \`origin\` typically have no defined meaning.
 * 
 */
export class Follow extends Activity {

    /**
     * The type URI of {@link Follow}: \`https://www.w3.org/ns/activitystreams#Follow\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Follow\\");
    }
  
  /**
   * Constructs a new instance of Follow with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });}

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Follow {
  const clone = super.clone(values, options) as unknown as Follow;
    return clone;
  }
  
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Follow\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\"],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Follow> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Follow\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Follow)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Follow \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Follow \\" + inspect(proxy, options);
  }
  }

/** Represents a formal or informal collective of Actors.
 */
export class Group extends Object {

    /**
     * The type URI of {@link Group}: \`https://www.w3.org/ns/activitystreams#Group\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Group\\");
    }
  #_3isuDgRAKSntq9XdbjiNxjwyPZAf: ((string | LanguageString))[] = [];
#_axq166E2eZADq34V4MYUc8KMZdC: (CryptographicKey | URL)[] = [];
#_4EHQFWZSz1k1d4LmPrQiMba2GbP3: (Multikey | URL)[] = [];
#_36QNc9MxfkKf6h8sEUQSHnV9NZA: (boolean)[] = [];
#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB: (OrderedCollection | URL)[] = [];
#_41QwhqJouoLg3h8dRPKat21brynC: (OrderedCollection | URL)[] = [];
#_3yAv8jymNfNuJUDuBzJ1NQhdbAee: (Collection | URL)[] = [];
#_BBCTgfphhsFzpVfKTykGSpBNwoA: (Collection | URL)[] = [];
#_3bgkPwJanyTCoVFM9ovRcus8tKkU: (Collection | URL)[] = [];
#_4N1vBJzXDf8NbBumeECQMFvKetja: (Collection | URL)[] = [];
#_2MxnRRLq9iPzx5CFq2NPrXdUDCac: (Collection | URL)[] = [];
#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9: (Collection | URL)[] = [];
#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG: (Endpoints)[] = [];
#_gAJzg1QDc4rcefFsUzGSYmyXvNH: (boolean)[] = [];
#_2kGKkJtoFWg8c18PaVSqj9NKP4t7: (boolean)[] = [];
#_79S8K4f5J9MWUgCxziRyUe6PTHZ: (boolean)[] = [];
#_2diCorzqPGQQqftp6e4SrCEwEnyk: (boolean)[] = [];

  /**
   * Constructs a new instance of Group with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];preferredUsername?: string | LanguageString | null;
preferredUsernames?: ((string | LanguageString))[];publicKey?: CryptographicKey | URL | null;
publicKeys?: (CryptographicKey | URL)[];assertionMethod?: Multikey | URL | null;
assertionMethods?: (Multikey | URL)[];manuallyApprovesFollowers?: boolean | null;inbox?: OrderedCollection | URL | null;outbox?: OrderedCollection | URL | null;following?: Collection | URL | null;followers?: Collection | URL | null;liked?: Collection | URL | null;featured?: Collection | URL | null;featuredTags?: Collection | URL | null;streams?: (Collection | URL)[];endpoints?: Endpoints | null;discoverable?: boolean | null;suspended?: boolean | null;memorial?: boolean | null;indexable?: boolean | null;}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });
        if (\\"preferredUsername\\" in values &&             values.preferredUsername != null) {
          if (typeof values.preferredUsername === \\"string\\" || values.preferredUsername instanceof LanguageString) {
            // @ts-ignore: type is checked above.
            this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf = [values.preferredUsername];
          } else {
            throw new TypeError(
              \\"The preferredUsername must be of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      
        if (\\"preferredUsernames\\" in values &&             values.preferredUsernames != null) {
      
          if (\\"preferredUsername\\" in values &&
              values.preferredUsername != null) {
            throw new TypeError(
              \\"Cannot initialize both preferredUsername and \\" +
                \\"preferredUsernames at the same time.\\",
            );
          }
        
          if (Array.isArray(values.preferredUsernames) &&
              values.preferredUsernames.every(v => typeof v === \\"string\\" || v instanceof LanguageString)) {
            // @ts-ignore: type is checked above.
            this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf = values.preferredUsernames;
          } else {
            throw new TypeError(
              \\"The preferredUsernames must be an array of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      
        if (\\"publicKey\\" in values &&             values.publicKey != null) {
          if (values.publicKey instanceof CryptographicKey || values.publicKey instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_axq166E2eZADq34V4MYUc8KMZdC = [values.publicKey];
          } else {
            throw new TypeError(
              \\"The publicKey must be of type \\" +
              \\"CryptographicKey | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"publicKeys\\" in values &&             values.publicKeys != null) {
      
          if (\\"publicKey\\" in values &&
              values.publicKey != null) {
            throw new TypeError(
              \\"Cannot initialize both publicKey and \\" +
                \\"publicKeys at the same time.\\",
            );
          }
        
          if (Array.isArray(values.publicKeys) &&
              values.publicKeys.every(v => v instanceof CryptographicKey || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_axq166E2eZADq34V4MYUc8KMZdC = values.publicKeys;
          } else {
            throw new TypeError(
              \\"The publicKeys must be an array of type \\" +
              \\"CryptographicKey | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"assertionMethod\\" in values &&             values.assertionMethod != null) {
          if (values.assertionMethod instanceof Multikey || values.assertionMethod instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3 = [values.assertionMethod];
          } else {
            throw new TypeError(
              \\"The assertionMethod must be of type \\" +
              \\"Multikey | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"assertionMethods\\" in values &&             values.assertionMethods != null) {
      
          if (\\"assertionMethod\\" in values &&
              values.assertionMethod != null) {
            throw new TypeError(
              \\"Cannot initialize both assertionMethod and \\" +
                \\"assertionMethods at the same time.\\",
            );
          }
        
          if (Array.isArray(values.assertionMethods) &&
              values.assertionMethods.every(v => v instanceof Multikey || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3 = values.assertionMethods;
          } else {
            throw new TypeError(
              \\"The assertionMethods must be an array of type \\" +
              \\"Multikey | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"manuallyApprovesFollowers\\" in values &&             values.manuallyApprovesFollowers != null) {
          if (typeof values.manuallyApprovesFollowers === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            this.#_36QNc9MxfkKf6h8sEUQSHnV9NZA = [values.manuallyApprovesFollowers];
          } else {
            throw new TypeError(
              \\"The manuallyApprovesFollowers must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      
        if (\\"inbox\\" in values &&             values.inbox != null) {
          if (values.inbox instanceof OrderedCollection || values.inbox instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB = [values.inbox];
          } else {
            throw new TypeError(
              \\"The inbox must be of type \\" +
              \\"OrderedCollection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"outbox\\" in values &&             values.outbox != null) {
          if (values.outbox instanceof OrderedCollection || values.outbox instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_41QwhqJouoLg3h8dRPKat21brynC = [values.outbox];
          } else {
            throw new TypeError(
              \\"The outbox must be of type \\" +
              \\"OrderedCollection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"following\\" in values &&             values.following != null) {
          if (values.following instanceof Collection || values.following instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee = [values.following];
          } else {
            throw new TypeError(
              \\"The following must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"followers\\" in values &&             values.followers != null) {
          if (values.followers instanceof Collection || values.followers instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_BBCTgfphhsFzpVfKTykGSpBNwoA = [values.followers];
          } else {
            throw new TypeError(
              \\"The followers must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"liked\\" in values &&             values.liked != null) {
          if (values.liked instanceof Collection || values.liked instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU = [values.liked];
          } else {
            throw new TypeError(
              \\"The liked must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"featured\\" in values &&             values.featured != null) {
          if (values.featured instanceof Collection || values.featured instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_4N1vBJzXDf8NbBumeECQMFvKetja = [values.featured];
          } else {
            throw new TypeError(
              \\"The featured must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"featuredTags\\" in values &&             values.featuredTags != null) {
          if (values.featuredTags instanceof Collection || values.featuredTags instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac = [values.featuredTags];
          } else {
            throw new TypeError(
              \\"The featuredTags must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"streams\\" in values &&             values.streams != null) {
      
          if (Array.isArray(values.streams) &&
              values.streams.every(v => v instanceof Collection || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9 = values.streams;
          } else {
            throw new TypeError(
              \\"The streams must be an array of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"endpoints\\" in values &&             values.endpoints != null) {
          if (values.endpoints instanceof Endpoints) {
            // @ts-ignore: type is checked above.
            this.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG = [values.endpoints];
          } else {
            throw new TypeError(
              \\"The endpoints must be of type \\" +
              \\"Endpoints\\" + \\".\\",
            );
          }
        }
      
        if (\\"discoverable\\" in values &&             values.discoverable != null) {
          if (typeof values.discoverable === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            this.#_gAJzg1QDc4rcefFsUzGSYmyXvNH = [values.discoverable];
          } else {
            throw new TypeError(
              \\"The discoverable must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      
        if (\\"suspended\\" in values &&             values.suspended != null) {
          if (typeof values.suspended === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            this.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7 = [values.suspended];
          } else {
            throw new TypeError(
              \\"The suspended must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      
        if (\\"memorial\\" in values &&             values.memorial != null) {
          if (typeof values.memorial === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            this.#_79S8K4f5J9MWUgCxziRyUe6PTHZ = [values.memorial];
          } else {
            throw new TypeError(
              \\"The memorial must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      
        if (\\"indexable\\" in values &&             values.indexable != null) {
          if (typeof values.indexable === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            this.#_2diCorzqPGQQqftp6e4SrCEwEnyk = [values.indexable];
          } else {
            throw new TypeError(
              \\"The indexable must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      }

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];preferredUsername?: string | LanguageString | null;
preferredUsernames?: ((string | LanguageString))[];publicKey?: CryptographicKey | URL | null;
publicKeys?: (CryptographicKey | URL)[];assertionMethod?: Multikey | URL | null;
assertionMethods?: (Multikey | URL)[];manuallyApprovesFollowers?: boolean | null;inbox?: OrderedCollection | URL | null;outbox?: OrderedCollection | URL | null;following?: Collection | URL | null;followers?: Collection | URL | null;liked?: Collection | URL | null;featured?: Collection | URL | null;featuredTags?: Collection | URL | null;streams?: (Collection | URL)[];endpoints?: Endpoints | null;discoverable?: boolean | null;suspended?: boolean | null;memorial?: boolean | null;indexable?: boolean | null;}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Group {
  const clone = super.clone(values, options) as unknown as Group;clone.#_3isuDgRAKSntq9XdbjiNxjwyPZAf = this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf;
        if (\\"preferredUsername\\" in values &&             values.preferredUsername != null) {
          if (typeof values.preferredUsername === \\"string\\" || values.preferredUsername instanceof LanguageString) {
            // @ts-ignore: type is checked above.
            clone.#_3isuDgRAKSntq9XdbjiNxjwyPZAf = [values.preferredUsername];
          } else {
            throw new TypeError(
              \\"The preferredUsername must be of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      
        if (\\"preferredUsernames\\" in values &&             values.preferredUsernames != null) {
      
          if (\\"preferredUsername\\" in values &&
              values.preferredUsername != null) {
            throw new TypeError(
              \\"Cannot update both preferredUsername and \\" +
                \\"preferredUsernames at the same time.\\",
            );
          }
        
          if (Array.isArray(values.preferredUsernames) &&
              values.preferredUsernames.every(v => typeof v === \\"string\\" || v instanceof LanguageString)) {
            // @ts-ignore: type is checked above.
            clone.#_3isuDgRAKSntq9XdbjiNxjwyPZAf = values.preferredUsernames;
          } else {
            throw new TypeError(
              \\"The preferredUsernames must be an array of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      clone.#_axq166E2eZADq34V4MYUc8KMZdC = this.#_axq166E2eZADq34V4MYUc8KMZdC;
        if (\\"publicKey\\" in values &&             values.publicKey != null) {
          if (values.publicKey instanceof CryptographicKey || values.publicKey instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_axq166E2eZADq34V4MYUc8KMZdC = [values.publicKey];
          } else {
            throw new TypeError(
              \\"The publicKey must be of type \\" +
              \\"CryptographicKey | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"publicKeys\\" in values &&             values.publicKeys != null) {
      
          if (\\"publicKey\\" in values &&
              values.publicKey != null) {
            throw new TypeError(
              \\"Cannot update both publicKey and \\" +
                \\"publicKeys at the same time.\\",
            );
          }
        
          if (Array.isArray(values.publicKeys) &&
              values.publicKeys.every(v => v instanceof CryptographicKey || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_axq166E2eZADq34V4MYUc8KMZdC = values.publicKeys;
          } else {
            throw new TypeError(
              \\"The publicKeys must be an array of type \\" +
              \\"CryptographicKey | URL\\" + \\".\\",
            );
          }
        }
      clone.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3 = this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3;
        if (\\"assertionMethod\\" in values &&             values.assertionMethod != null) {
          if (values.assertionMethod instanceof Multikey || values.assertionMethod instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3 = [values.assertionMethod];
          } else {
            throw new TypeError(
              \\"The assertionMethod must be of type \\" +
              \\"Multikey | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"assertionMethods\\" in values &&             values.assertionMethods != null) {
      
          if (\\"assertionMethod\\" in values &&
              values.assertionMethod != null) {
            throw new TypeError(
              \\"Cannot update both assertionMethod and \\" +
                \\"assertionMethods at the same time.\\",
            );
          }
        
          if (Array.isArray(values.assertionMethods) &&
              values.assertionMethods.every(v => v instanceof Multikey || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3 = values.assertionMethods;
          } else {
            throw new TypeError(
              \\"The assertionMethods must be an array of type \\" +
              \\"Multikey | URL\\" + \\".\\",
            );
          }
        }
      clone.#_36QNc9MxfkKf6h8sEUQSHnV9NZA = this.#_36QNc9MxfkKf6h8sEUQSHnV9NZA;
        if (\\"manuallyApprovesFollowers\\" in values &&             values.manuallyApprovesFollowers != null) {
          if (typeof values.manuallyApprovesFollowers === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            clone.#_36QNc9MxfkKf6h8sEUQSHnV9NZA = [values.manuallyApprovesFollowers];
          } else {
            throw new TypeError(
              \\"The manuallyApprovesFollowers must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      clone.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB = this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB;
        if (\\"inbox\\" in values &&             values.inbox != null) {
          if (values.inbox instanceof OrderedCollection || values.inbox instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB = [values.inbox];
          } else {
            throw new TypeError(
              \\"The inbox must be of type \\" +
              \\"OrderedCollection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_41QwhqJouoLg3h8dRPKat21brynC = this.#_41QwhqJouoLg3h8dRPKat21brynC;
        if (\\"outbox\\" in values &&             values.outbox != null) {
          if (values.outbox instanceof OrderedCollection || values.outbox instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_41QwhqJouoLg3h8dRPKat21brynC = [values.outbox];
          } else {
            throw new TypeError(
              \\"The outbox must be of type \\" +
              \\"OrderedCollection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee = this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee;
        if (\\"following\\" in values &&             values.following != null) {
          if (values.following instanceof Collection || values.following instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee = [values.following];
          } else {
            throw new TypeError(
              \\"The following must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_BBCTgfphhsFzpVfKTykGSpBNwoA = this.#_BBCTgfphhsFzpVfKTykGSpBNwoA;
        if (\\"followers\\" in values &&             values.followers != null) {
          if (values.followers instanceof Collection || values.followers instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_BBCTgfphhsFzpVfKTykGSpBNwoA = [values.followers];
          } else {
            throw new TypeError(
              \\"The followers must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_3bgkPwJanyTCoVFM9ovRcus8tKkU = this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU;
        if (\\"liked\\" in values &&             values.liked != null) {
          if (values.liked instanceof Collection || values.liked instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_3bgkPwJanyTCoVFM9ovRcus8tKkU = [values.liked];
          } else {
            throw new TypeError(
              \\"The liked must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_4N1vBJzXDf8NbBumeECQMFvKetja = this.#_4N1vBJzXDf8NbBumeECQMFvKetja;
        if (\\"featured\\" in values &&             values.featured != null) {
          if (values.featured instanceof Collection || values.featured instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_4N1vBJzXDf8NbBumeECQMFvKetja = [values.featured];
          } else {
            throw new TypeError(
              \\"The featured must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac = this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac;
        if (\\"featuredTags\\" in values &&             values.featuredTags != null) {
          if (values.featuredTags instanceof Collection || values.featuredTags instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac = [values.featuredTags];
          } else {
            throw new TypeError(
              \\"The featuredTags must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9 = this.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9;
        if (\\"streams\\" in values &&             values.streams != null) {
      
          if (Array.isArray(values.streams) &&
              values.streams.every(v => v instanceof Collection || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9 = values.streams;
          } else {
            throw new TypeError(
              \\"The streams must be an array of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG = this.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG;
        if (\\"endpoints\\" in values &&             values.endpoints != null) {
          if (values.endpoints instanceof Endpoints) {
            // @ts-ignore: type is checked above.
            clone.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG = [values.endpoints];
          } else {
            throw new TypeError(
              \\"The endpoints must be of type \\" +
              \\"Endpoints\\" + \\".\\",
            );
          }
        }
      clone.#_gAJzg1QDc4rcefFsUzGSYmyXvNH = this.#_gAJzg1QDc4rcefFsUzGSYmyXvNH;
        if (\\"discoverable\\" in values &&             values.discoverable != null) {
          if (typeof values.discoverable === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            clone.#_gAJzg1QDc4rcefFsUzGSYmyXvNH = [values.discoverable];
          } else {
            throw new TypeError(
              \\"The discoverable must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      clone.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7 = this.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7;
        if (\\"suspended\\" in values &&             values.suspended != null) {
          if (typeof values.suspended === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            clone.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7 = [values.suspended];
          } else {
            throw new TypeError(
              \\"The suspended must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      clone.#_79S8K4f5J9MWUgCxziRyUe6PTHZ = this.#_79S8K4f5J9MWUgCxziRyUe6PTHZ;
        if (\\"memorial\\" in values &&             values.memorial != null) {
          if (typeof values.memorial === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            clone.#_79S8K4f5J9MWUgCxziRyUe6PTHZ = [values.memorial];
          } else {
            throw new TypeError(
              \\"The memorial must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      clone.#_2diCorzqPGQQqftp6e4SrCEwEnyk = this.#_2diCorzqPGQQqftp6e4SrCEwEnyk;
        if (\\"indexable\\" in values &&             values.indexable != null) {
          if (typeof values.indexable === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            clone.#_2diCorzqPGQQqftp6e4SrCEwEnyk = [values.indexable];
          } else {
            throw new TypeError(
              \\"The indexable must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      
    return clone;
  }
  
/** A short username which may be used to refer to the actor,
 * with no uniqueness guarantees.
 * 
 */
get preferredUsername(): (string | LanguageString | null) {
        if (this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf.length < 1) return null;
        return this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf[0];
      }
      
/** A short username which may be used to refer to the actor,
 * with no uniqueness guarantees.
 * 
 */
get preferredUsernames(): ((string | LanguageString))[] {
        return this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf;
      }
      
    async #fetchPublicKey(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<CryptographicKey | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await CryptographicKey.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://w3id.org/security#Key\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Group.getPublicKey},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get publicKeyId(): URL | null {
        if (this.#_axq166E2eZADq34V4MYUc8KMZdC.length < 1) return null;
        const v = this.#_axq166E2eZADq34V4MYUc8KMZdC[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** A public part of the key pair owned by this actor.
 */

      async getPublicKey(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<CryptographicKey | null> {
        if (this.#_axq166E2eZADq34V4MYUc8KMZdC.length < 1) return null;
        const v = this.#_axq166E2eZADq34V4MYUc8KMZdC[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchPublicKey(v, options);
          if (fetched == null) return null;
          this.#_axq166E2eZADq34V4MYUc8KMZdC[0] = fetched;
          return fetched;
        }
        return v;
      }
      
      /**
       * Similar to
       * {@link Group.getPublicKeys},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get publicKeyIds(): URL[] {
        return this.#_axq166E2eZADq34V4MYUc8KMZdC.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** A public part of the key pair owned by this actor.
 */

      async* getPublicKeys(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<CryptographicKey> {
        const vs = this.#_axq166E2eZADq34V4MYUc8KMZdC;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchPublicKey(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
    async #fetchAssertionMethod(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Multikey | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Multikey.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://w3id.org/security#Multikey\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Group.getAssertionMethod},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get assertionMethodId(): URL | null {
        if (this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3.length < 1) return null;
        const v = this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** Represents this actor's public keys.  It serves as equivalent to
 * the \`publicKeys\` property, but is used for [FEP-521a] compliance.
 * 
 * [FEP-521a]: https://codeberg.org/fediverse/fep/src/branch/main/fep/521a/fep-521a.md
 * 
 */

      async getAssertionMethod(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Multikey | null> {
        if (this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3.length < 1) return null;
        const v = this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchAssertionMethod(v, options);
          if (fetched == null) return null;
          this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3[0] = fetched;
          return fetched;
        }
        return v;
      }
      
      /**
       * Similar to
       * {@link Group.getAssertionMethods},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get assertionMethodIds(): URL[] {
        return this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** Represents this actor's public keys.  It serves as equivalent to
 * the \`publicKeys\` property, but is used for [FEP-521a] compliance.
 * 
 * [FEP-521a]: https://codeberg.org/fediverse/fep/src/branch/main/fep/521a/fep-521a.md
 * 
 */

      async* getAssertionMethods(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Multikey> {
        const vs = this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchAssertionMethod(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
/** When \`true\`, conveys that for this actor, follow requests are not usually
 * automatically approved, but instead are examined by a person who may accept
 * or reject the request, at some time in the future.  Setting of \`false\`
 * conveys no information and may be ignored.  This information is typically
 * used to affect display of accounts, such as showing an account as private or
 * locked.
 * 
 */
get manuallyApprovesFollowers(): (boolean | null) {
        if (this.#_36QNc9MxfkKf6h8sEUQSHnV9NZA.length < 1) return null;
        return this.#_36QNc9MxfkKf6h8sEUQSHnV9NZA[0];
      }
      
    async #fetchInbox(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<OrderedCollection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await OrderedCollection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#OrderedCollection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Group.getInbox},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get inboxId(): URL | null {
        if (this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB.length < 1) return null;
        const v = this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** The inbox stream contains all activities received by the actor.  The server
 * SHOULD filter content according to the requester's permission.  In general,
 * the owner of an inbox is likely to be able to access all of their inbox
 * contents.  Depending on access control, some other content may be public,
 * whereas other content may require authentication for non-owner users,
 * if they can access the inbox at all.
 * 
 * The server MUST perform de-duplication of activities returned by the inbox.
 * Duplication can occur if an activity is addressed both to an actor's
 * followers, and a specific actor who also follows the recipient actor,
 * and the server has failed to de-duplicate the recipients list.
 * Such deduplication MUST be performed by comparing the \`id\` of the activities
 * and dropping any activities already seen.
 * 
 */

      async getInbox(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<OrderedCollection | null> {
        if (this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB.length < 1) return null;
        const v = this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchInbox(v, options);
          if (fetched == null) return null;
          this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchOutbox(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<OrderedCollection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await OrderedCollection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#OrderedCollection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Group.getOutbox},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get outboxId(): URL | null {
        if (this.#_41QwhqJouoLg3h8dRPKat21brynC.length < 1) return null;
        const v = this.#_41QwhqJouoLg3h8dRPKat21brynC[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** The outbox stream contains activities the user has published,
 * subject to the ability of the requestor to retrieve the activity
 * (that is, the contents of the outbox are filtered by the permissions of
 * the person reading it).  If a user submits a request without
 * [Authorization](https://www.w3.org/TR/activitypub/#authorization)
 * the server should respond with all of the
 * [Public](https://www.w3.org/TR/activitypub/#public-addressing) posts.
 * This could potentially be all relevant objects published by the user,
 * though the number of available items is left to the discretion of those
 * implementing and deploying the server.
 * 
 */

      async getOutbox(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<OrderedCollection | null> {
        if (this.#_41QwhqJouoLg3h8dRPKat21brynC.length < 1) return null;
        const v = this.#_41QwhqJouoLg3h8dRPKat21brynC[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchOutbox(v, options);
          if (fetched == null) return null;
          this.#_41QwhqJouoLg3h8dRPKat21brynC[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchFollowing(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Collection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Collection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Collection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Group.getFollowing},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get followingId(): URL | null {
        if (this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee.length < 1) return null;
        const v = this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** This is a list of everybody that the actor has followed, added as a
 * [side effect](https://www.w3.org/TR/activitypub/#follow-activity-outbox).
 * The \`following\` collection MUST be either an {@link OrderedCollection}
 * or a {@link Collection} and MAY be filtered on privileges of
 * an authenticated user or as appropriate when no authentication is given.
 * 
 */

      async getFollowing(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Collection | null> {
        if (this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee.length < 1) return null;
        const v = this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchFollowing(v, options);
          if (fetched == null) return null;
          this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchFollowers(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Collection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Collection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Collection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Group.getFollowers},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get followersId(): URL | null {
        if (this.#_BBCTgfphhsFzpVfKTykGSpBNwoA.length < 1) return null;
        const v = this.#_BBCTgfphhsFzpVfKTykGSpBNwoA[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** This is a list of everyone who has sent a {@link Follow} activity
 * for the actor, added as a
 * [side effect](https://www.w3.org/TR/activitypub/#follow-activity-outbox).
 * This is where one would find a list of all the actors that are following
 * the actor.  The \`followers\` collection MUST be either
 * an {@link OrderedCollection} or a {@link Collection} and MAY be filtered on
 * privileges of an authenticated user or as appropriate when no authentication
 * is given.
 * 
 */

      async getFollowers(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Collection | null> {
        if (this.#_BBCTgfphhsFzpVfKTykGSpBNwoA.length < 1) return null;
        const v = this.#_BBCTgfphhsFzpVfKTykGSpBNwoA[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchFollowers(v, options);
          if (fetched == null) return null;
          this.#_BBCTgfphhsFzpVfKTykGSpBNwoA[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchLiked(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Collection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Collection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Collection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Group.getLiked},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get likedId(): URL | null {
        if (this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU.length < 1) return null;
        const v = this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** This is a list of every object from all of the actor's {@link Like}
 * activities, added as a
 * [side effect](https://www.w3.org/TR/activitypub/#like-activity-outbox).
 * The \`liked\` collection MUST be either an {@link OrderedCollection} or
 * a {@link Collection} and MAY be filtered on privileges of an authenticated
 * user or as appropriate when no authentication is given.
 * 
 */

      async getLiked(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Collection | null> {
        if (this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU.length < 1) return null;
        const v = this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchLiked(v, options);
          if (fetched == null) return null;
          this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchFeatured(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Collection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Collection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Collection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Group.getFeatured},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get featuredId(): URL | null {
        if (this.#_4N1vBJzXDf8NbBumeECQMFvKetja.length < 1) return null;
        const v = this.#_4N1vBJzXDf8NbBumeECQMFvKetja[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** What is known in Mastodon as \\"pinned statuses\\", or statuses that are always
 * featured at the top of people's profiles, is implemented using an extra
 * property \`featured\` on the actor object that points to a {@link Collection}
 * of objects.
 * 
 */

      async getFeatured(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Collection | null> {
        if (this.#_4N1vBJzXDf8NbBumeECQMFvKetja.length < 1) return null;
        const v = this.#_4N1vBJzXDf8NbBumeECQMFvKetja[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchFeatured(v, options);
          if (fetched == null) return null;
          this.#_4N1vBJzXDf8NbBumeECQMFvKetja[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchFeaturedTags(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Collection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Collection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Collection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Group.getFeaturedTags},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get featuredTagsId(): URL | null {
        if (this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac.length < 1) return null;
        const v = this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** What is known in Mastodon as \\"featured hashtags\\", hashtags that are featured
 * at people's profiles, is implemented using an extra property \`featuredTags\`
 * on the actor object that points to a {@link Collection} of {@link Hashtag}
 * objects specifically.
 * 
 */

      async getFeaturedTags(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Collection | null> {
        if (this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac.length < 1) return null;
        const v = this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchFeaturedTags(v, options);
          if (fetched == null) return null;
          this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchStream(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Collection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Collection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Collection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Group.getStreams},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get streamIds(): URL[] {
        return this.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** A list of supplementary Collections which may be of interest.
 * 
 */

      async* getStreams(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Collection> {
        const vs = this.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchStream(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
/** A JSON object which maps additional (typically server/domain-wide) endpoints
 * which may be useful either for this actor or someone referencing this actor.
 * This mapping may be nested inside the actor document as the value or may be
 * a link to a JSON-LD document with these properties.
 * 
 */
get endpoints(): (Endpoints | null) {
        if (this.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG.length < 1) return null;
        return this.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG[0];
      }
      
/** Allows users to opt-in or opt-out of discoverability features like
 * the profile directory.  This flag may also be used as an indicator of
 * the user's preferences toward being included in external discovery services,
 * such as search engines or other indexing tools.
 * 
 */
get discoverable(): (boolean | null) {
        if (this.#_gAJzg1QDc4rcefFsUzGSYmyXvNH.length < 1) return null;
        return this.#_gAJzg1QDc4rcefFsUzGSYmyXvNH[0];
      }
      
/** Reports whether a user was locally suspended, for better handling of
 * these accounts.
 * 
 */
get suspended(): (boolean | null) {
        if (this.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7.length < 1) return null;
        return this.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7[0];
      }
      
/** Whether the actor is in-memorial state.
 */
get memorial(): (boolean | null) {
        if (this.#_79S8K4f5J9MWUgCxziRyUe6PTHZ.length < 1) return null;
        return this.#_79S8K4f5J9MWUgCxziRyUe6PTHZ[0];
      }
      
/** Whether the actor allows to be indexed.
 */
get indexable(): (boolean | null) {
        if (this.#_2diCorzqPGQQqftp6e4SrCEwEnyk.length < 1) return null;
        return this.#_2diCorzqPGQQqftp6e4SrCEwEnyk[0];
      }
      
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    array = [];
    for (const v of this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf) {
      const element = (
    typeof v === \\"string\\" ? { \\"@value\\": v } : {
        \\"@value\\": v.toString(),
        \\"@language\\": v.language.compact(),
      }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#preferredUsername\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_axq166E2eZADq34V4MYUc8KMZdC) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://w3id.org/security#publicKey\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://w3id.org/security#assertionMethod\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_36QNc9MxfkKf6h8sEUQSHnV9NZA) {
      const element = (
    { \\"@value\\": v }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#manuallyApprovesFollowers\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://www.w3.org/ns/ldp#inbox\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_41QwhqJouoLg3h8dRPKat21brynC) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#outbox\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#following\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_BBCTgfphhsFzpVfKTykGSpBNwoA) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#followers\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#liked\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_4N1vBJzXDf8NbBumeECQMFvKetja) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://joinmastodon.org/ns#featured\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://joinmastodon.org/ns#featuredTags\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#streams\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG) {
      const element = (
    await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#endpoints\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_gAJzg1QDc4rcefFsUzGSYmyXvNH) {
      const element = (
    { \\"@value\\": v }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://joinmastodon.org/ns#discoverable\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7) {
      const element = (
    { \\"@value\\": v }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://joinmastodon.org/ns#suspended\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_79S8K4f5J9MWUgCxziRyUe6PTHZ) {
      const element = (
    { \\"@value\\": v }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://joinmastodon.org/ns#memorial\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_2diCorzqPGQQqftp6e4SrCEwEnyk) {
      const element = (
    { \\"@value\\": v }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://joinmastodon.org/ns#indexable\\"] = (
    array
      );
    }
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Group\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/v1\\",\\"https://w3id.org/security/data-integrity/v1\\",\\"https://www.w3.org/ns/did/v1\\",\\"https://w3id.org/security/multikey/v1\\",{\\"manuallyApprovesFollowers\\":\\"as:manuallyApprovesFollowers\\",\\"toot\\":\\"http://joinmastodon.org/ns#\\",\\"featured\\":{\\"@id\\":\\"toot:featured\\",\\"@type\\":\\"@id\\"},\\"featuredTags\\":{\\"@id\\":\\"toot:featuredTags\\",\\"@type\\":\\"@id\\"},\\"discoverable\\":\\"toot:discoverable\\",\\"suspended\\":\\"toot:suspended\\",\\"memorial\\":\\"toot:memorial\\",\\"indexable\\":\\"toot:indexable\\",\\"schema\\":\\"http://schema.org#\\",\\"PropertyValue\\":\\"schema:PropertyValue\\",\\"value\\":\\"schema:value\\"}],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Group> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Group\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Group)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    const _3isuDgRAKSntq9XdbjiNxjwyPZAf: ((string | LanguageString))[] = [];

    const _3isuDgRAKSntq9XdbjiNxjwyPZAf__array = values[\\"https://www.w3.org/ns/activitystreams#preferredUsername\\"];
    for (
      const v of _3isuDgRAKSntq9XdbjiNxjwyPZAf__array == null
        ? []
        : _3isuDgRAKSntq9XdbjiNxjwyPZAf__array.length === 1 && \\"@list\\" in _3isuDgRAKSntq9XdbjiNxjwyPZAf__array[0]
        ? _3isuDgRAKSntq9XdbjiNxjwyPZAf__array[0][\\"@list\\"]
        : _3isuDgRAKSntq9XdbjiNxjwyPZAf__array
    ) {
      if (v == null) continue;
    
      const decoded =
      typeof v === \\"object\\" && \\"@value\\" in v
        && typeof v[\\"@value\\"] === \\"string\\" && !(\\"@language\\" in v) ? v[\\"@value\\"] : typeof v === \\"object\\" && \\"@language\\" in v && \\"@value\\" in v
        && typeof v[\\"@language\\"] === \\"string\\"
        && typeof v[\\"@value\\"] === \\"string\\" ? new LanguageString(v[\\"@value\\"], v[\\"@language\\"]) : undefined
      ;
      if (typeof decoded === \\"undefined\\") continue;
      _3isuDgRAKSntq9XdbjiNxjwyPZAf.push(decoded);
      
    }
    instance.#_3isuDgRAKSntq9XdbjiNxjwyPZAf = _3isuDgRAKSntq9XdbjiNxjwyPZAf;
    const _axq166E2eZADq34V4MYUc8KMZdC: (CryptographicKey | URL)[] = [];

    const _axq166E2eZADq34V4MYUc8KMZdC__array = values[\\"https://w3id.org/security#publicKey\\"];
    for (
      const v of _axq166E2eZADq34V4MYUc8KMZdC__array == null
        ? []
        : _axq166E2eZADq34V4MYUc8KMZdC__array.length === 1 && \\"@list\\" in _axq166E2eZADq34V4MYUc8KMZdC__array[0]
        ? _axq166E2eZADq34V4MYUc8KMZdC__array[0][\\"@list\\"]
        : _axq166E2eZADq34V4MYUc8KMZdC__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _axq166E2eZADq34V4MYUc8KMZdC.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _axq166E2eZADq34V4MYUc8KMZdC.push(await CryptographicKey.fromJsonLd(
      v, options))
    }
    instance.#_axq166E2eZADq34V4MYUc8KMZdC = _axq166E2eZADq34V4MYUc8KMZdC;
    const _4EHQFWZSz1k1d4LmPrQiMba2GbP3: (Multikey | URL)[] = [];

    const _4EHQFWZSz1k1d4LmPrQiMba2GbP3__array = values[\\"https://w3id.org/security#assertionMethod\\"];
    for (
      const v of _4EHQFWZSz1k1d4LmPrQiMba2GbP3__array == null
        ? []
        : _4EHQFWZSz1k1d4LmPrQiMba2GbP3__array.length === 1 && \\"@list\\" in _4EHQFWZSz1k1d4LmPrQiMba2GbP3__array[0]
        ? _4EHQFWZSz1k1d4LmPrQiMba2GbP3__array[0][\\"@list\\"]
        : _4EHQFWZSz1k1d4LmPrQiMba2GbP3__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _4EHQFWZSz1k1d4LmPrQiMba2GbP3.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _4EHQFWZSz1k1d4LmPrQiMba2GbP3.push(await Multikey.fromJsonLd(
      v, options))
    }
    instance.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3 = _4EHQFWZSz1k1d4LmPrQiMba2GbP3;
    const _36QNc9MxfkKf6h8sEUQSHnV9NZA: (boolean)[] = [];

    const _36QNc9MxfkKf6h8sEUQSHnV9NZA__array = values[\\"https://www.w3.org/ns/activitystreams#manuallyApprovesFollowers\\"];
    for (
      const v of _36QNc9MxfkKf6h8sEUQSHnV9NZA__array == null
        ? []
        : _36QNc9MxfkKf6h8sEUQSHnV9NZA__array.length === 1 && \\"@list\\" in _36QNc9MxfkKf6h8sEUQSHnV9NZA__array[0]
        ? _36QNc9MxfkKf6h8sEUQSHnV9NZA__array[0][\\"@list\\"]
        : _36QNc9MxfkKf6h8sEUQSHnV9NZA__array
    ) {
      if (v == null) continue;
    _36QNc9MxfkKf6h8sEUQSHnV9NZA.push(v[\\"@value\\"])
    }
    instance.#_36QNc9MxfkKf6h8sEUQSHnV9NZA = _36QNc9MxfkKf6h8sEUQSHnV9NZA;
    const _3ghX3VfZXXbLvhCRH7QJqpzLrXjB: (OrderedCollection | URL)[] = [];

    const _3ghX3VfZXXbLvhCRH7QJqpzLrXjB__array = values[\\"http://www.w3.org/ns/ldp#inbox\\"];
    for (
      const v of _3ghX3VfZXXbLvhCRH7QJqpzLrXjB__array == null
        ? []
        : _3ghX3VfZXXbLvhCRH7QJqpzLrXjB__array.length === 1 && \\"@list\\" in _3ghX3VfZXXbLvhCRH7QJqpzLrXjB__array[0]
        ? _3ghX3VfZXXbLvhCRH7QJqpzLrXjB__array[0][\\"@list\\"]
        : _3ghX3VfZXXbLvhCRH7QJqpzLrXjB__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _3ghX3VfZXXbLvhCRH7QJqpzLrXjB.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _3ghX3VfZXXbLvhCRH7QJqpzLrXjB.push(await OrderedCollection.fromJsonLd(
      v, options))
    }
    instance.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB = _3ghX3VfZXXbLvhCRH7QJqpzLrXjB;
    const _41QwhqJouoLg3h8dRPKat21brynC: (OrderedCollection | URL)[] = [];

    const _41QwhqJouoLg3h8dRPKat21brynC__array = values[\\"https://www.w3.org/ns/activitystreams#outbox\\"];
    for (
      const v of _41QwhqJouoLg3h8dRPKat21brynC__array == null
        ? []
        : _41QwhqJouoLg3h8dRPKat21brynC__array.length === 1 && \\"@list\\" in _41QwhqJouoLg3h8dRPKat21brynC__array[0]
        ? _41QwhqJouoLg3h8dRPKat21brynC__array[0][\\"@list\\"]
        : _41QwhqJouoLg3h8dRPKat21brynC__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _41QwhqJouoLg3h8dRPKat21brynC.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _41QwhqJouoLg3h8dRPKat21brynC.push(await OrderedCollection.fromJsonLd(
      v, options))
    }
    instance.#_41QwhqJouoLg3h8dRPKat21brynC = _41QwhqJouoLg3h8dRPKat21brynC;
    const _3yAv8jymNfNuJUDuBzJ1NQhdbAee: (Collection | URL)[] = [];

    const _3yAv8jymNfNuJUDuBzJ1NQhdbAee__array = values[\\"https://www.w3.org/ns/activitystreams#following\\"];
    for (
      const v of _3yAv8jymNfNuJUDuBzJ1NQhdbAee__array == null
        ? []
        : _3yAv8jymNfNuJUDuBzJ1NQhdbAee__array.length === 1 && \\"@list\\" in _3yAv8jymNfNuJUDuBzJ1NQhdbAee__array[0]
        ? _3yAv8jymNfNuJUDuBzJ1NQhdbAee__array[0][\\"@list\\"]
        : _3yAv8jymNfNuJUDuBzJ1NQhdbAee__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _3yAv8jymNfNuJUDuBzJ1NQhdbAee.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _3yAv8jymNfNuJUDuBzJ1NQhdbAee.push(await Collection.fromJsonLd(
      v, options))
    }
    instance.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee = _3yAv8jymNfNuJUDuBzJ1NQhdbAee;
    const _BBCTgfphhsFzpVfKTykGSpBNwoA: (Collection | URL)[] = [];

    const _BBCTgfphhsFzpVfKTykGSpBNwoA__array = values[\\"https://www.w3.org/ns/activitystreams#followers\\"];
    for (
      const v of _BBCTgfphhsFzpVfKTykGSpBNwoA__array == null
        ? []
        : _BBCTgfphhsFzpVfKTykGSpBNwoA__array.length === 1 && \\"@list\\" in _BBCTgfphhsFzpVfKTykGSpBNwoA__array[0]
        ? _BBCTgfphhsFzpVfKTykGSpBNwoA__array[0][\\"@list\\"]
        : _BBCTgfphhsFzpVfKTykGSpBNwoA__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _BBCTgfphhsFzpVfKTykGSpBNwoA.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _BBCTgfphhsFzpVfKTykGSpBNwoA.push(await Collection.fromJsonLd(
      v, options))
    }
    instance.#_BBCTgfphhsFzpVfKTykGSpBNwoA = _BBCTgfphhsFzpVfKTykGSpBNwoA;
    const _3bgkPwJanyTCoVFM9ovRcus8tKkU: (Collection | URL)[] = [];

    const _3bgkPwJanyTCoVFM9ovRcus8tKkU__array = values[\\"https://www.w3.org/ns/activitystreams#liked\\"];
    for (
      const v of _3bgkPwJanyTCoVFM9ovRcus8tKkU__array == null
        ? []
        : _3bgkPwJanyTCoVFM9ovRcus8tKkU__array.length === 1 && \\"@list\\" in _3bgkPwJanyTCoVFM9ovRcus8tKkU__array[0]
        ? _3bgkPwJanyTCoVFM9ovRcus8tKkU__array[0][\\"@list\\"]
        : _3bgkPwJanyTCoVFM9ovRcus8tKkU__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _3bgkPwJanyTCoVFM9ovRcus8tKkU.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _3bgkPwJanyTCoVFM9ovRcus8tKkU.push(await Collection.fromJsonLd(
      v, options))
    }
    instance.#_3bgkPwJanyTCoVFM9ovRcus8tKkU = _3bgkPwJanyTCoVFM9ovRcus8tKkU;
    const _4N1vBJzXDf8NbBumeECQMFvKetja: (Collection | URL)[] = [];

    const _4N1vBJzXDf8NbBumeECQMFvKetja__array = values[\\"http://joinmastodon.org/ns#featured\\"];
    for (
      const v of _4N1vBJzXDf8NbBumeECQMFvKetja__array == null
        ? []
        : _4N1vBJzXDf8NbBumeECQMFvKetja__array.length === 1 && \\"@list\\" in _4N1vBJzXDf8NbBumeECQMFvKetja__array[0]
        ? _4N1vBJzXDf8NbBumeECQMFvKetja__array[0][\\"@list\\"]
        : _4N1vBJzXDf8NbBumeECQMFvKetja__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _4N1vBJzXDf8NbBumeECQMFvKetja.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _4N1vBJzXDf8NbBumeECQMFvKetja.push(await Collection.fromJsonLd(
      v, options))
    }
    instance.#_4N1vBJzXDf8NbBumeECQMFvKetja = _4N1vBJzXDf8NbBumeECQMFvKetja;
    const _2MxnRRLq9iPzx5CFq2NPrXdUDCac: (Collection | URL)[] = [];

    const _2MxnRRLq9iPzx5CFq2NPrXdUDCac__array = values[\\"http://joinmastodon.org/ns#featuredTags\\"];
    for (
      const v of _2MxnRRLq9iPzx5CFq2NPrXdUDCac__array == null
        ? []
        : _2MxnRRLq9iPzx5CFq2NPrXdUDCac__array.length === 1 && \\"@list\\" in _2MxnRRLq9iPzx5CFq2NPrXdUDCac__array[0]
        ? _2MxnRRLq9iPzx5CFq2NPrXdUDCac__array[0][\\"@list\\"]
        : _2MxnRRLq9iPzx5CFq2NPrXdUDCac__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _2MxnRRLq9iPzx5CFq2NPrXdUDCac.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _2MxnRRLq9iPzx5CFq2NPrXdUDCac.push(await Collection.fromJsonLd(
      v, options))
    }
    instance.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac = _2MxnRRLq9iPzx5CFq2NPrXdUDCac;
    const _3sG2Hdwn9qzKGu9mpYkqakAMUkH9: (Collection | URL)[] = [];

    const _3sG2Hdwn9qzKGu9mpYkqakAMUkH9__array = values[\\"https://www.w3.org/ns/activitystreams#streams\\"];
    for (
      const v of _3sG2Hdwn9qzKGu9mpYkqakAMUkH9__array == null
        ? []
        : _3sG2Hdwn9qzKGu9mpYkqakAMUkH9__array.length === 1 && \\"@list\\" in _3sG2Hdwn9qzKGu9mpYkqakAMUkH9__array[0]
        ? _3sG2Hdwn9qzKGu9mpYkqakAMUkH9__array[0][\\"@list\\"]
        : _3sG2Hdwn9qzKGu9mpYkqakAMUkH9__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _3sG2Hdwn9qzKGu9mpYkqakAMUkH9.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _3sG2Hdwn9qzKGu9mpYkqakAMUkH9.push(await Collection.fromJsonLd(
      v, options))
    }
    instance.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9 = _3sG2Hdwn9qzKGu9mpYkqakAMUkH9;
    const _sEoQwUbfk4hEfugzNQ2ZiDcLMkG: (Endpoints)[] = [];

    const _sEoQwUbfk4hEfugzNQ2ZiDcLMkG__array = values[\\"https://www.w3.org/ns/activitystreams#endpoints\\"];
    for (
      const v of _sEoQwUbfk4hEfugzNQ2ZiDcLMkG__array == null
        ? []
        : _sEoQwUbfk4hEfugzNQ2ZiDcLMkG__array.length === 1 && \\"@list\\" in _sEoQwUbfk4hEfugzNQ2ZiDcLMkG__array[0]
        ? _sEoQwUbfk4hEfugzNQ2ZiDcLMkG__array[0][\\"@list\\"]
        : _sEoQwUbfk4hEfugzNQ2ZiDcLMkG__array
    ) {
      if (v == null) continue;
    _sEoQwUbfk4hEfugzNQ2ZiDcLMkG.push(await Endpoints.fromJsonLd(
      v, options))
    }
    instance.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG = _sEoQwUbfk4hEfugzNQ2ZiDcLMkG;
    const _gAJzg1QDc4rcefFsUzGSYmyXvNH: (boolean)[] = [];

    const _gAJzg1QDc4rcefFsUzGSYmyXvNH__array = values[\\"http://joinmastodon.org/ns#discoverable\\"];
    for (
      const v of _gAJzg1QDc4rcefFsUzGSYmyXvNH__array == null
        ? []
        : _gAJzg1QDc4rcefFsUzGSYmyXvNH__array.length === 1 && \\"@list\\" in _gAJzg1QDc4rcefFsUzGSYmyXvNH__array[0]
        ? _gAJzg1QDc4rcefFsUzGSYmyXvNH__array[0][\\"@list\\"]
        : _gAJzg1QDc4rcefFsUzGSYmyXvNH__array
    ) {
      if (v == null) continue;
    _gAJzg1QDc4rcefFsUzGSYmyXvNH.push(v[\\"@value\\"])
    }
    instance.#_gAJzg1QDc4rcefFsUzGSYmyXvNH = _gAJzg1QDc4rcefFsUzGSYmyXvNH;
    const _2kGKkJtoFWg8c18PaVSqj9NKP4t7: (boolean)[] = [];

    const _2kGKkJtoFWg8c18PaVSqj9NKP4t7__array = values[\\"http://joinmastodon.org/ns#suspended\\"];
    for (
      const v of _2kGKkJtoFWg8c18PaVSqj9NKP4t7__array == null
        ? []
        : _2kGKkJtoFWg8c18PaVSqj9NKP4t7__array.length === 1 && \\"@list\\" in _2kGKkJtoFWg8c18PaVSqj9NKP4t7__array[0]
        ? _2kGKkJtoFWg8c18PaVSqj9NKP4t7__array[0][\\"@list\\"]
        : _2kGKkJtoFWg8c18PaVSqj9NKP4t7__array
    ) {
      if (v == null) continue;
    _2kGKkJtoFWg8c18PaVSqj9NKP4t7.push(v[\\"@value\\"])
    }
    instance.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7 = _2kGKkJtoFWg8c18PaVSqj9NKP4t7;
    const _79S8K4f5J9MWUgCxziRyUe6PTHZ: (boolean)[] = [];

    const _79S8K4f5J9MWUgCxziRyUe6PTHZ__array = values[\\"http://joinmastodon.org/ns#memorial\\"];
    for (
      const v of _79S8K4f5J9MWUgCxziRyUe6PTHZ__array == null
        ? []
        : _79S8K4f5J9MWUgCxziRyUe6PTHZ__array.length === 1 && \\"@list\\" in _79S8K4f5J9MWUgCxziRyUe6PTHZ__array[0]
        ? _79S8K4f5J9MWUgCxziRyUe6PTHZ__array[0][\\"@list\\"]
        : _79S8K4f5J9MWUgCxziRyUe6PTHZ__array
    ) {
      if (v == null) continue;
    _79S8K4f5J9MWUgCxziRyUe6PTHZ.push(v[\\"@value\\"])
    }
    instance.#_79S8K4f5J9MWUgCxziRyUe6PTHZ = _79S8K4f5J9MWUgCxziRyUe6PTHZ;
    const _2diCorzqPGQQqftp6e4SrCEwEnyk: (boolean)[] = [];

    const _2diCorzqPGQQqftp6e4SrCEwEnyk__array = values[\\"http://joinmastodon.org/ns#indexable\\"];
    for (
      const v of _2diCorzqPGQQqftp6e4SrCEwEnyk__array == null
        ? []
        : _2diCorzqPGQQqftp6e4SrCEwEnyk__array.length === 1 && \\"@list\\" in _2diCorzqPGQQqftp6e4SrCEwEnyk__array[0]
        ? _2diCorzqPGQQqftp6e4SrCEwEnyk__array[0][\\"@list\\"]
        : _2diCorzqPGQQqftp6e4SrCEwEnyk__array
    ) {
      if (v == null) continue;
    _2diCorzqPGQQqftp6e4SrCEwEnyk.push(v[\\"@value\\"])
    }
    instance.#_2diCorzqPGQQqftp6e4SrCEwEnyk = _2diCorzqPGQQqftp6e4SrCEwEnyk;
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
      const _3isuDgRAKSntq9XdbjiNxjwyPZAf = this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3isuDgRAKSntq9XdbjiNxjwyPZAf.length == 1) {
        proxy.preferredUsername = _3isuDgRAKSntq9XdbjiNxjwyPZAf[0];
      }
      
      if (_3isuDgRAKSntq9XdbjiNxjwyPZAf.length > 1
          || !(\\"preferredUsername\\" in proxy)
          && _3isuDgRAKSntq9XdbjiNxjwyPZAf.length > 0) {
        proxy.preferredUsernames = _3isuDgRAKSntq9XdbjiNxjwyPZAf;
      }
      
      const _axq166E2eZADq34V4MYUc8KMZdC = this.#_axq166E2eZADq34V4MYUc8KMZdC
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_axq166E2eZADq34V4MYUc8KMZdC.length == 1) {
        proxy.publicKey = _axq166E2eZADq34V4MYUc8KMZdC[0];
      }
      
      if (_axq166E2eZADq34V4MYUc8KMZdC.length > 1
          || !(\\"publicKey\\" in proxy)
          && _axq166E2eZADq34V4MYUc8KMZdC.length > 0) {
        proxy.publicKeys = _axq166E2eZADq34V4MYUc8KMZdC;
      }
      
      const _4EHQFWZSz1k1d4LmPrQiMba2GbP3 = this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_4EHQFWZSz1k1d4LmPrQiMba2GbP3.length == 1) {
        proxy.assertionMethod = _4EHQFWZSz1k1d4LmPrQiMba2GbP3[0];
      }
      
      if (_4EHQFWZSz1k1d4LmPrQiMba2GbP3.length > 1
          || !(\\"assertionMethod\\" in proxy)
          && _4EHQFWZSz1k1d4LmPrQiMba2GbP3.length > 0) {
        proxy.assertionMethods = _4EHQFWZSz1k1d4LmPrQiMba2GbP3;
      }
      
      const _36QNc9MxfkKf6h8sEUQSHnV9NZA = this.#_36QNc9MxfkKf6h8sEUQSHnV9NZA
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_36QNc9MxfkKf6h8sEUQSHnV9NZA.length == 1) {
        proxy.manuallyApprovesFollowers = _36QNc9MxfkKf6h8sEUQSHnV9NZA[0];
      }
      
      const _3ghX3VfZXXbLvhCRH7QJqpzLrXjB = this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3ghX3VfZXXbLvhCRH7QJqpzLrXjB.length == 1) {
        proxy.inbox = _3ghX3VfZXXbLvhCRH7QJqpzLrXjB[0];
      }
      
      const _41QwhqJouoLg3h8dRPKat21brynC = this.#_41QwhqJouoLg3h8dRPKat21brynC
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_41QwhqJouoLg3h8dRPKat21brynC.length == 1) {
        proxy.outbox = _41QwhqJouoLg3h8dRPKat21brynC[0];
      }
      
      const _3yAv8jymNfNuJUDuBzJ1NQhdbAee = this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3yAv8jymNfNuJUDuBzJ1NQhdbAee.length == 1) {
        proxy.following = _3yAv8jymNfNuJUDuBzJ1NQhdbAee[0];
      }
      
      const _BBCTgfphhsFzpVfKTykGSpBNwoA = this.#_BBCTgfphhsFzpVfKTykGSpBNwoA
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_BBCTgfphhsFzpVfKTykGSpBNwoA.length == 1) {
        proxy.followers = _BBCTgfphhsFzpVfKTykGSpBNwoA[0];
      }
      
      const _3bgkPwJanyTCoVFM9ovRcus8tKkU = this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3bgkPwJanyTCoVFM9ovRcus8tKkU.length == 1) {
        proxy.liked = _3bgkPwJanyTCoVFM9ovRcus8tKkU[0];
      }
      
      const _4N1vBJzXDf8NbBumeECQMFvKetja = this.#_4N1vBJzXDf8NbBumeECQMFvKetja
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_4N1vBJzXDf8NbBumeECQMFvKetja.length == 1) {
        proxy.featured = _4N1vBJzXDf8NbBumeECQMFvKetja[0];
      }
      
      const _2MxnRRLq9iPzx5CFq2NPrXdUDCac = this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2MxnRRLq9iPzx5CFq2NPrXdUDCac.length == 1) {
        proxy.featuredTags = _2MxnRRLq9iPzx5CFq2NPrXdUDCac[0];
      }
      
      const _3sG2Hdwn9qzKGu9mpYkqakAMUkH9 = this.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3sG2Hdwn9qzKGu9mpYkqakAMUkH9.length > 1
          || !(\\"stream\\" in proxy)
          && _3sG2Hdwn9qzKGu9mpYkqakAMUkH9.length > 0) {
        proxy.streams = _3sG2Hdwn9qzKGu9mpYkqakAMUkH9;
      }
      
      const _sEoQwUbfk4hEfugzNQ2ZiDcLMkG = this.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_sEoQwUbfk4hEfugzNQ2ZiDcLMkG.length == 1) {
        proxy.endpoints = _sEoQwUbfk4hEfugzNQ2ZiDcLMkG[0];
      }
      
      const _gAJzg1QDc4rcefFsUzGSYmyXvNH = this.#_gAJzg1QDc4rcefFsUzGSYmyXvNH
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_gAJzg1QDc4rcefFsUzGSYmyXvNH.length == 1) {
        proxy.discoverable = _gAJzg1QDc4rcefFsUzGSYmyXvNH[0];
      }
      
      const _2kGKkJtoFWg8c18PaVSqj9NKP4t7 = this.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2kGKkJtoFWg8c18PaVSqj9NKP4t7.length == 1) {
        proxy.suspended = _2kGKkJtoFWg8c18PaVSqj9NKP4t7[0];
      }
      
      const _79S8K4f5J9MWUgCxziRyUe6PTHZ = this.#_79S8K4f5J9MWUgCxziRyUe6PTHZ
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_79S8K4f5J9MWUgCxziRyUe6PTHZ.length == 1) {
        proxy.memorial = _79S8K4f5J9MWUgCxziRyUe6PTHZ[0];
      }
      
      const _2diCorzqPGQQqftp6e4SrCEwEnyk = this.#_2diCorzqPGQQqftp6e4SrCEwEnyk
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2diCorzqPGQQqftp6e4SrCEwEnyk.length == 1) {
        proxy.indexable = _2diCorzqPGQQqftp6e4SrCEwEnyk[0];
      }
      
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Group \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Group \\" + inspect(proxy, options);
  }
  }

/** A Link is an indirect, qualified reference to a resource identified by a URL.
 * The fundamental model for links is established by RFC 5988. Many of the
 * properties defined by the Activity Vocabulary allow values that are either
 * instances of {@link Object} or {@link Link}. When a {@link Link} is used,
 * it establishes a qualified relation connecting the subject (the containing
 * object) to the resource identified by the \`href\`. Properties of
 * the {@link Link} are properties of the reference as opposed to properties of
 * the resource.
 * 
 */
export class Link {

    readonly #documentLoader?: DocumentLoader;
    readonly #contextLoader?: DocumentLoader;
    readonly id: URL | null;

    protected get _documentLoader(): DocumentLoader | undefined {
      return this.#documentLoader;
    }

    protected get _contextLoader(): DocumentLoader | undefined {
      return this.#contextLoader;
    }
    
    /**
     * The type URI of {@link Link}: \`https://www.w3.org/ns/activitystreams#Link\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Link\\");
    }
  #_pVjLsybKQdmkjuU7MHjiVmNnuj7: (URL)[] = [];
#_2a1c5GkfkQsnyyLybF8UXBQfFuHZ: (string)[] = [];
#_3BLrzmscsjHCw8TF5BHRW9WkPnX8: (string)[] = [];
#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav: ((string | LanguageString))[] = [];
#_f57HKWCp1YRBbTJE8PF12RbDJGf: (LanguageTag)[] = [];
#_2cGKFeFJMmiNpGZFEF75mCwFQsKb: (number)[] = [];
#_2e9AP7WdHBJYAgXG6GEyq7nSkNMe: (number)[] = [];
#_gCVTegXxWWCw6wWRxa1QF65zusg: (Link | Object | URL)[] = [];

  /**
   * Constructs a new instance of Link with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
href?: URL | null;rel?: string | null;
rels?: (string)[];mediaType?: string | null;name?: string | LanguageString | null;
names?: ((string | LanguageString))[];language?: LanguageTag | null;height?: number | null;width?: number | null;previews?: (Link | Object | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  
    this.#documentLoader = documentLoader;
    this.#contextLoader = contextLoader;
    if (values.id == null || values.id instanceof URL) {
      this.id = values.id ?? null;
    } else {
      throw new TypeError(\\"The id must be a URL.\\");
    }
    
        if (\\"href\\" in values &&             values.href != null) {
          if (values.href instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_pVjLsybKQdmkjuU7MHjiVmNnuj7 = [values.href];
          } else {
            throw new TypeError(
              \\"The href must be of type \\" +
              \\"URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"rel\\" in values &&             values.rel != null) {
          if (typeof values.rel === \\"string\\") {
            // @ts-ignore: type is checked above.
            this.#_2a1c5GkfkQsnyyLybF8UXBQfFuHZ = [values.rel];
          } else {
            throw new TypeError(
              \\"The rel must be of type \\" +
              \\"string\\" + \\".\\",
            );
          }
        }
      
        if (\\"rels\\" in values &&             values.rels != null) {
      
          if (\\"rel\\" in values &&
              values.rel != null) {
            throw new TypeError(
              \\"Cannot initialize both rel and \\" +
                \\"rels at the same time.\\",
            );
          }
        
          if (Array.isArray(values.rels) &&
              values.rels.every(v => typeof v === \\"string\\")) {
            // @ts-ignore: type is checked above.
            this.#_2a1c5GkfkQsnyyLybF8UXBQfFuHZ = values.rels;
          } else {
            throw new TypeError(
              \\"The rels must be an array of type \\" +
              \\"string\\" + \\".\\",
            );
          }
        }
      
        if (\\"mediaType\\" in values &&             values.mediaType != null) {
          if (typeof values.mediaType === \\"string\\") {
            // @ts-ignore: type is checked above.
            this.#_3BLrzmscsjHCw8TF5BHRW9WkPnX8 = [values.mediaType];
          } else {
            throw new TypeError(
              \\"The mediaType must be of type \\" +
              \\"string\\" + \\".\\",
            );
          }
        }
      
        if (\\"name\\" in values &&             values.name != null) {
          if (typeof values.name === \\"string\\" || values.name instanceof LanguageString) {
            // @ts-ignore: type is checked above.
            this.#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav = [values.name];
          } else {
            throw new TypeError(
              \\"The name must be of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      
        if (\\"names\\" in values &&             values.names != null) {
      
          if (\\"name\\" in values &&
              values.name != null) {
            throw new TypeError(
              \\"Cannot initialize both name and \\" +
                \\"names at the same time.\\",
            );
          }
        
          if (Array.isArray(values.names) &&
              values.names.every(v => typeof v === \\"string\\" || v instanceof LanguageString)) {
            // @ts-ignore: type is checked above.
            this.#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav = values.names;
          } else {
            throw new TypeError(
              \\"The names must be an array of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      
        if (\\"language\\" in values &&             values.language != null) {
          if (values.language instanceof LanguageTag) {
            // @ts-ignore: type is checked above.
            this.#_f57HKWCp1YRBbTJE8PF12RbDJGf = [values.language];
          } else {
            throw new TypeError(
              \\"The language must be of type \\" +
              \\"LanguageTag\\" + \\".\\",
            );
          }
        }
      
        if (\\"height\\" in values &&             values.height != null) {
          if (typeof values.height === \\"number\\" && Number.isInteger(values.height) && values.height >= 0) {
            // @ts-ignore: type is checked above.
            this.#_2cGKFeFJMmiNpGZFEF75mCwFQsKb = [values.height];
          } else {
            throw new TypeError(
              \\"The height must be of type \\" +
              \\"number\\" + \\".\\",
            );
          }
        }
      
        if (\\"width\\" in values &&             values.width != null) {
          if (typeof values.width === \\"number\\" && Number.isInteger(values.width) && values.width >= 0) {
            // @ts-ignore: type is checked above.
            this.#_2e9AP7WdHBJYAgXG6GEyq7nSkNMe = [values.width];
          } else {
            throw new TypeError(
              \\"The width must be of type \\" +
              \\"number\\" + \\".\\",
            );
          }
        }
      
        if (\\"previews\\" in values &&             values.previews != null) {
      
          if (Array.isArray(values.previews) &&
              values.previews.every(v => v instanceof Link || v instanceof Object || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_gCVTegXxWWCw6wWRxa1QF65zusg = values.previews;
          } else {
            throw new TypeError(
              \\"The previews must be an array of type \\" +
              \\"Link | Object | URL\\" + \\".\\",
            );
          }
        }
      }

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
href?: URL | null;rel?: string | null;
rels?: (string)[];mediaType?: string | null;name?: string | LanguageString | null;
names?: ((string | LanguageString))[];language?: LanguageTag | null;height?: number | null;width?: number | null;previews?: (Link | Object | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Link {
  
    // @ts-ignore: this.constructor is not recognized as a constructor, but it is.
    const clone: Link = new this.constructor(
      { id: values.id ?? this.id },
      options
    );
    clone.#_pVjLsybKQdmkjuU7MHjiVmNnuj7 = this.#_pVjLsybKQdmkjuU7MHjiVmNnuj7;
        if (\\"href\\" in values &&             values.href != null) {
          if (values.href instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_pVjLsybKQdmkjuU7MHjiVmNnuj7 = [values.href];
          } else {
            throw new TypeError(
              \\"The href must be of type \\" +
              \\"URL\\" + \\".\\",
            );
          }
        }
      clone.#_2a1c5GkfkQsnyyLybF8UXBQfFuHZ = this.#_2a1c5GkfkQsnyyLybF8UXBQfFuHZ;
        if (\\"rel\\" in values &&             values.rel != null) {
          if (typeof values.rel === \\"string\\") {
            // @ts-ignore: type is checked above.
            clone.#_2a1c5GkfkQsnyyLybF8UXBQfFuHZ = [values.rel];
          } else {
            throw new TypeError(
              \\"The rel must be of type \\" +
              \\"string\\" + \\".\\",
            );
          }
        }
      
        if (\\"rels\\" in values &&             values.rels != null) {
      
          if (\\"rel\\" in values &&
              values.rel != null) {
            throw new TypeError(
              \\"Cannot update both rel and \\" +
                \\"rels at the same time.\\",
            );
          }
        
          if (Array.isArray(values.rels) &&
              values.rels.every(v => typeof v === \\"string\\")) {
            // @ts-ignore: type is checked above.
            clone.#_2a1c5GkfkQsnyyLybF8UXBQfFuHZ = values.rels;
          } else {
            throw new TypeError(
              \\"The rels must be an array of type \\" +
              \\"string\\" + \\".\\",
            );
          }
        }
      clone.#_3BLrzmscsjHCw8TF5BHRW9WkPnX8 = this.#_3BLrzmscsjHCw8TF5BHRW9WkPnX8;
        if (\\"mediaType\\" in values &&             values.mediaType != null) {
          if (typeof values.mediaType === \\"string\\") {
            // @ts-ignore: type is checked above.
            clone.#_3BLrzmscsjHCw8TF5BHRW9WkPnX8 = [values.mediaType];
          } else {
            throw new TypeError(
              \\"The mediaType must be of type \\" +
              \\"string\\" + \\".\\",
            );
          }
        }
      clone.#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav = this.#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav;
        if (\\"name\\" in values &&             values.name != null) {
          if (typeof values.name === \\"string\\" || values.name instanceof LanguageString) {
            // @ts-ignore: type is checked above.
            clone.#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav = [values.name];
          } else {
            throw new TypeError(
              \\"The name must be of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      
        if (\\"names\\" in values &&             values.names != null) {
      
          if (\\"name\\" in values &&
              values.name != null) {
            throw new TypeError(
              \\"Cannot update both name and \\" +
                \\"names at the same time.\\",
            );
          }
        
          if (Array.isArray(values.names) &&
              values.names.every(v => typeof v === \\"string\\" || v instanceof LanguageString)) {
            // @ts-ignore: type is checked above.
            clone.#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav = values.names;
          } else {
            throw new TypeError(
              \\"The names must be an array of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      clone.#_f57HKWCp1YRBbTJE8PF12RbDJGf = this.#_f57HKWCp1YRBbTJE8PF12RbDJGf;
        if (\\"language\\" in values &&             values.language != null) {
          if (values.language instanceof LanguageTag) {
            // @ts-ignore: type is checked above.
            clone.#_f57HKWCp1YRBbTJE8PF12RbDJGf = [values.language];
          } else {
            throw new TypeError(
              \\"The language must be of type \\" +
              \\"LanguageTag\\" + \\".\\",
            );
          }
        }
      clone.#_2cGKFeFJMmiNpGZFEF75mCwFQsKb = this.#_2cGKFeFJMmiNpGZFEF75mCwFQsKb;
        if (\\"height\\" in values &&             values.height != null) {
          if (typeof values.height === \\"number\\" && Number.isInteger(values.height) && values.height >= 0) {
            // @ts-ignore: type is checked above.
            clone.#_2cGKFeFJMmiNpGZFEF75mCwFQsKb = [values.height];
          } else {
            throw new TypeError(
              \\"The height must be of type \\" +
              \\"number\\" + \\".\\",
            );
          }
        }
      clone.#_2e9AP7WdHBJYAgXG6GEyq7nSkNMe = this.#_2e9AP7WdHBJYAgXG6GEyq7nSkNMe;
        if (\\"width\\" in values &&             values.width != null) {
          if (typeof values.width === \\"number\\" && Number.isInteger(values.width) && values.width >= 0) {
            // @ts-ignore: type is checked above.
            clone.#_2e9AP7WdHBJYAgXG6GEyq7nSkNMe = [values.width];
          } else {
            throw new TypeError(
              \\"The width must be of type \\" +
              \\"number\\" + \\".\\",
            );
          }
        }
      clone.#_gCVTegXxWWCw6wWRxa1QF65zusg = this.#_gCVTegXxWWCw6wWRxa1QF65zusg;
        if (\\"previews\\" in values &&             values.previews != null) {
      
          if (Array.isArray(values.previews) &&
              values.previews.every(v => v instanceof Link || v instanceof Object || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_gCVTegXxWWCw6wWRxa1QF65zusg = values.previews;
          } else {
            throw new TypeError(
              \\"The previews must be an array of type \\" +
              \\"Link | Object | URL\\" + \\".\\",
            );
          }
        }
      
    return clone;
  }
  
/** The target resource pointed to by a {@link Link}.
 */
get href(): (URL | null) {
        if (this.#_pVjLsybKQdmkjuU7MHjiVmNnuj7.length < 1) return null;
        return this.#_pVjLsybKQdmkjuU7MHjiVmNnuj7[0];
      }
      
/** A link relation associated with a {@link Link}. The value MUST conform to
 * both the HTML5 and RFC 5988 \\"link relation\\" definitions.
 * 
 * In the HTML5, any string not containing the space (U+0020), tab (U+0009),
 * LF (U+000A), FF (U+000C), CR (U+000D) or comma (U+002C) characters can
 * be used as a valid link relation.
 * 
 */
get rel(): (string | null) {
        if (this.#_2a1c5GkfkQsnyyLybF8UXBQfFuHZ.length < 1) return null;
        return this.#_2a1c5GkfkQsnyyLybF8UXBQfFuHZ[0];
      }
      
/** A link relation associated with a {@link Link}. The value MUST conform to
 * both the HTML5 and RFC 5988 \\"link relation\\" definitions.
 * 
 * In the HTML5, any string not containing the space (U+0020), tab (U+0009),
 * LF (U+000A), FF (U+000C), CR (U+000D) or comma (U+002C) characters can
 * be used as a valid link relation.
 * 
 */
get rels(): (string)[] {
        return this.#_2a1c5GkfkQsnyyLybF8UXBQfFuHZ;
      }
      
/** When used on a {@link Link}, identifies the MIME media type of the
 * referenced resource.
 * 
 */
get mediaType(): (string | null) {
        if (this.#_3BLrzmscsjHCw8TF5BHRW9WkPnX8.length < 1) return null;
        return this.#_3BLrzmscsjHCw8TF5BHRW9WkPnX8[0];
      }
      
/** A simple, human-readable, plain-text name for the object. HTML markup MUST
 * NOT be included. The name MAY be expressed using multiple language-tagged
 * values.
 * 
 */
get name(): (string | LanguageString | null) {
        if (this.#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav.length < 1) return null;
        return this.#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav[0];
      }
      
/** A simple, human-readable, plain-text name for the object. HTML markup MUST
 * NOT be included. The name MAY be expressed using multiple language-tagged
 * values.
 * 
 */
get names(): ((string | LanguageString))[] {
        return this.#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav;
      }
      
/** Hints as to the language used by the target resource.
 * Value MUST be a BCP 47 Language-Tag.
 * 
 */
get language(): (LanguageTag | null) {
        if (this.#_f57HKWCp1YRBbTJE8PF12RbDJGf.length < 1) return null;
        return this.#_f57HKWCp1YRBbTJE8PF12RbDJGf[0];
      }
      
/** On a {@link Link}, specifies a hint as to the rendering height in
 * device-independent pixels of the linked resource. 
 * 
 */
get height(): (number | null) {
        if (this.#_2cGKFeFJMmiNpGZFEF75mCwFQsKb.length < 1) return null;
        return this.#_2cGKFeFJMmiNpGZFEF75mCwFQsKb[0];
      }
      
/** On a {@link Link}, specifies a hint as to the rendering width in
 * device-independent pixels of the linked resource.
 * 
 */
get width(): (number | null) {
        if (this.#_2e9AP7WdHBJYAgXG6GEyq7nSkNMe.length < 1) return null;
        return this.#_2e9AP7WdHBJYAgXG6GEyq7nSkNMe[0];
      }
      
    async #fetchPreview(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Link | Object | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Link.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      try {
        return await Object.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Link\\",\\"https://www.w3.org/ns/activitystreams#Object\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Link.getPreviews},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get previewIds(): URL[] {
        return this.#_gCVTegXxWWCw6wWRxa1QF65zusg.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** Identifies an entity that provides a preview of this object.
 */

      async* getPreviews(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Link | Object> {
        const vs = this.#_gCVTegXxWWCw6wWRxa1QF65zusg;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchPreview(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  const values: Record<string, unknown[] | string> = {};
    array = [];
    for (const v of this.#_pVjLsybKQdmkjuU7MHjiVmNnuj7) {
      const element = (
    { \\"@id\\": v.href }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#href\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_2a1c5GkfkQsnyyLybF8UXBQfFuHZ) {
      const element = (
    { \\"@value\\": v }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#rel\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3BLrzmscsjHCw8TF5BHRW9WkPnX8) {
      const element = (
    { \\"@value\\": v }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#mediaType\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav) {
      const element = (
    typeof v === \\"string\\" ? { \\"@value\\": v } : {
        \\"@value\\": v.toString(),
        \\"@language\\": v.language.compact(),
      }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#name\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_f57HKWCp1YRBbTJE8PF12RbDJGf) {
      const element = (
    { \\"@value\\": v.compact() }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#hreflang\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_2cGKFeFJMmiNpGZFEF75mCwFQsKb) {
      const element = (
    {
        \\"@type\\": \\"http://www.w3.org/2001/XMLSchema#nonNegativeInteger\\",
        \\"@value\\": v,
      }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#height\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_2e9AP7WdHBJYAgXG6GEyq7nSkNMe) {
      const element = (
    {
        \\"@type\\": \\"http://www.w3.org/2001/XMLSchema#nonNegativeInteger\\",
        \\"@value\\": v,
      }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#width\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_gCVTegXxWWCw6wWRxa1QF65zusg) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : v instanceof Link ? await v.toJsonLd(options) : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#preview\\"] = (
    array
      );
    }
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Link\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? \\"https://www.w3.org/ns/activitystreams\\",
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Link> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Hashtag\\")) {
      delete values[\\"@type\\"];
      return await Hashtag.fromJsonLd(values, options);
    }
    
    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Mention\\")) {
      delete values[\\"@type\\"];
      return await Mention.fromJsonLd(values, options);
    }
    
    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Link\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = new this(
      { id: \\"@id\\" in values ? new URL(values[\\"@id\\"] as string) : undefined },
      options,
    );
    const _pVjLsybKQdmkjuU7MHjiVmNnuj7: (URL)[] = [];

    const _pVjLsybKQdmkjuU7MHjiVmNnuj7__array = values[\\"https://www.w3.org/ns/activitystreams#href\\"];
    for (
      const v of _pVjLsybKQdmkjuU7MHjiVmNnuj7__array == null
        ? []
        : _pVjLsybKQdmkjuU7MHjiVmNnuj7__array.length === 1 && \\"@list\\" in _pVjLsybKQdmkjuU7MHjiVmNnuj7__array[0]
        ? _pVjLsybKQdmkjuU7MHjiVmNnuj7__array[0][\\"@list\\"]
        : _pVjLsybKQdmkjuU7MHjiVmNnuj7__array
    ) {
      if (v == null) continue;
    _pVjLsybKQdmkjuU7MHjiVmNnuj7.push(new URL(v[\\"@id\\"]))
    }
    instance.#_pVjLsybKQdmkjuU7MHjiVmNnuj7 = _pVjLsybKQdmkjuU7MHjiVmNnuj7;
    const _2a1c5GkfkQsnyyLybF8UXBQfFuHZ: (string)[] = [];

    const _2a1c5GkfkQsnyyLybF8UXBQfFuHZ__array = values[\\"https://www.w3.org/ns/activitystreams#rel\\"];
    for (
      const v of _2a1c5GkfkQsnyyLybF8UXBQfFuHZ__array == null
        ? []
        : _2a1c5GkfkQsnyyLybF8UXBQfFuHZ__array.length === 1 && \\"@list\\" in _2a1c5GkfkQsnyyLybF8UXBQfFuHZ__array[0]
        ? _2a1c5GkfkQsnyyLybF8UXBQfFuHZ__array[0][\\"@list\\"]
        : _2a1c5GkfkQsnyyLybF8UXBQfFuHZ__array
    ) {
      if (v == null) continue;
    _2a1c5GkfkQsnyyLybF8UXBQfFuHZ.push(v[\\"@value\\"])
    }
    instance.#_2a1c5GkfkQsnyyLybF8UXBQfFuHZ = _2a1c5GkfkQsnyyLybF8UXBQfFuHZ;
    const _3BLrzmscsjHCw8TF5BHRW9WkPnX8: (string)[] = [];

    const _3BLrzmscsjHCw8TF5BHRW9WkPnX8__array = values[\\"https://www.w3.org/ns/activitystreams#mediaType\\"];
    for (
      const v of _3BLrzmscsjHCw8TF5BHRW9WkPnX8__array == null
        ? []
        : _3BLrzmscsjHCw8TF5BHRW9WkPnX8__array.length === 1 && \\"@list\\" in _3BLrzmscsjHCw8TF5BHRW9WkPnX8__array[0]
        ? _3BLrzmscsjHCw8TF5BHRW9WkPnX8__array[0][\\"@list\\"]
        : _3BLrzmscsjHCw8TF5BHRW9WkPnX8__array
    ) {
      if (v == null) continue;
    _3BLrzmscsjHCw8TF5BHRW9WkPnX8.push(v[\\"@value\\"])
    }
    instance.#_3BLrzmscsjHCw8TF5BHRW9WkPnX8 = _3BLrzmscsjHCw8TF5BHRW9WkPnX8;
    const _4ZHbBuK7PrsvGgrjM8wgc6KMWjav: ((string | LanguageString))[] = [];

    const _4ZHbBuK7PrsvGgrjM8wgc6KMWjav__array = values[\\"https://www.w3.org/ns/activitystreams#name\\"];
    for (
      const v of _4ZHbBuK7PrsvGgrjM8wgc6KMWjav__array == null
        ? []
        : _4ZHbBuK7PrsvGgrjM8wgc6KMWjav__array.length === 1 && \\"@list\\" in _4ZHbBuK7PrsvGgrjM8wgc6KMWjav__array[0]
        ? _4ZHbBuK7PrsvGgrjM8wgc6KMWjav__array[0][\\"@list\\"]
        : _4ZHbBuK7PrsvGgrjM8wgc6KMWjav__array
    ) {
      if (v == null) continue;
    
      const decoded =
      typeof v === \\"object\\" && \\"@value\\" in v
        && typeof v[\\"@value\\"] === \\"string\\" && !(\\"@language\\" in v) ? v[\\"@value\\"] : typeof v === \\"object\\" && \\"@language\\" in v && \\"@value\\" in v
        && typeof v[\\"@language\\"] === \\"string\\"
        && typeof v[\\"@value\\"] === \\"string\\" ? new LanguageString(v[\\"@value\\"], v[\\"@language\\"]) : undefined
      ;
      if (typeof decoded === \\"undefined\\") continue;
      _4ZHbBuK7PrsvGgrjM8wgc6KMWjav.push(decoded);
      
    }
    instance.#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav = _4ZHbBuK7PrsvGgrjM8wgc6KMWjav;
    const _f57HKWCp1YRBbTJE8PF12RbDJGf: (LanguageTag)[] = [];

    const _f57HKWCp1YRBbTJE8PF12RbDJGf__array = values[\\"https://www.w3.org/ns/activitystreams#hreflang\\"];
    for (
      const v of _f57HKWCp1YRBbTJE8PF12RbDJGf__array == null
        ? []
        : _f57HKWCp1YRBbTJE8PF12RbDJGf__array.length === 1 && \\"@list\\" in _f57HKWCp1YRBbTJE8PF12RbDJGf__array[0]
        ? _f57HKWCp1YRBbTJE8PF12RbDJGf__array[0][\\"@list\\"]
        : _f57HKWCp1YRBbTJE8PF12RbDJGf__array
    ) {
      if (v == null) continue;
    _f57HKWCp1YRBbTJE8PF12RbDJGf.push(parseLanguageTag(v[\\"@value\\"]))
    }
    instance.#_f57HKWCp1YRBbTJE8PF12RbDJGf = _f57HKWCp1YRBbTJE8PF12RbDJGf;
    const _2cGKFeFJMmiNpGZFEF75mCwFQsKb: (number)[] = [];

    const _2cGKFeFJMmiNpGZFEF75mCwFQsKb__array = values[\\"https://www.w3.org/ns/activitystreams#height\\"];
    for (
      const v of _2cGKFeFJMmiNpGZFEF75mCwFQsKb__array == null
        ? []
        : _2cGKFeFJMmiNpGZFEF75mCwFQsKb__array.length === 1 && \\"@list\\" in _2cGKFeFJMmiNpGZFEF75mCwFQsKb__array[0]
        ? _2cGKFeFJMmiNpGZFEF75mCwFQsKb__array[0][\\"@list\\"]
        : _2cGKFeFJMmiNpGZFEF75mCwFQsKb__array
    ) {
      if (v == null) continue;
    _2cGKFeFJMmiNpGZFEF75mCwFQsKb.push(v[\\"@value\\"])
    }
    instance.#_2cGKFeFJMmiNpGZFEF75mCwFQsKb = _2cGKFeFJMmiNpGZFEF75mCwFQsKb;
    const _2e9AP7WdHBJYAgXG6GEyq7nSkNMe: (number)[] = [];

    const _2e9AP7WdHBJYAgXG6GEyq7nSkNMe__array = values[\\"https://www.w3.org/ns/activitystreams#width\\"];
    for (
      const v of _2e9AP7WdHBJYAgXG6GEyq7nSkNMe__array == null
        ? []
        : _2e9AP7WdHBJYAgXG6GEyq7nSkNMe__array.length === 1 && \\"@list\\" in _2e9AP7WdHBJYAgXG6GEyq7nSkNMe__array[0]
        ? _2e9AP7WdHBJYAgXG6GEyq7nSkNMe__array[0][\\"@list\\"]
        : _2e9AP7WdHBJYAgXG6GEyq7nSkNMe__array
    ) {
      if (v == null) continue;
    _2e9AP7WdHBJYAgXG6GEyq7nSkNMe.push(v[\\"@value\\"])
    }
    instance.#_2e9AP7WdHBJYAgXG6GEyq7nSkNMe = _2e9AP7WdHBJYAgXG6GEyq7nSkNMe;
    const _gCVTegXxWWCw6wWRxa1QF65zusg: (Link | Object | URL)[] = [];

    const _gCVTegXxWWCw6wWRxa1QF65zusg__array = values[\\"https://www.w3.org/ns/activitystreams#preview\\"];
    for (
      const v of _gCVTegXxWWCw6wWRxa1QF65zusg__array == null
        ? []
        : _gCVTegXxWWCw6wWRxa1QF65zusg__array.length === 1 && \\"@list\\" in _gCVTegXxWWCw6wWRxa1QF65zusg__array[0]
        ? _gCVTegXxWWCw6wWRxa1QF65zusg__array[0][\\"@list\\"]
        : _gCVTegXxWWCw6wWRxa1QF65zusg__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _gCVTegXxWWCw6wWRxa1QF65zusg.push(new URL(v[\\"@id\\"]));
        continue;
      }
      
      const decoded =
      typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& [\\"https://www.w3.org/ns/activitystreams#Link\\",\\"https://www.w3.org/ns/activitystreams#Hashtag\\",\\"https://www.w3.org/ns/activitystreams#Mention\\"].some(
            t => v[\\"@type\\"].includes(t)) ? await Link.fromJsonLd(
      v, options) : typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& [\\"https://www.w3.org/ns/activitystreams#Object\\",\\"http://joinmastodon.org/ns#Emoji\\",\\"https://www.w3.org/ns/activitystreams#Activity\\",\\"https://www.w3.org/ns/activitystreams#Accept\\",\\"https://www.w3.org/ns/activitystreams#Add\\",\\"https://www.w3.org/ns/activitystreams#Announce\\",\\"https://www.w3.org/ns/activitystreams#Create\\",\\"https://www.w3.org/ns/activitystreams#Delete\\",\\"https://www.w3.org/ns/activitystreams#Dislike\\",\\"https://www.w3.org/ns/activitystreams#Flag\\",\\"https://www.w3.org/ns/activitystreams#Follow\\",\\"https://www.w3.org/ns/activitystreams#Ignore\\",\\"https://www.w3.org/ns/activitystreams#Block\\",\\"https://www.w3.org/ns/activitystreams#IntransitiveActivity\\",\\"https://www.w3.org/ns/activitystreams#Arrive\\",\\"https://www.w3.org/ns/activitystreams#Question\\",\\"https://www.w3.org/ns/activitystreams#Join\\",\\"https://www.w3.org/ns/activitystreams#Leave\\",\\"https://www.w3.org/ns/activitystreams#Like\\",\\"https://www.w3.org/ns/activitystreams#Listen\\",\\"https://www.w3.org/ns/activitystreams#Offer\\",\\"https://www.w3.org/ns/activitystreams#Invite\\",\\"https://www.w3.org/ns/activitystreams#Reject\\",\\"https://www.w3.org/ns/activitystreams#Remove\\",\\"https://www.w3.org/ns/activitystreams#Undo\\",\\"https://www.w3.org/ns/activitystreams#Update\\",\\"https://www.w3.org/ns/activitystreams#Application\\",\\"https://www.w3.org/ns/activitystreams#Article\\",\\"https://www.w3.org/ns/activitystreams#Collection\\",\\"https://www.w3.org/ns/activitystreams#CollectionPage\\",\\"https://www.w3.org/ns/activitystreams#OrderedCollectionPage\\",\\"https://www.w3.org/ns/activitystreams#OrderedCollection\\",\\"https://www.w3.org/ns/activitystreams#Document\\",\\"https://www.w3.org/ns/activitystreams#Audio\\",\\"https://www.w3.org/ns/activitystreams#Image\\",\\"https://www.w3.org/ns/activitystreams#Page\\",\\"https://www.w3.org/ns/activitystreams#Video\\",\\"https://www.w3.org/ns/activitystreams#Event\\",\\"https://www.w3.org/ns/activitystreams#Group\\",\\"https://www.w3.org/ns/activitystreams#Note\\",\\"https://www.w3.org/ns/activitystreams#Organization\\",\\"https://www.w3.org/ns/activitystreams#Person\\",\\"https://www.w3.org/ns/activitystreams#Place\\",\\"https://www.w3.org/ns/activitystreams#Profile\\",\\"https://www.w3.org/ns/activitystreams#Relationship\\",\\"https://www.w3.org/ns/activitystreams#Service\\",\\"https://www.w3.org/ns/activitystreams#Tombstone\\"].some(
            t => v[\\"@type\\"].includes(t)) ? await Object.fromJsonLd(
      v, options) : undefined
      ;
      if (typeof decoded === \\"undefined\\") continue;
      _gCVTegXxWWCw6wWRxa1QF65zusg.push(decoded);
      
    }
    instance.#_gCVTegXxWWCw6wWRxa1QF65zusg = _gCVTegXxWWCw6wWRxa1QF65zusg;
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  
    const proxy: Record<string, unknown> = {};
    if (this.id != null) {
      proxy.id = {
        [Symbol.for(\\"Deno.customInspect\\")]: (
          inspect: typeof Deno.inspect,
          options: Deno.InspectOptions,
        ): string => \\"URL \\" + inspect(this.id!.href, options),
        [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
          _depth: number,
          options: unknown,
          inspect: (value: unknown, options: unknown) => string,
        ): string => \\"URL \\" + inspect(this.id!.href, options),
      };
    }
    
      const _pVjLsybKQdmkjuU7MHjiVmNnuj7 = this.#_pVjLsybKQdmkjuU7MHjiVmNnuj7
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_pVjLsybKQdmkjuU7MHjiVmNnuj7.length == 1) {
        proxy.href = _pVjLsybKQdmkjuU7MHjiVmNnuj7[0];
      }
      
      const _2a1c5GkfkQsnyyLybF8UXBQfFuHZ = this.#_2a1c5GkfkQsnyyLybF8UXBQfFuHZ
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2a1c5GkfkQsnyyLybF8UXBQfFuHZ.length == 1) {
        proxy.rel = _2a1c5GkfkQsnyyLybF8UXBQfFuHZ[0];
      }
      
      if (_2a1c5GkfkQsnyyLybF8UXBQfFuHZ.length > 1
          || !(\\"rel\\" in proxy)
          && _2a1c5GkfkQsnyyLybF8UXBQfFuHZ.length > 0) {
        proxy.rels = _2a1c5GkfkQsnyyLybF8UXBQfFuHZ;
      }
      
      const _3BLrzmscsjHCw8TF5BHRW9WkPnX8 = this.#_3BLrzmscsjHCw8TF5BHRW9WkPnX8
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3BLrzmscsjHCw8TF5BHRW9WkPnX8.length == 1) {
        proxy.mediaType = _3BLrzmscsjHCw8TF5BHRW9WkPnX8[0];
      }
      
      const _4ZHbBuK7PrsvGgrjM8wgc6KMWjav = this.#_4ZHbBuK7PrsvGgrjM8wgc6KMWjav
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_4ZHbBuK7PrsvGgrjM8wgc6KMWjav.length == 1) {
        proxy.name = _4ZHbBuK7PrsvGgrjM8wgc6KMWjav[0];
      }
      
      if (_4ZHbBuK7PrsvGgrjM8wgc6KMWjav.length > 1
          || !(\\"name\\" in proxy)
          && _4ZHbBuK7PrsvGgrjM8wgc6KMWjav.length > 0) {
        proxy.names = _4ZHbBuK7PrsvGgrjM8wgc6KMWjav;
      }
      
      const _f57HKWCp1YRBbTJE8PF12RbDJGf = this.#_f57HKWCp1YRBbTJE8PF12RbDJGf
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_f57HKWCp1YRBbTJE8PF12RbDJGf.length == 1) {
        proxy.language = _f57HKWCp1YRBbTJE8PF12RbDJGf[0];
      }
      
      const _2cGKFeFJMmiNpGZFEF75mCwFQsKb = this.#_2cGKFeFJMmiNpGZFEF75mCwFQsKb
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2cGKFeFJMmiNpGZFEF75mCwFQsKb.length == 1) {
        proxy.height = _2cGKFeFJMmiNpGZFEF75mCwFQsKb[0];
      }
      
      const _2e9AP7WdHBJYAgXG6GEyq7nSkNMe = this.#_2e9AP7WdHBJYAgXG6GEyq7nSkNMe
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2e9AP7WdHBJYAgXG6GEyq7nSkNMe.length == 1) {
        proxy.width = _2e9AP7WdHBJYAgXG6GEyq7nSkNMe[0];
      }
      
      const _gCVTegXxWWCw6wWRxa1QF65zusg = this.#_gCVTegXxWWCw6wWRxa1QF65zusg
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_gCVTegXxWWCw6wWRxa1QF65zusg.length > 1
          || !(\\"preview\\" in proxy)
          && _gCVTegXxWWCw6wWRxa1QF65zusg.length > 0) {
        proxy.previews = _gCVTegXxWWCw6wWRxa1QF65zusg;
      }
      
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Link \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Link \\" + inspect(proxy, options);
  }
  }

/** A specialized {@link Link} that represents an #hashtag.
 * 
 * See also <https://swicg.github.io/miscellany/#Hashtag>.
 * 
 */
export class Hashtag extends Link {

    /**
     * The type URI of {@link Hashtag}: \`https://www.w3.org/ns/activitystreams#Hashtag\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Hashtag\\");
    }
  
  /**
   * Constructs a new instance of Hashtag with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
href?: URL | null;rel?: string | null;
rels?: (string)[];mediaType?: string | null;name?: string | LanguageString | null;
names?: ((string | LanguageString))[];language?: LanguageTag | null;height?: number | null;width?: number | null;previews?: (Link | Object | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });}

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
href?: URL | null;rel?: string | null;
rels?: (string)[];mediaType?: string | null;name?: string | LanguageString | null;
names?: ((string | LanguageString))[];language?: LanguageTag | null;height?: number | null;width?: number | null;previews?: (Link | Object | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Hashtag {
  const clone = super.clone(values, options) as unknown as Hashtag;
    return clone;
  }
  
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Hashtag\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",{\\"Hashtag\\":\\"as:Hashtag\\"}],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Hashtag> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Hashtag\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Hashtag)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Hashtag \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Hashtag \\" + inspect(proxy, options);
  }
  }

/** An image document of any kind.
 */
export class Image extends Document {

    /**
     * The type URI of {@link Image}: \`https://www.w3.org/ns/activitystreams#Image\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Image\\");
    }
  
  /**
   * Constructs a new instance of Image with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];width?: number | null;height?: number | null;}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });}

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];width?: number | null;height?: number | null;}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Image {
  const clone = super.clone(values, options) as unknown as Image;
    return clone;
  }
  
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Image\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? \\"https://www.w3.org/ns/activitystreams\\",
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Image> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Image\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Image)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Image \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Image \\" + inspect(proxy, options);
  }
  }

/** Indicates that the actor is offering the object.
 * If specified, the target indicates the entity to which
 * the object is being offered.
 * 
 */
export class Offer extends Activity {

    /**
     * The type URI of {@link Offer}: \`https://www.w3.org/ns/activitystreams#Offer\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Offer\\");
    }
  
  /**
   * Constructs a new instance of Offer with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });}

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Offer {
  const clone = super.clone(values, options) as unknown as Offer;
    return clone;
  }
  
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Offer\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\"],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Offer> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Invite\\")) {
      delete values[\\"@type\\"];
      return await Invite.fromJsonLd(values, options);
    }
    
    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Offer\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Offer)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Offer \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Offer \\" + inspect(proxy, options);
  }
  }

/** 	A specialization of \`Offer\` in which the \`actor\` is extending an invitation for the \`object\` to the \`target\`.
 * 
 */
export class Invite extends Offer {

    /**
     * The type URI of {@link Invite}: \`https://www.w3.org/ns/activitystreams#Invite\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Invite\\");
    }
  
  /**
   * Constructs a new instance of Invite with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });}

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Invite {
  const clone = super.clone(values, options) as unknown as Invite;
    return clone;
  }
  
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Invite\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\"],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Invite> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Invite\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Invite)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Invite \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Invite \\" + inspect(proxy, options);
  }
  }

/** Indicates that the \`actor\` has joined the \`object\`.
 * The \`target\` and \`origin\` typically have no defined meaning.
 * 
 */
export class Join extends Activity {

    /**
     * The type URI of {@link Join}: \`https://www.w3.org/ns/activitystreams#Join\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Join\\");
    }
  
  /**
   * Constructs a new instance of Join with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });}

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Join {
  const clone = super.clone(values, options) as unknown as Join;
    return clone;
  }
  
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Join\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\"],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Join> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Join\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Join)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Join \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Join \\" + inspect(proxy, options);
  }
  }

/** Indicates that the \`actor\` has left the \`object\`.
 * The \`target\` and \`origin\` typically have no meaning.
 * 
 */
export class Leave extends Activity {

    /**
     * The type URI of {@link Leave}: \`https://www.w3.org/ns/activitystreams#Leave\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Leave\\");
    }
  
  /**
   * Constructs a new instance of Leave with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });}

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Leave {
  const clone = super.clone(values, options) as unknown as Leave;
    return clone;
  }
  
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Leave\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\"],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Leave> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Leave\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Leave)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Leave \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Leave \\" + inspect(proxy, options);
  }
  }

/** Indicates that the \`actor\` likes, recommends or endorses the \`object\`.
 * The \`target\` and \`origin\` typically have no defined meaning.
 * 
 */
export class Like extends Activity {

    /**
     * The type URI of {@link Like}: \`https://www.w3.org/ns/activitystreams#Like\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Like\\");
    }
  
  /**
   * Constructs a new instance of Like with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });}

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Like {
  const clone = super.clone(values, options) as unknown as Like;
    return clone;
  }
  
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Like\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\"],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Like> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Like\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Like)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Like \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Like \\" + inspect(proxy, options);
  }
  }

/** 	Indicates that the \`actor\` has listened to the \`object\`.
 * 
 */
export class Listen extends Activity {

    /**
     * The type URI of {@link Listen}: \`https://www.w3.org/ns/activitystreams#Listen\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Listen\\");
    }
  
  /**
   * Constructs a new instance of Listen with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });}

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Listen {
  const clone = super.clone(values, options) as unknown as Listen;
    return clone;
  }
  
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Listen\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\"],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Listen> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Listen\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Listen)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Listen \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Listen \\" + inspect(proxy, options);
  }
  }

/** A specialized {@link Link} that represents an @mention.
 */
export class Mention extends Link {

    /**
     * The type URI of {@link Mention}: \`https://www.w3.org/ns/activitystreams#Mention\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Mention\\");
    }
  
  /**
   * Constructs a new instance of Mention with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
href?: URL | null;rel?: string | null;
rels?: (string)[];mediaType?: string | null;name?: string | LanguageString | null;
names?: ((string | LanguageString))[];language?: LanguageTag | null;height?: number | null;width?: number | null;previews?: (Link | Object | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });}

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
href?: URL | null;rel?: string | null;
rels?: (string)[];mediaType?: string | null;name?: string | LanguageString | null;
names?: ((string | LanguageString))[];language?: LanguageTag | null;height?: number | null;width?: number | null;previews?: (Link | Object | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Mention {
  const clone = super.clone(values, options) as unknown as Mention;
    return clone;
  }
  
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Mention\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? \\"https://www.w3.org/ns/activitystreams\\",
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Mention> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Mention\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Mention)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Mention \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Mention \\" + inspect(proxy, options);
  }
  }

/** Represents a short written work typically less than a single paragraph in
 * length.
 * 
 */
export class Note extends Object {

    /**
     * The type URI of {@link Note}: \`https://www.w3.org/ns/activitystreams#Note\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Note\\");
    }
  
  /**
   * Constructs a new instance of Note with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });}

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Note {
  const clone = super.clone(values, options) as unknown as Note;
    return clone;
  }
  
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Note\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\",{\\"toot\\":\\"http://joinmastodon.org/ns#\\",\\"sensitive\\":\\"as:sensitive\\",\\"Emoji\\":\\"toot:Emoji\\",\\"Hashtag\\":\\"as:Hashtag\\"}],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Note> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Note\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Note)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Note \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Note \\" + inspect(proxy, options);
  }
  }

/** A subtype of {@link Collection} in which members of the logical collection
 * are assumed to always be strictly ordered.
 * 
 */
export class OrderedCollection extends Collection {

    /**
     * The type URI of {@link OrderedCollection}: \`https://www.w3.org/ns/activitystreams#OrderedCollection\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#OrderedCollection\\");
    }
  #_2JPCKWTcfBmTCcW8Tv3TpRaLVaqg: (Object | Link | URL)[] = [];

  /**
   * Constructs a new instance of OrderedCollection with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];totalItems?: number | null;current?: CollectionPage | URL | null;first?: CollectionPage | URL | null;last?: CollectionPage | URL | null;items?: (Object | Link | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });
        if (\\"items\\" in values &&             values.items != null) {
      
          if (Array.isArray(values.items) &&
              values.items.every(v => v instanceof Object || v instanceof Link || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_2JPCKWTcfBmTCcW8Tv3TpRaLVaqg = values.items;
          } else {
            throw new TypeError(
              \\"The items must be an array of type \\" +
              \\"Object | Link | URL\\" + \\".\\",
            );
          }
        }
      }

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];totalItems?: number | null;current?: CollectionPage | URL | null;first?: CollectionPage | URL | null;last?: CollectionPage | URL | null;items?: (Object | Link | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): OrderedCollection {
  const clone = super.clone(values, options) as unknown as OrderedCollection;clone.#_2JPCKWTcfBmTCcW8Tv3TpRaLVaqg = this.#_2JPCKWTcfBmTCcW8Tv3TpRaLVaqg;
        if (\\"items\\" in values &&             values.items != null) {
      
          if (Array.isArray(values.items) &&
              values.items.every(v => v instanceof Object || v instanceof Link || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_2JPCKWTcfBmTCcW8Tv3TpRaLVaqg = values.items;
          } else {
            throw new TypeError(
              \\"The items must be an array of type \\" +
              \\"Object | Link | URL\\" + \\".\\",
            );
          }
        }
      
    return clone;
  }
  
    async #fetchItem(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Object | Link | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Object.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      try {
        return await Link.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Object\\",\\"https://www.w3.org/ns/activitystreams#Link\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link OrderedCollection.getItems},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get itemIds(): URL[] {
        return this.#_2JPCKWTcfBmTCcW8Tv3TpRaLVaqg.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** Identifies the items contained in a collection.  The items might be ordered
 * or unordered.
 * 
 */

      async* getItems(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Object | Link> {
        const vs = this.#_2JPCKWTcfBmTCcW8Tv3TpRaLVaqg;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchItem(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    array = [];
    for (const v of this.#_2JPCKWTcfBmTCcW8Tv3TpRaLVaqg) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : v instanceof Object ? await v.toJsonLd(options) : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#items\\"] = (
    { \\"@list\\": array }
      );
    }
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#OrderedCollection\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\",{\\"toot\\":\\"http://joinmastodon.org/ns#\\",\\"sensitive\\":\\"as:sensitive\\",\\"Emoji\\":\\"toot:Emoji\\",\\"Hashtag\\":\\"as:Hashtag\\"}],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<OrderedCollection> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#OrderedCollection\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof OrderedCollection)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    const _2JPCKWTcfBmTCcW8Tv3TpRaLVaqg: (Object | Link | URL)[] = [];

    const _2JPCKWTcfBmTCcW8Tv3TpRaLVaqg__array = values[\\"https://www.w3.org/ns/activitystreams#items\\"];
    for (
      const v of _2JPCKWTcfBmTCcW8Tv3TpRaLVaqg__array == null
        ? []
        : _2JPCKWTcfBmTCcW8Tv3TpRaLVaqg__array.length === 1 && \\"@list\\" in _2JPCKWTcfBmTCcW8Tv3TpRaLVaqg__array[0]
        ? _2JPCKWTcfBmTCcW8Tv3TpRaLVaqg__array[0][\\"@list\\"]
        : _2JPCKWTcfBmTCcW8Tv3TpRaLVaqg__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _2JPCKWTcfBmTCcW8Tv3TpRaLVaqg.push(new URL(v[\\"@id\\"]));
        continue;
      }
      
      const decoded =
      typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& [\\"https://www.w3.org/ns/activitystreams#Object\\",\\"http://joinmastodon.org/ns#Emoji\\",\\"https://www.w3.org/ns/activitystreams#Activity\\",\\"https://www.w3.org/ns/activitystreams#Accept\\",\\"https://www.w3.org/ns/activitystreams#Add\\",\\"https://www.w3.org/ns/activitystreams#Announce\\",\\"https://www.w3.org/ns/activitystreams#Create\\",\\"https://www.w3.org/ns/activitystreams#Delete\\",\\"https://www.w3.org/ns/activitystreams#Dislike\\",\\"https://www.w3.org/ns/activitystreams#Flag\\",\\"https://www.w3.org/ns/activitystreams#Follow\\",\\"https://www.w3.org/ns/activitystreams#Ignore\\",\\"https://www.w3.org/ns/activitystreams#Block\\",\\"https://www.w3.org/ns/activitystreams#IntransitiveActivity\\",\\"https://www.w3.org/ns/activitystreams#Arrive\\",\\"https://www.w3.org/ns/activitystreams#Question\\",\\"https://www.w3.org/ns/activitystreams#Join\\",\\"https://www.w3.org/ns/activitystreams#Leave\\",\\"https://www.w3.org/ns/activitystreams#Like\\",\\"https://www.w3.org/ns/activitystreams#Listen\\",\\"https://www.w3.org/ns/activitystreams#Offer\\",\\"https://www.w3.org/ns/activitystreams#Invite\\",\\"https://www.w3.org/ns/activitystreams#Reject\\",\\"https://www.w3.org/ns/activitystreams#Remove\\",\\"https://www.w3.org/ns/activitystreams#Undo\\",\\"https://www.w3.org/ns/activitystreams#Update\\",\\"https://www.w3.org/ns/activitystreams#Application\\",\\"https://www.w3.org/ns/activitystreams#Article\\",\\"https://www.w3.org/ns/activitystreams#Collection\\",\\"https://www.w3.org/ns/activitystreams#CollectionPage\\",\\"https://www.w3.org/ns/activitystreams#OrderedCollectionPage\\",\\"https://www.w3.org/ns/activitystreams#OrderedCollection\\",\\"https://www.w3.org/ns/activitystreams#Document\\",\\"https://www.w3.org/ns/activitystreams#Audio\\",\\"https://www.w3.org/ns/activitystreams#Image\\",\\"https://www.w3.org/ns/activitystreams#Page\\",\\"https://www.w3.org/ns/activitystreams#Video\\",\\"https://www.w3.org/ns/activitystreams#Event\\",\\"https://www.w3.org/ns/activitystreams#Group\\",\\"https://www.w3.org/ns/activitystreams#Note\\",\\"https://www.w3.org/ns/activitystreams#Organization\\",\\"https://www.w3.org/ns/activitystreams#Person\\",\\"https://www.w3.org/ns/activitystreams#Place\\",\\"https://www.w3.org/ns/activitystreams#Profile\\",\\"https://www.w3.org/ns/activitystreams#Relationship\\",\\"https://www.w3.org/ns/activitystreams#Service\\",\\"https://www.w3.org/ns/activitystreams#Tombstone\\"].some(
            t => v[\\"@type\\"].includes(t)) ? await Object.fromJsonLd(
      v, options) : typeof v === \\"object\\" && \\"@type\\" in v
      && Array.isArray(v[\\"@type\\"])&& [\\"https://www.w3.org/ns/activitystreams#Link\\",\\"https://www.w3.org/ns/activitystreams#Hashtag\\",\\"https://www.w3.org/ns/activitystreams#Mention\\"].some(
            t => v[\\"@type\\"].includes(t)) ? await Link.fromJsonLd(
      v, options) : undefined
      ;
      if (typeof decoded === \\"undefined\\") continue;
      _2JPCKWTcfBmTCcW8Tv3TpRaLVaqg.push(decoded);
      
    }
    instance.#_2JPCKWTcfBmTCcW8Tv3TpRaLVaqg = _2JPCKWTcfBmTCcW8Tv3TpRaLVaqg;
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
      const _2JPCKWTcfBmTCcW8Tv3TpRaLVaqg = this.#_2JPCKWTcfBmTCcW8Tv3TpRaLVaqg
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2JPCKWTcfBmTCcW8Tv3TpRaLVaqg.length > 1
          || !(\\"item\\" in proxy)
          && _2JPCKWTcfBmTCcW8Tv3TpRaLVaqg.length > 0) {
        proxy.items = _2JPCKWTcfBmTCcW8Tv3TpRaLVaqg;
      }
      
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"OrderedCollection \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"OrderedCollection \\" + inspect(proxy, options);
  }
  }

/** Used to represent ordered subsets of items from an \`OrderedCollection\`.
 * Refer to the Activity Streams 2.0 Core for a complete description of
 * the \`OrderedCollectionPage\` object.
 * 
 */
export class OrderedCollectionPage extends CollectionPage {

    /**
     * The type URI of {@link OrderedCollectionPage}: \`https://www.w3.org/ns/activitystreams#OrderedCollectionPage\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#OrderedCollectionPage\\");
    }
  #_2W4yinFwqmpneu2h4m1mZ3pcLADd: (number)[] = [];

  /**
   * Constructs a new instance of OrderedCollectionPage with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];totalItems?: number | null;current?: CollectionPage | URL | null;first?: CollectionPage | URL | null;last?: CollectionPage | URL | null;items?: (Object | Link | URL)[];partOf?: Collection | URL | null;next?: CollectionPage | URL | null;prev?: CollectionPage | URL | null;startIndex?: number | null;}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });
        if (\\"startIndex\\" in values &&             values.startIndex != null) {
          if (typeof values.startIndex === \\"number\\" && Number.isInteger(values.startIndex) && values.startIndex >= 0) {
            // @ts-ignore: type is checked above.
            this.#_2W4yinFwqmpneu2h4m1mZ3pcLADd = [values.startIndex];
          } else {
            throw new TypeError(
              \\"The startIndex must be of type \\" +
              \\"number\\" + \\".\\",
            );
          }
        }
      }

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];totalItems?: number | null;current?: CollectionPage | URL | null;first?: CollectionPage | URL | null;last?: CollectionPage | URL | null;items?: (Object | Link | URL)[];partOf?: Collection | URL | null;next?: CollectionPage | URL | null;prev?: CollectionPage | URL | null;startIndex?: number | null;}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): OrderedCollectionPage {
  const clone = super.clone(values, options) as unknown as OrderedCollectionPage;clone.#_2W4yinFwqmpneu2h4m1mZ3pcLADd = this.#_2W4yinFwqmpneu2h4m1mZ3pcLADd;
        if (\\"startIndex\\" in values &&             values.startIndex != null) {
          if (typeof values.startIndex === \\"number\\" && Number.isInteger(values.startIndex) && values.startIndex >= 0) {
            // @ts-ignore: type is checked above.
            clone.#_2W4yinFwqmpneu2h4m1mZ3pcLADd = [values.startIndex];
          } else {
            throw new TypeError(
              \\"The startIndex must be of type \\" +
              \\"number\\" + \\".\\",
            );
          }
        }
      
    return clone;
  }
  
/** A non-negative integer value identifying the relative position within
 * the logical view of a strictly ordered collection.
 * 
 */
get startIndex(): (number | null) {
        if (this.#_2W4yinFwqmpneu2h4m1mZ3pcLADd.length < 1) return null;
        return this.#_2W4yinFwqmpneu2h4m1mZ3pcLADd[0];
      }
      
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    array = [];
    for (const v of this.#_2W4yinFwqmpneu2h4m1mZ3pcLADd) {
      const element = (
    {
        \\"@type\\": \\"http://www.w3.org/2001/XMLSchema#nonNegativeInteger\\",
        \\"@value\\": v,
      }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#startIndex\\"] = (
    array
      );
    }
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#OrderedCollectionPage\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\",{\\"toot\\":\\"http://joinmastodon.org/ns#\\",\\"sensitive\\":\\"as:sensitive\\",\\"Emoji\\":\\"toot:Emoji\\",\\"Hashtag\\":\\"as:Hashtag\\"}],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<OrderedCollectionPage> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#OrderedCollectionPage\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof OrderedCollectionPage)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    const _2W4yinFwqmpneu2h4m1mZ3pcLADd: (number)[] = [];

    const _2W4yinFwqmpneu2h4m1mZ3pcLADd__array = values[\\"https://www.w3.org/ns/activitystreams#startIndex\\"];
    for (
      const v of _2W4yinFwqmpneu2h4m1mZ3pcLADd__array == null
        ? []
        : _2W4yinFwqmpneu2h4m1mZ3pcLADd__array.length === 1 && \\"@list\\" in _2W4yinFwqmpneu2h4m1mZ3pcLADd__array[0]
        ? _2W4yinFwqmpneu2h4m1mZ3pcLADd__array[0][\\"@list\\"]
        : _2W4yinFwqmpneu2h4m1mZ3pcLADd__array
    ) {
      if (v == null) continue;
    _2W4yinFwqmpneu2h4m1mZ3pcLADd.push(v[\\"@value\\"])
    }
    instance.#_2W4yinFwqmpneu2h4m1mZ3pcLADd = _2W4yinFwqmpneu2h4m1mZ3pcLADd;
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
      const _2W4yinFwqmpneu2h4m1mZ3pcLADd = this.#_2W4yinFwqmpneu2h4m1mZ3pcLADd
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2W4yinFwqmpneu2h4m1mZ3pcLADd.length == 1) {
        proxy.startIndex = _2W4yinFwqmpneu2h4m1mZ3pcLADd[0];
      }
      
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"OrderedCollectionPage \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"OrderedCollectionPage \\" + inspect(proxy, options);
  }
  }

/** Represents an organization.
 */
export class Organization extends Object {

    /**
     * The type URI of {@link Organization}: \`https://www.w3.org/ns/activitystreams#Organization\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Organization\\");
    }
  #_3isuDgRAKSntq9XdbjiNxjwyPZAf: ((string | LanguageString))[] = [];
#_axq166E2eZADq34V4MYUc8KMZdC: (CryptographicKey | URL)[] = [];
#_4EHQFWZSz1k1d4LmPrQiMba2GbP3: (Multikey | URL)[] = [];
#_36QNc9MxfkKf6h8sEUQSHnV9NZA: (boolean)[] = [];
#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB: (OrderedCollection | URL)[] = [];
#_41QwhqJouoLg3h8dRPKat21brynC: (OrderedCollection | URL)[] = [];
#_3yAv8jymNfNuJUDuBzJ1NQhdbAee: (Collection | URL)[] = [];
#_BBCTgfphhsFzpVfKTykGSpBNwoA: (Collection | URL)[] = [];
#_3bgkPwJanyTCoVFM9ovRcus8tKkU: (Collection | URL)[] = [];
#_4N1vBJzXDf8NbBumeECQMFvKetja: (Collection | URL)[] = [];
#_2MxnRRLq9iPzx5CFq2NPrXdUDCac: (Collection | URL)[] = [];
#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9: (Collection | URL)[] = [];
#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG: (Endpoints)[] = [];
#_gAJzg1QDc4rcefFsUzGSYmyXvNH: (boolean)[] = [];
#_2kGKkJtoFWg8c18PaVSqj9NKP4t7: (boolean)[] = [];
#_79S8K4f5J9MWUgCxziRyUe6PTHZ: (boolean)[] = [];
#_2diCorzqPGQQqftp6e4SrCEwEnyk: (boolean)[] = [];

  /**
   * Constructs a new instance of Organization with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];preferredUsername?: string | LanguageString | null;
preferredUsernames?: ((string | LanguageString))[];publicKey?: CryptographicKey | URL | null;
publicKeys?: (CryptographicKey | URL)[];assertionMethod?: Multikey | URL | null;
assertionMethods?: (Multikey | URL)[];manuallyApprovesFollowers?: boolean | null;inbox?: OrderedCollection | URL | null;outbox?: OrderedCollection | URL | null;following?: Collection | URL | null;followers?: Collection | URL | null;liked?: Collection | URL | null;featured?: Collection | URL | null;featuredTags?: Collection | URL | null;streams?: (Collection | URL)[];endpoints?: Endpoints | null;discoverable?: boolean | null;suspended?: boolean | null;memorial?: boolean | null;indexable?: boolean | null;}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });
        if (\\"preferredUsername\\" in values &&             values.preferredUsername != null) {
          if (typeof values.preferredUsername === \\"string\\" || values.preferredUsername instanceof LanguageString) {
            // @ts-ignore: type is checked above.
            this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf = [values.preferredUsername];
          } else {
            throw new TypeError(
              \\"The preferredUsername must be of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      
        if (\\"preferredUsernames\\" in values &&             values.preferredUsernames != null) {
      
          if (\\"preferredUsername\\" in values &&
              values.preferredUsername != null) {
            throw new TypeError(
              \\"Cannot initialize both preferredUsername and \\" +
                \\"preferredUsernames at the same time.\\",
            );
          }
        
          if (Array.isArray(values.preferredUsernames) &&
              values.preferredUsernames.every(v => typeof v === \\"string\\" || v instanceof LanguageString)) {
            // @ts-ignore: type is checked above.
            this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf = values.preferredUsernames;
          } else {
            throw new TypeError(
              \\"The preferredUsernames must be an array of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      
        if (\\"publicKey\\" in values &&             values.publicKey != null) {
          if (values.publicKey instanceof CryptographicKey || values.publicKey instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_axq166E2eZADq34V4MYUc8KMZdC = [values.publicKey];
          } else {
            throw new TypeError(
              \\"The publicKey must be of type \\" +
              \\"CryptographicKey | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"publicKeys\\" in values &&             values.publicKeys != null) {
      
          if (\\"publicKey\\" in values &&
              values.publicKey != null) {
            throw new TypeError(
              \\"Cannot initialize both publicKey and \\" +
                \\"publicKeys at the same time.\\",
            );
          }
        
          if (Array.isArray(values.publicKeys) &&
              values.publicKeys.every(v => v instanceof CryptographicKey || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_axq166E2eZADq34V4MYUc8KMZdC = values.publicKeys;
          } else {
            throw new TypeError(
              \\"The publicKeys must be an array of type \\" +
              \\"CryptographicKey | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"assertionMethod\\" in values &&             values.assertionMethod != null) {
          if (values.assertionMethod instanceof Multikey || values.assertionMethod instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3 = [values.assertionMethod];
          } else {
            throw new TypeError(
              \\"The assertionMethod must be of type \\" +
              \\"Multikey | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"assertionMethods\\" in values &&             values.assertionMethods != null) {
      
          if (\\"assertionMethod\\" in values &&
              values.assertionMethod != null) {
            throw new TypeError(
              \\"Cannot initialize both assertionMethod and \\" +
                \\"assertionMethods at the same time.\\",
            );
          }
        
          if (Array.isArray(values.assertionMethods) &&
              values.assertionMethods.every(v => v instanceof Multikey || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3 = values.assertionMethods;
          } else {
            throw new TypeError(
              \\"The assertionMethods must be an array of type \\" +
              \\"Multikey | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"manuallyApprovesFollowers\\" in values &&             values.manuallyApprovesFollowers != null) {
          if (typeof values.manuallyApprovesFollowers === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            this.#_36QNc9MxfkKf6h8sEUQSHnV9NZA = [values.manuallyApprovesFollowers];
          } else {
            throw new TypeError(
              \\"The manuallyApprovesFollowers must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      
        if (\\"inbox\\" in values &&             values.inbox != null) {
          if (values.inbox instanceof OrderedCollection || values.inbox instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB = [values.inbox];
          } else {
            throw new TypeError(
              \\"The inbox must be of type \\" +
              \\"OrderedCollection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"outbox\\" in values &&             values.outbox != null) {
          if (values.outbox instanceof OrderedCollection || values.outbox instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_41QwhqJouoLg3h8dRPKat21brynC = [values.outbox];
          } else {
            throw new TypeError(
              \\"The outbox must be of type \\" +
              \\"OrderedCollection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"following\\" in values &&             values.following != null) {
          if (values.following instanceof Collection || values.following instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee = [values.following];
          } else {
            throw new TypeError(
              \\"The following must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"followers\\" in values &&             values.followers != null) {
          if (values.followers instanceof Collection || values.followers instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_BBCTgfphhsFzpVfKTykGSpBNwoA = [values.followers];
          } else {
            throw new TypeError(
              \\"The followers must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"liked\\" in values &&             values.liked != null) {
          if (values.liked instanceof Collection || values.liked instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU = [values.liked];
          } else {
            throw new TypeError(
              \\"The liked must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"featured\\" in values &&             values.featured != null) {
          if (values.featured instanceof Collection || values.featured instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_4N1vBJzXDf8NbBumeECQMFvKetja = [values.featured];
          } else {
            throw new TypeError(
              \\"The featured must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"featuredTags\\" in values &&             values.featuredTags != null) {
          if (values.featuredTags instanceof Collection || values.featuredTags instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac = [values.featuredTags];
          } else {
            throw new TypeError(
              \\"The featuredTags must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"streams\\" in values &&             values.streams != null) {
      
          if (Array.isArray(values.streams) &&
              values.streams.every(v => v instanceof Collection || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9 = values.streams;
          } else {
            throw new TypeError(
              \\"The streams must be an array of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"endpoints\\" in values &&             values.endpoints != null) {
          if (values.endpoints instanceof Endpoints) {
            // @ts-ignore: type is checked above.
            this.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG = [values.endpoints];
          } else {
            throw new TypeError(
              \\"The endpoints must be of type \\" +
              \\"Endpoints\\" + \\".\\",
            );
          }
        }
      
        if (\\"discoverable\\" in values &&             values.discoverable != null) {
          if (typeof values.discoverable === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            this.#_gAJzg1QDc4rcefFsUzGSYmyXvNH = [values.discoverable];
          } else {
            throw new TypeError(
              \\"The discoverable must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      
        if (\\"suspended\\" in values &&             values.suspended != null) {
          if (typeof values.suspended === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            this.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7 = [values.suspended];
          } else {
            throw new TypeError(
              \\"The suspended must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      
        if (\\"memorial\\" in values &&             values.memorial != null) {
          if (typeof values.memorial === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            this.#_79S8K4f5J9MWUgCxziRyUe6PTHZ = [values.memorial];
          } else {
            throw new TypeError(
              \\"The memorial must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      
        if (\\"indexable\\" in values &&             values.indexable != null) {
          if (typeof values.indexable === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            this.#_2diCorzqPGQQqftp6e4SrCEwEnyk = [values.indexable];
          } else {
            throw new TypeError(
              \\"The indexable must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      }

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];preferredUsername?: string | LanguageString | null;
preferredUsernames?: ((string | LanguageString))[];publicKey?: CryptographicKey | URL | null;
publicKeys?: (CryptographicKey | URL)[];assertionMethod?: Multikey | URL | null;
assertionMethods?: (Multikey | URL)[];manuallyApprovesFollowers?: boolean | null;inbox?: OrderedCollection | URL | null;outbox?: OrderedCollection | URL | null;following?: Collection | URL | null;followers?: Collection | URL | null;liked?: Collection | URL | null;featured?: Collection | URL | null;featuredTags?: Collection | URL | null;streams?: (Collection | URL)[];endpoints?: Endpoints | null;discoverable?: boolean | null;suspended?: boolean | null;memorial?: boolean | null;indexable?: boolean | null;}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Organization {
  const clone = super.clone(values, options) as unknown as Organization;clone.#_3isuDgRAKSntq9XdbjiNxjwyPZAf = this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf;
        if (\\"preferredUsername\\" in values &&             values.preferredUsername != null) {
          if (typeof values.preferredUsername === \\"string\\" || values.preferredUsername instanceof LanguageString) {
            // @ts-ignore: type is checked above.
            clone.#_3isuDgRAKSntq9XdbjiNxjwyPZAf = [values.preferredUsername];
          } else {
            throw new TypeError(
              \\"The preferredUsername must be of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      
        if (\\"preferredUsernames\\" in values &&             values.preferredUsernames != null) {
      
          if (\\"preferredUsername\\" in values &&
              values.preferredUsername != null) {
            throw new TypeError(
              \\"Cannot update both preferredUsername and \\" +
                \\"preferredUsernames at the same time.\\",
            );
          }
        
          if (Array.isArray(values.preferredUsernames) &&
              values.preferredUsernames.every(v => typeof v === \\"string\\" || v instanceof LanguageString)) {
            // @ts-ignore: type is checked above.
            clone.#_3isuDgRAKSntq9XdbjiNxjwyPZAf = values.preferredUsernames;
          } else {
            throw new TypeError(
              \\"The preferredUsernames must be an array of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      clone.#_axq166E2eZADq34V4MYUc8KMZdC = this.#_axq166E2eZADq34V4MYUc8KMZdC;
        if (\\"publicKey\\" in values &&             values.publicKey != null) {
          if (values.publicKey instanceof CryptographicKey || values.publicKey instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_axq166E2eZADq34V4MYUc8KMZdC = [values.publicKey];
          } else {
            throw new TypeError(
              \\"The publicKey must be of type \\" +
              \\"CryptographicKey | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"publicKeys\\" in values &&             values.publicKeys != null) {
      
          if (\\"publicKey\\" in values &&
              values.publicKey != null) {
            throw new TypeError(
              \\"Cannot update both publicKey and \\" +
                \\"publicKeys at the same time.\\",
            );
          }
        
          if (Array.isArray(values.publicKeys) &&
              values.publicKeys.every(v => v instanceof CryptographicKey || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_axq166E2eZADq34V4MYUc8KMZdC = values.publicKeys;
          } else {
            throw new TypeError(
              \\"The publicKeys must be an array of type \\" +
              \\"CryptographicKey | URL\\" + \\".\\",
            );
          }
        }
      clone.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3 = this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3;
        if (\\"assertionMethod\\" in values &&             values.assertionMethod != null) {
          if (values.assertionMethod instanceof Multikey || values.assertionMethod instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3 = [values.assertionMethod];
          } else {
            throw new TypeError(
              \\"The assertionMethod must be of type \\" +
              \\"Multikey | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"assertionMethods\\" in values &&             values.assertionMethods != null) {
      
          if (\\"assertionMethod\\" in values &&
              values.assertionMethod != null) {
            throw new TypeError(
              \\"Cannot update both assertionMethod and \\" +
                \\"assertionMethods at the same time.\\",
            );
          }
        
          if (Array.isArray(values.assertionMethods) &&
              values.assertionMethods.every(v => v instanceof Multikey || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3 = values.assertionMethods;
          } else {
            throw new TypeError(
              \\"The assertionMethods must be an array of type \\" +
              \\"Multikey | URL\\" + \\".\\",
            );
          }
        }
      clone.#_36QNc9MxfkKf6h8sEUQSHnV9NZA = this.#_36QNc9MxfkKf6h8sEUQSHnV9NZA;
        if (\\"manuallyApprovesFollowers\\" in values &&             values.manuallyApprovesFollowers != null) {
          if (typeof values.manuallyApprovesFollowers === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            clone.#_36QNc9MxfkKf6h8sEUQSHnV9NZA = [values.manuallyApprovesFollowers];
          } else {
            throw new TypeError(
              \\"The manuallyApprovesFollowers must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      clone.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB = this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB;
        if (\\"inbox\\" in values &&             values.inbox != null) {
          if (values.inbox instanceof OrderedCollection || values.inbox instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB = [values.inbox];
          } else {
            throw new TypeError(
              \\"The inbox must be of type \\" +
              \\"OrderedCollection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_41QwhqJouoLg3h8dRPKat21brynC = this.#_41QwhqJouoLg3h8dRPKat21brynC;
        if (\\"outbox\\" in values &&             values.outbox != null) {
          if (values.outbox instanceof OrderedCollection || values.outbox instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_41QwhqJouoLg3h8dRPKat21brynC = [values.outbox];
          } else {
            throw new TypeError(
              \\"The outbox must be of type \\" +
              \\"OrderedCollection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee = this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee;
        if (\\"following\\" in values &&             values.following != null) {
          if (values.following instanceof Collection || values.following instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee = [values.following];
          } else {
            throw new TypeError(
              \\"The following must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_BBCTgfphhsFzpVfKTykGSpBNwoA = this.#_BBCTgfphhsFzpVfKTykGSpBNwoA;
        if (\\"followers\\" in values &&             values.followers != null) {
          if (values.followers instanceof Collection || values.followers instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_BBCTgfphhsFzpVfKTykGSpBNwoA = [values.followers];
          } else {
            throw new TypeError(
              \\"The followers must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_3bgkPwJanyTCoVFM9ovRcus8tKkU = this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU;
        if (\\"liked\\" in values &&             values.liked != null) {
          if (values.liked instanceof Collection || values.liked instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_3bgkPwJanyTCoVFM9ovRcus8tKkU = [values.liked];
          } else {
            throw new TypeError(
              \\"The liked must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_4N1vBJzXDf8NbBumeECQMFvKetja = this.#_4N1vBJzXDf8NbBumeECQMFvKetja;
        if (\\"featured\\" in values &&             values.featured != null) {
          if (values.featured instanceof Collection || values.featured instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_4N1vBJzXDf8NbBumeECQMFvKetja = [values.featured];
          } else {
            throw new TypeError(
              \\"The featured must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac = this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac;
        if (\\"featuredTags\\" in values &&             values.featuredTags != null) {
          if (values.featuredTags instanceof Collection || values.featuredTags instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac = [values.featuredTags];
          } else {
            throw new TypeError(
              \\"The featuredTags must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9 = this.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9;
        if (\\"streams\\" in values &&             values.streams != null) {
      
          if (Array.isArray(values.streams) &&
              values.streams.every(v => v instanceof Collection || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9 = values.streams;
          } else {
            throw new TypeError(
              \\"The streams must be an array of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG = this.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG;
        if (\\"endpoints\\" in values &&             values.endpoints != null) {
          if (values.endpoints instanceof Endpoints) {
            // @ts-ignore: type is checked above.
            clone.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG = [values.endpoints];
          } else {
            throw new TypeError(
              \\"The endpoints must be of type \\" +
              \\"Endpoints\\" + \\".\\",
            );
          }
        }
      clone.#_gAJzg1QDc4rcefFsUzGSYmyXvNH = this.#_gAJzg1QDc4rcefFsUzGSYmyXvNH;
        if (\\"discoverable\\" in values &&             values.discoverable != null) {
          if (typeof values.discoverable === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            clone.#_gAJzg1QDc4rcefFsUzGSYmyXvNH = [values.discoverable];
          } else {
            throw new TypeError(
              \\"The discoverable must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      clone.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7 = this.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7;
        if (\\"suspended\\" in values &&             values.suspended != null) {
          if (typeof values.suspended === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            clone.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7 = [values.suspended];
          } else {
            throw new TypeError(
              \\"The suspended must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      clone.#_79S8K4f5J9MWUgCxziRyUe6PTHZ = this.#_79S8K4f5J9MWUgCxziRyUe6PTHZ;
        if (\\"memorial\\" in values &&             values.memorial != null) {
          if (typeof values.memorial === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            clone.#_79S8K4f5J9MWUgCxziRyUe6PTHZ = [values.memorial];
          } else {
            throw new TypeError(
              \\"The memorial must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      clone.#_2diCorzqPGQQqftp6e4SrCEwEnyk = this.#_2diCorzqPGQQqftp6e4SrCEwEnyk;
        if (\\"indexable\\" in values &&             values.indexable != null) {
          if (typeof values.indexable === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            clone.#_2diCorzqPGQQqftp6e4SrCEwEnyk = [values.indexable];
          } else {
            throw new TypeError(
              \\"The indexable must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      
    return clone;
  }
  
/** A short username which may be used to refer to the actor,
 * with no uniqueness guarantees.
 * 
 */
get preferredUsername(): (string | LanguageString | null) {
        if (this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf.length < 1) return null;
        return this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf[0];
      }
      
/** A short username which may be used to refer to the actor,
 * with no uniqueness guarantees.
 * 
 */
get preferredUsernames(): ((string | LanguageString))[] {
        return this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf;
      }
      
    async #fetchPublicKey(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<CryptographicKey | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await CryptographicKey.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://w3id.org/security#Key\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Organization.getPublicKey},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get publicKeyId(): URL | null {
        if (this.#_axq166E2eZADq34V4MYUc8KMZdC.length < 1) return null;
        const v = this.#_axq166E2eZADq34V4MYUc8KMZdC[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** A public part of the key pair owned by this actor.
 */

      async getPublicKey(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<CryptographicKey | null> {
        if (this.#_axq166E2eZADq34V4MYUc8KMZdC.length < 1) return null;
        const v = this.#_axq166E2eZADq34V4MYUc8KMZdC[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchPublicKey(v, options);
          if (fetched == null) return null;
          this.#_axq166E2eZADq34V4MYUc8KMZdC[0] = fetched;
          return fetched;
        }
        return v;
      }
      
      /**
       * Similar to
       * {@link Organization.getPublicKeys},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get publicKeyIds(): URL[] {
        return this.#_axq166E2eZADq34V4MYUc8KMZdC.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** A public part of the key pair owned by this actor.
 */

      async* getPublicKeys(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<CryptographicKey> {
        const vs = this.#_axq166E2eZADq34V4MYUc8KMZdC;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchPublicKey(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
    async #fetchAssertionMethod(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Multikey | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Multikey.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://w3id.org/security#Multikey\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Organization.getAssertionMethod},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get assertionMethodId(): URL | null {
        if (this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3.length < 1) return null;
        const v = this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** Represents this actor's public keys.  It serves as equivalent to
 * the \`publicKeys\` property, but is used for [FEP-521a] compliance.
 * 
 * [FEP-521a]: https://codeberg.org/fediverse/fep/src/branch/main/fep/521a/fep-521a.md
 * 
 */

      async getAssertionMethod(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Multikey | null> {
        if (this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3.length < 1) return null;
        const v = this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchAssertionMethod(v, options);
          if (fetched == null) return null;
          this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3[0] = fetched;
          return fetched;
        }
        return v;
      }
      
      /**
       * Similar to
       * {@link Organization.getAssertionMethods},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get assertionMethodIds(): URL[] {
        return this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** Represents this actor's public keys.  It serves as equivalent to
 * the \`publicKeys\` property, but is used for [FEP-521a] compliance.
 * 
 * [FEP-521a]: https://codeberg.org/fediverse/fep/src/branch/main/fep/521a/fep-521a.md
 * 
 */

      async* getAssertionMethods(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Multikey> {
        const vs = this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchAssertionMethod(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
/** When \`true\`, conveys that for this actor, follow requests are not usually
 * automatically approved, but instead are examined by a person who may accept
 * or reject the request, at some time in the future.  Setting of \`false\`
 * conveys no information and may be ignored.  This information is typically
 * used to affect display of accounts, such as showing an account as private or
 * locked.
 * 
 */
get manuallyApprovesFollowers(): (boolean | null) {
        if (this.#_36QNc9MxfkKf6h8sEUQSHnV9NZA.length < 1) return null;
        return this.#_36QNc9MxfkKf6h8sEUQSHnV9NZA[0];
      }
      
    async #fetchInbox(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<OrderedCollection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await OrderedCollection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#OrderedCollection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Organization.getInbox},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get inboxId(): URL | null {
        if (this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB.length < 1) return null;
        const v = this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** The inbox stream contains all activities received by the actor.  The server
 * SHOULD filter content according to the requester's permission.  In general,
 * the owner of an inbox is likely to be able to access all of their inbox
 * contents.  Depending on access control, some other content may be public,
 * whereas other content may require authentication for non-owner users,
 * if they can access the inbox at all.
 * 
 * The server MUST perform de-duplication of activities returned by the inbox.
 * Duplication can occur if an activity is addressed both to an actor's
 * followers, and a specific actor who also follows the recipient actor,
 * and the server has failed to de-duplicate the recipients list.
 * Such deduplication MUST be performed by comparing the \`id\` of the activities
 * and dropping any activities already seen.
 * 
 */

      async getInbox(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<OrderedCollection | null> {
        if (this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB.length < 1) return null;
        const v = this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchInbox(v, options);
          if (fetched == null) return null;
          this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchOutbox(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<OrderedCollection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await OrderedCollection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#OrderedCollection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Organization.getOutbox},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get outboxId(): URL | null {
        if (this.#_41QwhqJouoLg3h8dRPKat21brynC.length < 1) return null;
        const v = this.#_41QwhqJouoLg3h8dRPKat21brynC[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** The outbox stream contains activities the user has published,
 * subject to the ability of the requestor to retrieve the activity
 * (that is, the contents of the outbox are filtered by the permissions of
 * the person reading it).  If a user submits a request without
 * [Authorization](https://www.w3.org/TR/activitypub/#authorization)
 * the server should respond with all of the
 * [Public](https://www.w3.org/TR/activitypub/#public-addressing) posts.
 * This could potentially be all relevant objects published by the user,
 * though the number of available items is left to the discretion of those
 * implementing and deploying the server.
 * 
 */

      async getOutbox(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<OrderedCollection | null> {
        if (this.#_41QwhqJouoLg3h8dRPKat21brynC.length < 1) return null;
        const v = this.#_41QwhqJouoLg3h8dRPKat21brynC[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchOutbox(v, options);
          if (fetched == null) return null;
          this.#_41QwhqJouoLg3h8dRPKat21brynC[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchFollowing(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Collection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Collection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Collection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Organization.getFollowing},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get followingId(): URL | null {
        if (this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee.length < 1) return null;
        const v = this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** This is a list of everybody that the actor has followed, added as a
 * [side effect](https://www.w3.org/TR/activitypub/#follow-activity-outbox).
 * The \`following\` collection MUST be either an {@link OrderedCollection}
 * or a {@link Collection} and MAY be filtered on privileges of
 * an authenticated user or as appropriate when no authentication is given.
 * 
 */

      async getFollowing(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Collection | null> {
        if (this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee.length < 1) return null;
        const v = this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchFollowing(v, options);
          if (fetched == null) return null;
          this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchFollowers(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Collection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Collection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Collection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Organization.getFollowers},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get followersId(): URL | null {
        if (this.#_BBCTgfphhsFzpVfKTykGSpBNwoA.length < 1) return null;
        const v = this.#_BBCTgfphhsFzpVfKTykGSpBNwoA[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** This is a list of everyone who has sent a {@link Follow} activity
 * for the actor, added as a
 * [side effect](https://www.w3.org/TR/activitypub/#follow-activity-outbox).
 * This is where one would find a list of all the actors that are following
 * the actor.  The \`followers\` collection MUST be either
 * an {@link OrderedCollection} or a {@link Collection} and MAY be filtered on
 * privileges of an authenticated user or as appropriate when no authentication
 * is given.
 * 
 */

      async getFollowers(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Collection | null> {
        if (this.#_BBCTgfphhsFzpVfKTykGSpBNwoA.length < 1) return null;
        const v = this.#_BBCTgfphhsFzpVfKTykGSpBNwoA[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchFollowers(v, options);
          if (fetched == null) return null;
          this.#_BBCTgfphhsFzpVfKTykGSpBNwoA[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchLiked(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Collection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Collection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Collection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Organization.getLiked},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get likedId(): URL | null {
        if (this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU.length < 1) return null;
        const v = this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** This is a list of every object from all of the actor's {@link Like}
 * activities, added as a
 * [side effect](https://www.w3.org/TR/activitypub/#like-activity-outbox).
 * The \`liked\` collection MUST be either an {@link OrderedCollection} or
 * a {@link Collection} and MAY be filtered on privileges of an authenticated
 * user or as appropriate when no authentication is given.
 * 
 */

      async getLiked(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Collection | null> {
        if (this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU.length < 1) return null;
        const v = this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchLiked(v, options);
          if (fetched == null) return null;
          this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchFeatured(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Collection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Collection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Collection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Organization.getFeatured},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get featuredId(): URL | null {
        if (this.#_4N1vBJzXDf8NbBumeECQMFvKetja.length < 1) return null;
        const v = this.#_4N1vBJzXDf8NbBumeECQMFvKetja[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** What is known in Mastodon as \\"pinned statuses\\", or statuses that are always
 * featured at the top of people's profiles, is implemented using an extra
 * property \`featured\` on the actor object that points to a {@link Collection}
 * of objects.
 * 
 */

      async getFeatured(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Collection | null> {
        if (this.#_4N1vBJzXDf8NbBumeECQMFvKetja.length < 1) return null;
        const v = this.#_4N1vBJzXDf8NbBumeECQMFvKetja[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchFeatured(v, options);
          if (fetched == null) return null;
          this.#_4N1vBJzXDf8NbBumeECQMFvKetja[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchFeaturedTags(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Collection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Collection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Collection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Organization.getFeaturedTags},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get featuredTagsId(): URL | null {
        if (this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac.length < 1) return null;
        const v = this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** What is known in Mastodon as \\"featured hashtags\\", hashtags that are featured
 * at people's profiles, is implemented using an extra property \`featuredTags\`
 * on the actor object that points to a {@link Collection} of {@link Hashtag}
 * objects specifically.
 * 
 */

      async getFeaturedTags(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Collection | null> {
        if (this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac.length < 1) return null;
        const v = this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchFeaturedTags(v, options);
          if (fetched == null) return null;
          this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchStream(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Collection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Collection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Collection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Organization.getStreams},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get streamIds(): URL[] {
        return this.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** A list of supplementary Collections which may be of interest.
 * 
 */

      async* getStreams(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Collection> {
        const vs = this.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchStream(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
/** A JSON object which maps additional (typically server/domain-wide) endpoints
 * which may be useful either for this actor or someone referencing this actor.
 * This mapping may be nested inside the actor document as the value or may be
 * a link to a JSON-LD document with these properties.
 * 
 */
get endpoints(): (Endpoints | null) {
        if (this.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG.length < 1) return null;
        return this.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG[0];
      }
      
/** Allows users to opt-in or opt-out of discoverability features like
 * the profile directory.  This flag may also be used as an indicator of
 * the user's preferences toward being included in external discovery services,
 * such as search engines or other indexing tools.
 * 
 */
get discoverable(): (boolean | null) {
        if (this.#_gAJzg1QDc4rcefFsUzGSYmyXvNH.length < 1) return null;
        return this.#_gAJzg1QDc4rcefFsUzGSYmyXvNH[0];
      }
      
/** Reports whether a user was locally suspended, for better handling of
 * these accounts.
 * 
 */
get suspended(): (boolean | null) {
        if (this.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7.length < 1) return null;
        return this.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7[0];
      }
      
/** Whether the actor is in-memorial state.
 */
get memorial(): (boolean | null) {
        if (this.#_79S8K4f5J9MWUgCxziRyUe6PTHZ.length < 1) return null;
        return this.#_79S8K4f5J9MWUgCxziRyUe6PTHZ[0];
      }
      
/** Whether the actor allows to be indexed.
 */
get indexable(): (boolean | null) {
        if (this.#_2diCorzqPGQQqftp6e4SrCEwEnyk.length < 1) return null;
        return this.#_2diCorzqPGQQqftp6e4SrCEwEnyk[0];
      }
      
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    array = [];
    for (const v of this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf) {
      const element = (
    typeof v === \\"string\\" ? { \\"@value\\": v } : {
        \\"@value\\": v.toString(),
        \\"@language\\": v.language.compact(),
      }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#preferredUsername\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_axq166E2eZADq34V4MYUc8KMZdC) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://w3id.org/security#publicKey\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://w3id.org/security#assertionMethod\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_36QNc9MxfkKf6h8sEUQSHnV9NZA) {
      const element = (
    { \\"@value\\": v }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#manuallyApprovesFollowers\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://www.w3.org/ns/ldp#inbox\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_41QwhqJouoLg3h8dRPKat21brynC) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#outbox\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#following\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_BBCTgfphhsFzpVfKTykGSpBNwoA) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#followers\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#liked\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_4N1vBJzXDf8NbBumeECQMFvKetja) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://joinmastodon.org/ns#featured\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://joinmastodon.org/ns#featuredTags\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#streams\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG) {
      const element = (
    await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#endpoints\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_gAJzg1QDc4rcefFsUzGSYmyXvNH) {
      const element = (
    { \\"@value\\": v }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://joinmastodon.org/ns#discoverable\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7) {
      const element = (
    { \\"@value\\": v }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://joinmastodon.org/ns#suspended\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_79S8K4f5J9MWUgCxziRyUe6PTHZ) {
      const element = (
    { \\"@value\\": v }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://joinmastodon.org/ns#memorial\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_2diCorzqPGQQqftp6e4SrCEwEnyk) {
      const element = (
    { \\"@value\\": v }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://joinmastodon.org/ns#indexable\\"] = (
    array
      );
    }
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Organization\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/v1\\",\\"https://w3id.org/security/data-integrity/v1\\",\\"https://www.w3.org/ns/did/v1\\",\\"https://w3id.org/security/multikey/v1\\",{\\"manuallyApprovesFollowers\\":\\"as:manuallyApprovesFollowers\\",\\"toot\\":\\"http://joinmastodon.org/ns#\\",\\"featured\\":{\\"@id\\":\\"toot:featured\\",\\"@type\\":\\"@id\\"},\\"featuredTags\\":{\\"@id\\":\\"toot:featuredTags\\",\\"@type\\":\\"@id\\"},\\"discoverable\\":\\"toot:discoverable\\",\\"suspended\\":\\"toot:suspended\\",\\"memorial\\":\\"toot:memorial\\",\\"indexable\\":\\"toot:indexable\\",\\"schema\\":\\"http://schema.org#\\",\\"PropertyValue\\":\\"schema:PropertyValue\\",\\"value\\":\\"schema:value\\"}],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Organization> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Organization\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Organization)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    const _3isuDgRAKSntq9XdbjiNxjwyPZAf: ((string | LanguageString))[] = [];

    const _3isuDgRAKSntq9XdbjiNxjwyPZAf__array = values[\\"https://www.w3.org/ns/activitystreams#preferredUsername\\"];
    for (
      const v of _3isuDgRAKSntq9XdbjiNxjwyPZAf__array == null
        ? []
        : _3isuDgRAKSntq9XdbjiNxjwyPZAf__array.length === 1 && \\"@list\\" in _3isuDgRAKSntq9XdbjiNxjwyPZAf__array[0]
        ? _3isuDgRAKSntq9XdbjiNxjwyPZAf__array[0][\\"@list\\"]
        : _3isuDgRAKSntq9XdbjiNxjwyPZAf__array
    ) {
      if (v == null) continue;
    
      const decoded =
      typeof v === \\"object\\" && \\"@value\\" in v
        && typeof v[\\"@value\\"] === \\"string\\" && !(\\"@language\\" in v) ? v[\\"@value\\"] : typeof v === \\"object\\" && \\"@language\\" in v && \\"@value\\" in v
        && typeof v[\\"@language\\"] === \\"string\\"
        && typeof v[\\"@value\\"] === \\"string\\" ? new LanguageString(v[\\"@value\\"], v[\\"@language\\"]) : undefined
      ;
      if (typeof decoded === \\"undefined\\") continue;
      _3isuDgRAKSntq9XdbjiNxjwyPZAf.push(decoded);
      
    }
    instance.#_3isuDgRAKSntq9XdbjiNxjwyPZAf = _3isuDgRAKSntq9XdbjiNxjwyPZAf;
    const _axq166E2eZADq34V4MYUc8KMZdC: (CryptographicKey | URL)[] = [];

    const _axq166E2eZADq34V4MYUc8KMZdC__array = values[\\"https://w3id.org/security#publicKey\\"];
    for (
      const v of _axq166E2eZADq34V4MYUc8KMZdC__array == null
        ? []
        : _axq166E2eZADq34V4MYUc8KMZdC__array.length === 1 && \\"@list\\" in _axq166E2eZADq34V4MYUc8KMZdC__array[0]
        ? _axq166E2eZADq34V4MYUc8KMZdC__array[0][\\"@list\\"]
        : _axq166E2eZADq34V4MYUc8KMZdC__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _axq166E2eZADq34V4MYUc8KMZdC.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _axq166E2eZADq34V4MYUc8KMZdC.push(await CryptographicKey.fromJsonLd(
      v, options))
    }
    instance.#_axq166E2eZADq34V4MYUc8KMZdC = _axq166E2eZADq34V4MYUc8KMZdC;
    const _4EHQFWZSz1k1d4LmPrQiMba2GbP3: (Multikey | URL)[] = [];

    const _4EHQFWZSz1k1d4LmPrQiMba2GbP3__array = values[\\"https://w3id.org/security#assertionMethod\\"];
    for (
      const v of _4EHQFWZSz1k1d4LmPrQiMba2GbP3__array == null
        ? []
        : _4EHQFWZSz1k1d4LmPrQiMba2GbP3__array.length === 1 && \\"@list\\" in _4EHQFWZSz1k1d4LmPrQiMba2GbP3__array[0]
        ? _4EHQFWZSz1k1d4LmPrQiMba2GbP3__array[0][\\"@list\\"]
        : _4EHQFWZSz1k1d4LmPrQiMba2GbP3__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _4EHQFWZSz1k1d4LmPrQiMba2GbP3.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _4EHQFWZSz1k1d4LmPrQiMba2GbP3.push(await Multikey.fromJsonLd(
      v, options))
    }
    instance.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3 = _4EHQFWZSz1k1d4LmPrQiMba2GbP3;
    const _36QNc9MxfkKf6h8sEUQSHnV9NZA: (boolean)[] = [];

    const _36QNc9MxfkKf6h8sEUQSHnV9NZA__array = values[\\"https://www.w3.org/ns/activitystreams#manuallyApprovesFollowers\\"];
    for (
      const v of _36QNc9MxfkKf6h8sEUQSHnV9NZA__array == null
        ? []
        : _36QNc9MxfkKf6h8sEUQSHnV9NZA__array.length === 1 && \\"@list\\" in _36QNc9MxfkKf6h8sEUQSHnV9NZA__array[0]
        ? _36QNc9MxfkKf6h8sEUQSHnV9NZA__array[0][\\"@list\\"]
        : _36QNc9MxfkKf6h8sEUQSHnV9NZA__array
    ) {
      if (v == null) continue;
    _36QNc9MxfkKf6h8sEUQSHnV9NZA.push(v[\\"@value\\"])
    }
    instance.#_36QNc9MxfkKf6h8sEUQSHnV9NZA = _36QNc9MxfkKf6h8sEUQSHnV9NZA;
    const _3ghX3VfZXXbLvhCRH7QJqpzLrXjB: (OrderedCollection | URL)[] = [];

    const _3ghX3VfZXXbLvhCRH7QJqpzLrXjB__array = values[\\"http://www.w3.org/ns/ldp#inbox\\"];
    for (
      const v of _3ghX3VfZXXbLvhCRH7QJqpzLrXjB__array == null
        ? []
        : _3ghX3VfZXXbLvhCRH7QJqpzLrXjB__array.length === 1 && \\"@list\\" in _3ghX3VfZXXbLvhCRH7QJqpzLrXjB__array[0]
        ? _3ghX3VfZXXbLvhCRH7QJqpzLrXjB__array[0][\\"@list\\"]
        : _3ghX3VfZXXbLvhCRH7QJqpzLrXjB__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _3ghX3VfZXXbLvhCRH7QJqpzLrXjB.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _3ghX3VfZXXbLvhCRH7QJqpzLrXjB.push(await OrderedCollection.fromJsonLd(
      v, options))
    }
    instance.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB = _3ghX3VfZXXbLvhCRH7QJqpzLrXjB;
    const _41QwhqJouoLg3h8dRPKat21brynC: (OrderedCollection | URL)[] = [];

    const _41QwhqJouoLg3h8dRPKat21brynC__array = values[\\"https://www.w3.org/ns/activitystreams#outbox\\"];
    for (
      const v of _41QwhqJouoLg3h8dRPKat21brynC__array == null
        ? []
        : _41QwhqJouoLg3h8dRPKat21brynC__array.length === 1 && \\"@list\\" in _41QwhqJouoLg3h8dRPKat21brynC__array[0]
        ? _41QwhqJouoLg3h8dRPKat21brynC__array[0][\\"@list\\"]
        : _41QwhqJouoLg3h8dRPKat21brynC__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _41QwhqJouoLg3h8dRPKat21brynC.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _41QwhqJouoLg3h8dRPKat21brynC.push(await OrderedCollection.fromJsonLd(
      v, options))
    }
    instance.#_41QwhqJouoLg3h8dRPKat21brynC = _41QwhqJouoLg3h8dRPKat21brynC;
    const _3yAv8jymNfNuJUDuBzJ1NQhdbAee: (Collection | URL)[] = [];

    const _3yAv8jymNfNuJUDuBzJ1NQhdbAee__array = values[\\"https://www.w3.org/ns/activitystreams#following\\"];
    for (
      const v of _3yAv8jymNfNuJUDuBzJ1NQhdbAee__array == null
        ? []
        : _3yAv8jymNfNuJUDuBzJ1NQhdbAee__array.length === 1 && \\"@list\\" in _3yAv8jymNfNuJUDuBzJ1NQhdbAee__array[0]
        ? _3yAv8jymNfNuJUDuBzJ1NQhdbAee__array[0][\\"@list\\"]
        : _3yAv8jymNfNuJUDuBzJ1NQhdbAee__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _3yAv8jymNfNuJUDuBzJ1NQhdbAee.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _3yAv8jymNfNuJUDuBzJ1NQhdbAee.push(await Collection.fromJsonLd(
      v, options))
    }
    instance.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee = _3yAv8jymNfNuJUDuBzJ1NQhdbAee;
    const _BBCTgfphhsFzpVfKTykGSpBNwoA: (Collection | URL)[] = [];

    const _BBCTgfphhsFzpVfKTykGSpBNwoA__array = values[\\"https://www.w3.org/ns/activitystreams#followers\\"];
    for (
      const v of _BBCTgfphhsFzpVfKTykGSpBNwoA__array == null
        ? []
        : _BBCTgfphhsFzpVfKTykGSpBNwoA__array.length === 1 && \\"@list\\" in _BBCTgfphhsFzpVfKTykGSpBNwoA__array[0]
        ? _BBCTgfphhsFzpVfKTykGSpBNwoA__array[0][\\"@list\\"]
        : _BBCTgfphhsFzpVfKTykGSpBNwoA__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _BBCTgfphhsFzpVfKTykGSpBNwoA.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _BBCTgfphhsFzpVfKTykGSpBNwoA.push(await Collection.fromJsonLd(
      v, options))
    }
    instance.#_BBCTgfphhsFzpVfKTykGSpBNwoA = _BBCTgfphhsFzpVfKTykGSpBNwoA;
    const _3bgkPwJanyTCoVFM9ovRcus8tKkU: (Collection | URL)[] = [];

    const _3bgkPwJanyTCoVFM9ovRcus8tKkU__array = values[\\"https://www.w3.org/ns/activitystreams#liked\\"];
    for (
      const v of _3bgkPwJanyTCoVFM9ovRcus8tKkU__array == null
        ? []
        : _3bgkPwJanyTCoVFM9ovRcus8tKkU__array.length === 1 && \\"@list\\" in _3bgkPwJanyTCoVFM9ovRcus8tKkU__array[0]
        ? _3bgkPwJanyTCoVFM9ovRcus8tKkU__array[0][\\"@list\\"]
        : _3bgkPwJanyTCoVFM9ovRcus8tKkU__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _3bgkPwJanyTCoVFM9ovRcus8tKkU.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _3bgkPwJanyTCoVFM9ovRcus8tKkU.push(await Collection.fromJsonLd(
      v, options))
    }
    instance.#_3bgkPwJanyTCoVFM9ovRcus8tKkU = _3bgkPwJanyTCoVFM9ovRcus8tKkU;
    const _4N1vBJzXDf8NbBumeECQMFvKetja: (Collection | URL)[] = [];

    const _4N1vBJzXDf8NbBumeECQMFvKetja__array = values[\\"http://joinmastodon.org/ns#featured\\"];
    for (
      const v of _4N1vBJzXDf8NbBumeECQMFvKetja__array == null
        ? []
        : _4N1vBJzXDf8NbBumeECQMFvKetja__array.length === 1 && \\"@list\\" in _4N1vBJzXDf8NbBumeECQMFvKetja__array[0]
        ? _4N1vBJzXDf8NbBumeECQMFvKetja__array[0][\\"@list\\"]
        : _4N1vBJzXDf8NbBumeECQMFvKetja__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _4N1vBJzXDf8NbBumeECQMFvKetja.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _4N1vBJzXDf8NbBumeECQMFvKetja.push(await Collection.fromJsonLd(
      v, options))
    }
    instance.#_4N1vBJzXDf8NbBumeECQMFvKetja = _4N1vBJzXDf8NbBumeECQMFvKetja;
    const _2MxnRRLq9iPzx5CFq2NPrXdUDCac: (Collection | URL)[] = [];

    const _2MxnRRLq9iPzx5CFq2NPrXdUDCac__array = values[\\"http://joinmastodon.org/ns#featuredTags\\"];
    for (
      const v of _2MxnRRLq9iPzx5CFq2NPrXdUDCac__array == null
        ? []
        : _2MxnRRLq9iPzx5CFq2NPrXdUDCac__array.length === 1 && \\"@list\\" in _2MxnRRLq9iPzx5CFq2NPrXdUDCac__array[0]
        ? _2MxnRRLq9iPzx5CFq2NPrXdUDCac__array[0][\\"@list\\"]
        : _2MxnRRLq9iPzx5CFq2NPrXdUDCac__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _2MxnRRLq9iPzx5CFq2NPrXdUDCac.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _2MxnRRLq9iPzx5CFq2NPrXdUDCac.push(await Collection.fromJsonLd(
      v, options))
    }
    instance.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac = _2MxnRRLq9iPzx5CFq2NPrXdUDCac;
    const _3sG2Hdwn9qzKGu9mpYkqakAMUkH9: (Collection | URL)[] = [];

    const _3sG2Hdwn9qzKGu9mpYkqakAMUkH9__array = values[\\"https://www.w3.org/ns/activitystreams#streams\\"];
    for (
      const v of _3sG2Hdwn9qzKGu9mpYkqakAMUkH9__array == null
        ? []
        : _3sG2Hdwn9qzKGu9mpYkqakAMUkH9__array.length === 1 && \\"@list\\" in _3sG2Hdwn9qzKGu9mpYkqakAMUkH9__array[0]
        ? _3sG2Hdwn9qzKGu9mpYkqakAMUkH9__array[0][\\"@list\\"]
        : _3sG2Hdwn9qzKGu9mpYkqakAMUkH9__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _3sG2Hdwn9qzKGu9mpYkqakAMUkH9.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _3sG2Hdwn9qzKGu9mpYkqakAMUkH9.push(await Collection.fromJsonLd(
      v, options))
    }
    instance.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9 = _3sG2Hdwn9qzKGu9mpYkqakAMUkH9;
    const _sEoQwUbfk4hEfugzNQ2ZiDcLMkG: (Endpoints)[] = [];

    const _sEoQwUbfk4hEfugzNQ2ZiDcLMkG__array = values[\\"https://www.w3.org/ns/activitystreams#endpoints\\"];
    for (
      const v of _sEoQwUbfk4hEfugzNQ2ZiDcLMkG__array == null
        ? []
        : _sEoQwUbfk4hEfugzNQ2ZiDcLMkG__array.length === 1 && \\"@list\\" in _sEoQwUbfk4hEfugzNQ2ZiDcLMkG__array[0]
        ? _sEoQwUbfk4hEfugzNQ2ZiDcLMkG__array[0][\\"@list\\"]
        : _sEoQwUbfk4hEfugzNQ2ZiDcLMkG__array
    ) {
      if (v == null) continue;
    _sEoQwUbfk4hEfugzNQ2ZiDcLMkG.push(await Endpoints.fromJsonLd(
      v, options))
    }
    instance.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG = _sEoQwUbfk4hEfugzNQ2ZiDcLMkG;
    const _gAJzg1QDc4rcefFsUzGSYmyXvNH: (boolean)[] = [];

    const _gAJzg1QDc4rcefFsUzGSYmyXvNH__array = values[\\"http://joinmastodon.org/ns#discoverable\\"];
    for (
      const v of _gAJzg1QDc4rcefFsUzGSYmyXvNH__array == null
        ? []
        : _gAJzg1QDc4rcefFsUzGSYmyXvNH__array.length === 1 && \\"@list\\" in _gAJzg1QDc4rcefFsUzGSYmyXvNH__array[0]
        ? _gAJzg1QDc4rcefFsUzGSYmyXvNH__array[0][\\"@list\\"]
        : _gAJzg1QDc4rcefFsUzGSYmyXvNH__array
    ) {
      if (v == null) continue;
    _gAJzg1QDc4rcefFsUzGSYmyXvNH.push(v[\\"@value\\"])
    }
    instance.#_gAJzg1QDc4rcefFsUzGSYmyXvNH = _gAJzg1QDc4rcefFsUzGSYmyXvNH;
    const _2kGKkJtoFWg8c18PaVSqj9NKP4t7: (boolean)[] = [];

    const _2kGKkJtoFWg8c18PaVSqj9NKP4t7__array = values[\\"http://joinmastodon.org/ns#suspended\\"];
    for (
      const v of _2kGKkJtoFWg8c18PaVSqj9NKP4t7__array == null
        ? []
        : _2kGKkJtoFWg8c18PaVSqj9NKP4t7__array.length === 1 && \\"@list\\" in _2kGKkJtoFWg8c18PaVSqj9NKP4t7__array[0]
        ? _2kGKkJtoFWg8c18PaVSqj9NKP4t7__array[0][\\"@list\\"]
        : _2kGKkJtoFWg8c18PaVSqj9NKP4t7__array
    ) {
      if (v == null) continue;
    _2kGKkJtoFWg8c18PaVSqj9NKP4t7.push(v[\\"@value\\"])
    }
    instance.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7 = _2kGKkJtoFWg8c18PaVSqj9NKP4t7;
    const _79S8K4f5J9MWUgCxziRyUe6PTHZ: (boolean)[] = [];

    const _79S8K4f5J9MWUgCxziRyUe6PTHZ__array = values[\\"http://joinmastodon.org/ns#memorial\\"];
    for (
      const v of _79S8K4f5J9MWUgCxziRyUe6PTHZ__array == null
        ? []
        : _79S8K4f5J9MWUgCxziRyUe6PTHZ__array.length === 1 && \\"@list\\" in _79S8K4f5J9MWUgCxziRyUe6PTHZ__array[0]
        ? _79S8K4f5J9MWUgCxziRyUe6PTHZ__array[0][\\"@list\\"]
        : _79S8K4f5J9MWUgCxziRyUe6PTHZ__array
    ) {
      if (v == null) continue;
    _79S8K4f5J9MWUgCxziRyUe6PTHZ.push(v[\\"@value\\"])
    }
    instance.#_79S8K4f5J9MWUgCxziRyUe6PTHZ = _79S8K4f5J9MWUgCxziRyUe6PTHZ;
    const _2diCorzqPGQQqftp6e4SrCEwEnyk: (boolean)[] = [];

    const _2diCorzqPGQQqftp6e4SrCEwEnyk__array = values[\\"http://joinmastodon.org/ns#indexable\\"];
    for (
      const v of _2diCorzqPGQQqftp6e4SrCEwEnyk__array == null
        ? []
        : _2diCorzqPGQQqftp6e4SrCEwEnyk__array.length === 1 && \\"@list\\" in _2diCorzqPGQQqftp6e4SrCEwEnyk__array[0]
        ? _2diCorzqPGQQqftp6e4SrCEwEnyk__array[0][\\"@list\\"]
        : _2diCorzqPGQQqftp6e4SrCEwEnyk__array
    ) {
      if (v == null) continue;
    _2diCorzqPGQQqftp6e4SrCEwEnyk.push(v[\\"@value\\"])
    }
    instance.#_2diCorzqPGQQqftp6e4SrCEwEnyk = _2diCorzqPGQQqftp6e4SrCEwEnyk;
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
      const _3isuDgRAKSntq9XdbjiNxjwyPZAf = this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3isuDgRAKSntq9XdbjiNxjwyPZAf.length == 1) {
        proxy.preferredUsername = _3isuDgRAKSntq9XdbjiNxjwyPZAf[0];
      }
      
      if (_3isuDgRAKSntq9XdbjiNxjwyPZAf.length > 1
          || !(\\"preferredUsername\\" in proxy)
          && _3isuDgRAKSntq9XdbjiNxjwyPZAf.length > 0) {
        proxy.preferredUsernames = _3isuDgRAKSntq9XdbjiNxjwyPZAf;
      }
      
      const _axq166E2eZADq34V4MYUc8KMZdC = this.#_axq166E2eZADq34V4MYUc8KMZdC
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_axq166E2eZADq34V4MYUc8KMZdC.length == 1) {
        proxy.publicKey = _axq166E2eZADq34V4MYUc8KMZdC[0];
      }
      
      if (_axq166E2eZADq34V4MYUc8KMZdC.length > 1
          || !(\\"publicKey\\" in proxy)
          && _axq166E2eZADq34V4MYUc8KMZdC.length > 0) {
        proxy.publicKeys = _axq166E2eZADq34V4MYUc8KMZdC;
      }
      
      const _4EHQFWZSz1k1d4LmPrQiMba2GbP3 = this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_4EHQFWZSz1k1d4LmPrQiMba2GbP3.length == 1) {
        proxy.assertionMethod = _4EHQFWZSz1k1d4LmPrQiMba2GbP3[0];
      }
      
      if (_4EHQFWZSz1k1d4LmPrQiMba2GbP3.length > 1
          || !(\\"assertionMethod\\" in proxy)
          && _4EHQFWZSz1k1d4LmPrQiMba2GbP3.length > 0) {
        proxy.assertionMethods = _4EHQFWZSz1k1d4LmPrQiMba2GbP3;
      }
      
      const _36QNc9MxfkKf6h8sEUQSHnV9NZA = this.#_36QNc9MxfkKf6h8sEUQSHnV9NZA
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_36QNc9MxfkKf6h8sEUQSHnV9NZA.length == 1) {
        proxy.manuallyApprovesFollowers = _36QNc9MxfkKf6h8sEUQSHnV9NZA[0];
      }
      
      const _3ghX3VfZXXbLvhCRH7QJqpzLrXjB = this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3ghX3VfZXXbLvhCRH7QJqpzLrXjB.length == 1) {
        proxy.inbox = _3ghX3VfZXXbLvhCRH7QJqpzLrXjB[0];
      }
      
      const _41QwhqJouoLg3h8dRPKat21brynC = this.#_41QwhqJouoLg3h8dRPKat21brynC
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_41QwhqJouoLg3h8dRPKat21brynC.length == 1) {
        proxy.outbox = _41QwhqJouoLg3h8dRPKat21brynC[0];
      }
      
      const _3yAv8jymNfNuJUDuBzJ1NQhdbAee = this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3yAv8jymNfNuJUDuBzJ1NQhdbAee.length == 1) {
        proxy.following = _3yAv8jymNfNuJUDuBzJ1NQhdbAee[0];
      }
      
      const _BBCTgfphhsFzpVfKTykGSpBNwoA = this.#_BBCTgfphhsFzpVfKTykGSpBNwoA
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_BBCTgfphhsFzpVfKTykGSpBNwoA.length == 1) {
        proxy.followers = _BBCTgfphhsFzpVfKTykGSpBNwoA[0];
      }
      
      const _3bgkPwJanyTCoVFM9ovRcus8tKkU = this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3bgkPwJanyTCoVFM9ovRcus8tKkU.length == 1) {
        proxy.liked = _3bgkPwJanyTCoVFM9ovRcus8tKkU[0];
      }
      
      const _4N1vBJzXDf8NbBumeECQMFvKetja = this.#_4N1vBJzXDf8NbBumeECQMFvKetja
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_4N1vBJzXDf8NbBumeECQMFvKetja.length == 1) {
        proxy.featured = _4N1vBJzXDf8NbBumeECQMFvKetja[0];
      }
      
      const _2MxnRRLq9iPzx5CFq2NPrXdUDCac = this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2MxnRRLq9iPzx5CFq2NPrXdUDCac.length == 1) {
        proxy.featuredTags = _2MxnRRLq9iPzx5CFq2NPrXdUDCac[0];
      }
      
      const _3sG2Hdwn9qzKGu9mpYkqakAMUkH9 = this.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3sG2Hdwn9qzKGu9mpYkqakAMUkH9.length > 1
          || !(\\"stream\\" in proxy)
          && _3sG2Hdwn9qzKGu9mpYkqakAMUkH9.length > 0) {
        proxy.streams = _3sG2Hdwn9qzKGu9mpYkqakAMUkH9;
      }
      
      const _sEoQwUbfk4hEfugzNQ2ZiDcLMkG = this.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_sEoQwUbfk4hEfugzNQ2ZiDcLMkG.length == 1) {
        proxy.endpoints = _sEoQwUbfk4hEfugzNQ2ZiDcLMkG[0];
      }
      
      const _gAJzg1QDc4rcefFsUzGSYmyXvNH = this.#_gAJzg1QDc4rcefFsUzGSYmyXvNH
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_gAJzg1QDc4rcefFsUzGSYmyXvNH.length == 1) {
        proxy.discoverable = _gAJzg1QDc4rcefFsUzGSYmyXvNH[0];
      }
      
      const _2kGKkJtoFWg8c18PaVSqj9NKP4t7 = this.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2kGKkJtoFWg8c18PaVSqj9NKP4t7.length == 1) {
        proxy.suspended = _2kGKkJtoFWg8c18PaVSqj9NKP4t7[0];
      }
      
      const _79S8K4f5J9MWUgCxziRyUe6PTHZ = this.#_79S8K4f5J9MWUgCxziRyUe6PTHZ
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_79S8K4f5J9MWUgCxziRyUe6PTHZ.length == 1) {
        proxy.memorial = _79S8K4f5J9MWUgCxziRyUe6PTHZ[0];
      }
      
      const _2diCorzqPGQQqftp6e4SrCEwEnyk = this.#_2diCorzqPGQQqftp6e4SrCEwEnyk
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2diCorzqPGQQqftp6e4SrCEwEnyk.length == 1) {
        proxy.indexable = _2diCorzqPGQQqftp6e4SrCEwEnyk[0];
      }
      
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Organization \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Organization \\" + inspect(proxy, options);
  }
  }

/** Represents a Web Page.
 */
export class Page extends Document {

    /**
     * The type URI of {@link Page}: \`https://www.w3.org/ns/activitystreams#Page\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Page\\");
    }
  
  /**
   * Constructs a new instance of Page with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];width?: number | null;height?: number | null;}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });}

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];width?: number | null;height?: number | null;}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Page {
  const clone = super.clone(values, options) as unknown as Page;
    return clone;
  }
  
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Page\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\"],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Page> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Page\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Page)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Page \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Page \\" + inspect(proxy, options);
  }
  }

/** Represents an individual person.
 */
export class Person extends Object {

    /**
     * The type URI of {@link Person}: \`https://www.w3.org/ns/activitystreams#Person\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Person\\");
    }
  #_3isuDgRAKSntq9XdbjiNxjwyPZAf: ((string | LanguageString))[] = [];
#_axq166E2eZADq34V4MYUc8KMZdC: (CryptographicKey | URL)[] = [];
#_4EHQFWZSz1k1d4LmPrQiMba2GbP3: (Multikey | URL)[] = [];
#_36QNc9MxfkKf6h8sEUQSHnV9NZA: (boolean)[] = [];
#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB: (OrderedCollection | URL)[] = [];
#_41QwhqJouoLg3h8dRPKat21brynC: (OrderedCollection | URL)[] = [];
#_3yAv8jymNfNuJUDuBzJ1NQhdbAee: (Collection | URL)[] = [];
#_BBCTgfphhsFzpVfKTykGSpBNwoA: (Collection | URL)[] = [];
#_3bgkPwJanyTCoVFM9ovRcus8tKkU: (Collection | URL)[] = [];
#_4N1vBJzXDf8NbBumeECQMFvKetja: (Collection | URL)[] = [];
#_2MxnRRLq9iPzx5CFq2NPrXdUDCac: (Collection | URL)[] = [];
#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9: (Collection | URL)[] = [];
#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG: (Endpoints)[] = [];
#_gAJzg1QDc4rcefFsUzGSYmyXvNH: (boolean)[] = [];
#_2kGKkJtoFWg8c18PaVSqj9NKP4t7: (boolean)[] = [];
#_79S8K4f5J9MWUgCxziRyUe6PTHZ: (boolean)[] = [];
#_2diCorzqPGQQqftp6e4SrCEwEnyk: (boolean)[] = [];

  /**
   * Constructs a new instance of Person with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];preferredUsername?: string | LanguageString | null;
preferredUsernames?: ((string | LanguageString))[];publicKey?: CryptographicKey | URL | null;
publicKeys?: (CryptographicKey | URL)[];assertionMethod?: Multikey | URL | null;
assertionMethods?: (Multikey | URL)[];manuallyApprovesFollowers?: boolean | null;inbox?: OrderedCollection | URL | null;outbox?: OrderedCollection | URL | null;following?: Collection | URL | null;followers?: Collection | URL | null;liked?: Collection | URL | null;featured?: Collection | URL | null;featuredTags?: Collection | URL | null;streams?: (Collection | URL)[];endpoints?: Endpoints | null;discoverable?: boolean | null;suspended?: boolean | null;memorial?: boolean | null;indexable?: boolean | null;}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });
        if (\\"preferredUsername\\" in values &&             values.preferredUsername != null) {
          if (typeof values.preferredUsername === \\"string\\" || values.preferredUsername instanceof LanguageString) {
            // @ts-ignore: type is checked above.
            this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf = [values.preferredUsername];
          } else {
            throw new TypeError(
              \\"The preferredUsername must be of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      
        if (\\"preferredUsernames\\" in values &&             values.preferredUsernames != null) {
      
          if (\\"preferredUsername\\" in values &&
              values.preferredUsername != null) {
            throw new TypeError(
              \\"Cannot initialize both preferredUsername and \\" +
                \\"preferredUsernames at the same time.\\",
            );
          }
        
          if (Array.isArray(values.preferredUsernames) &&
              values.preferredUsernames.every(v => typeof v === \\"string\\" || v instanceof LanguageString)) {
            // @ts-ignore: type is checked above.
            this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf = values.preferredUsernames;
          } else {
            throw new TypeError(
              \\"The preferredUsernames must be an array of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      
        if (\\"publicKey\\" in values &&             values.publicKey != null) {
          if (values.publicKey instanceof CryptographicKey || values.publicKey instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_axq166E2eZADq34V4MYUc8KMZdC = [values.publicKey];
          } else {
            throw new TypeError(
              \\"The publicKey must be of type \\" +
              \\"CryptographicKey | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"publicKeys\\" in values &&             values.publicKeys != null) {
      
          if (\\"publicKey\\" in values &&
              values.publicKey != null) {
            throw new TypeError(
              \\"Cannot initialize both publicKey and \\" +
                \\"publicKeys at the same time.\\",
            );
          }
        
          if (Array.isArray(values.publicKeys) &&
              values.publicKeys.every(v => v instanceof CryptographicKey || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_axq166E2eZADq34V4MYUc8KMZdC = values.publicKeys;
          } else {
            throw new TypeError(
              \\"The publicKeys must be an array of type \\" +
              \\"CryptographicKey | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"assertionMethod\\" in values &&             values.assertionMethod != null) {
          if (values.assertionMethod instanceof Multikey || values.assertionMethod instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3 = [values.assertionMethod];
          } else {
            throw new TypeError(
              \\"The assertionMethod must be of type \\" +
              \\"Multikey | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"assertionMethods\\" in values &&             values.assertionMethods != null) {
      
          if (\\"assertionMethod\\" in values &&
              values.assertionMethod != null) {
            throw new TypeError(
              \\"Cannot initialize both assertionMethod and \\" +
                \\"assertionMethods at the same time.\\",
            );
          }
        
          if (Array.isArray(values.assertionMethods) &&
              values.assertionMethods.every(v => v instanceof Multikey || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3 = values.assertionMethods;
          } else {
            throw new TypeError(
              \\"The assertionMethods must be an array of type \\" +
              \\"Multikey | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"manuallyApprovesFollowers\\" in values &&             values.manuallyApprovesFollowers != null) {
          if (typeof values.manuallyApprovesFollowers === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            this.#_36QNc9MxfkKf6h8sEUQSHnV9NZA = [values.manuallyApprovesFollowers];
          } else {
            throw new TypeError(
              \\"The manuallyApprovesFollowers must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      
        if (\\"inbox\\" in values &&             values.inbox != null) {
          if (values.inbox instanceof OrderedCollection || values.inbox instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB = [values.inbox];
          } else {
            throw new TypeError(
              \\"The inbox must be of type \\" +
              \\"OrderedCollection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"outbox\\" in values &&             values.outbox != null) {
          if (values.outbox instanceof OrderedCollection || values.outbox instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_41QwhqJouoLg3h8dRPKat21brynC = [values.outbox];
          } else {
            throw new TypeError(
              \\"The outbox must be of type \\" +
              \\"OrderedCollection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"following\\" in values &&             values.following != null) {
          if (values.following instanceof Collection || values.following instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee = [values.following];
          } else {
            throw new TypeError(
              \\"The following must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"followers\\" in values &&             values.followers != null) {
          if (values.followers instanceof Collection || values.followers instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_BBCTgfphhsFzpVfKTykGSpBNwoA = [values.followers];
          } else {
            throw new TypeError(
              \\"The followers must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"liked\\" in values &&             values.liked != null) {
          if (values.liked instanceof Collection || values.liked instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU = [values.liked];
          } else {
            throw new TypeError(
              \\"The liked must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"featured\\" in values &&             values.featured != null) {
          if (values.featured instanceof Collection || values.featured instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_4N1vBJzXDf8NbBumeECQMFvKetja = [values.featured];
          } else {
            throw new TypeError(
              \\"The featured must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"featuredTags\\" in values &&             values.featuredTags != null) {
          if (values.featuredTags instanceof Collection || values.featuredTags instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac = [values.featuredTags];
          } else {
            throw new TypeError(
              \\"The featuredTags must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"streams\\" in values &&             values.streams != null) {
      
          if (Array.isArray(values.streams) &&
              values.streams.every(v => v instanceof Collection || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9 = values.streams;
          } else {
            throw new TypeError(
              \\"The streams must be an array of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"endpoints\\" in values &&             values.endpoints != null) {
          if (values.endpoints instanceof Endpoints) {
            // @ts-ignore: type is checked above.
            this.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG = [values.endpoints];
          } else {
            throw new TypeError(
              \\"The endpoints must be of type \\" +
              \\"Endpoints\\" + \\".\\",
            );
          }
        }
      
        if (\\"discoverable\\" in values &&             values.discoverable != null) {
          if (typeof values.discoverable === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            this.#_gAJzg1QDc4rcefFsUzGSYmyXvNH = [values.discoverable];
          } else {
            throw new TypeError(
              \\"The discoverable must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      
        if (\\"suspended\\" in values &&             values.suspended != null) {
          if (typeof values.suspended === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            this.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7 = [values.suspended];
          } else {
            throw new TypeError(
              \\"The suspended must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      
        if (\\"memorial\\" in values &&             values.memorial != null) {
          if (typeof values.memorial === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            this.#_79S8K4f5J9MWUgCxziRyUe6PTHZ = [values.memorial];
          } else {
            throw new TypeError(
              \\"The memorial must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      
        if (\\"indexable\\" in values &&             values.indexable != null) {
          if (typeof values.indexable === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            this.#_2diCorzqPGQQqftp6e4SrCEwEnyk = [values.indexable];
          } else {
            throw new TypeError(
              \\"The indexable must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      }

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];preferredUsername?: string | LanguageString | null;
preferredUsernames?: ((string | LanguageString))[];publicKey?: CryptographicKey | URL | null;
publicKeys?: (CryptographicKey | URL)[];assertionMethod?: Multikey | URL | null;
assertionMethods?: (Multikey | URL)[];manuallyApprovesFollowers?: boolean | null;inbox?: OrderedCollection | URL | null;outbox?: OrderedCollection | URL | null;following?: Collection | URL | null;followers?: Collection | URL | null;liked?: Collection | URL | null;featured?: Collection | URL | null;featuredTags?: Collection | URL | null;streams?: (Collection | URL)[];endpoints?: Endpoints | null;discoverable?: boolean | null;suspended?: boolean | null;memorial?: boolean | null;indexable?: boolean | null;}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Person {
  const clone = super.clone(values, options) as unknown as Person;clone.#_3isuDgRAKSntq9XdbjiNxjwyPZAf = this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf;
        if (\\"preferredUsername\\" in values &&             values.preferredUsername != null) {
          if (typeof values.preferredUsername === \\"string\\" || values.preferredUsername instanceof LanguageString) {
            // @ts-ignore: type is checked above.
            clone.#_3isuDgRAKSntq9XdbjiNxjwyPZAf = [values.preferredUsername];
          } else {
            throw new TypeError(
              \\"The preferredUsername must be of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      
        if (\\"preferredUsernames\\" in values &&             values.preferredUsernames != null) {
      
          if (\\"preferredUsername\\" in values &&
              values.preferredUsername != null) {
            throw new TypeError(
              \\"Cannot update both preferredUsername and \\" +
                \\"preferredUsernames at the same time.\\",
            );
          }
        
          if (Array.isArray(values.preferredUsernames) &&
              values.preferredUsernames.every(v => typeof v === \\"string\\" || v instanceof LanguageString)) {
            // @ts-ignore: type is checked above.
            clone.#_3isuDgRAKSntq9XdbjiNxjwyPZAf = values.preferredUsernames;
          } else {
            throw new TypeError(
              \\"The preferredUsernames must be an array of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      clone.#_axq166E2eZADq34V4MYUc8KMZdC = this.#_axq166E2eZADq34V4MYUc8KMZdC;
        if (\\"publicKey\\" in values &&             values.publicKey != null) {
          if (values.publicKey instanceof CryptographicKey || values.publicKey instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_axq166E2eZADq34V4MYUc8KMZdC = [values.publicKey];
          } else {
            throw new TypeError(
              \\"The publicKey must be of type \\" +
              \\"CryptographicKey | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"publicKeys\\" in values &&             values.publicKeys != null) {
      
          if (\\"publicKey\\" in values &&
              values.publicKey != null) {
            throw new TypeError(
              \\"Cannot update both publicKey and \\" +
                \\"publicKeys at the same time.\\",
            );
          }
        
          if (Array.isArray(values.publicKeys) &&
              values.publicKeys.every(v => v instanceof CryptographicKey || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_axq166E2eZADq34V4MYUc8KMZdC = values.publicKeys;
          } else {
            throw new TypeError(
              \\"The publicKeys must be an array of type \\" +
              \\"CryptographicKey | URL\\" + \\".\\",
            );
          }
        }
      clone.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3 = this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3;
        if (\\"assertionMethod\\" in values &&             values.assertionMethod != null) {
          if (values.assertionMethod instanceof Multikey || values.assertionMethod instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3 = [values.assertionMethod];
          } else {
            throw new TypeError(
              \\"The assertionMethod must be of type \\" +
              \\"Multikey | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"assertionMethods\\" in values &&             values.assertionMethods != null) {
      
          if (\\"assertionMethod\\" in values &&
              values.assertionMethod != null) {
            throw new TypeError(
              \\"Cannot update both assertionMethod and \\" +
                \\"assertionMethods at the same time.\\",
            );
          }
        
          if (Array.isArray(values.assertionMethods) &&
              values.assertionMethods.every(v => v instanceof Multikey || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3 = values.assertionMethods;
          } else {
            throw new TypeError(
              \\"The assertionMethods must be an array of type \\" +
              \\"Multikey | URL\\" + \\".\\",
            );
          }
        }
      clone.#_36QNc9MxfkKf6h8sEUQSHnV9NZA = this.#_36QNc9MxfkKf6h8sEUQSHnV9NZA;
        if (\\"manuallyApprovesFollowers\\" in values &&             values.manuallyApprovesFollowers != null) {
          if (typeof values.manuallyApprovesFollowers === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            clone.#_36QNc9MxfkKf6h8sEUQSHnV9NZA = [values.manuallyApprovesFollowers];
          } else {
            throw new TypeError(
              \\"The manuallyApprovesFollowers must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      clone.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB = this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB;
        if (\\"inbox\\" in values &&             values.inbox != null) {
          if (values.inbox instanceof OrderedCollection || values.inbox instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB = [values.inbox];
          } else {
            throw new TypeError(
              \\"The inbox must be of type \\" +
              \\"OrderedCollection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_41QwhqJouoLg3h8dRPKat21brynC = this.#_41QwhqJouoLg3h8dRPKat21brynC;
        if (\\"outbox\\" in values &&             values.outbox != null) {
          if (values.outbox instanceof OrderedCollection || values.outbox instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_41QwhqJouoLg3h8dRPKat21brynC = [values.outbox];
          } else {
            throw new TypeError(
              \\"The outbox must be of type \\" +
              \\"OrderedCollection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee = this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee;
        if (\\"following\\" in values &&             values.following != null) {
          if (values.following instanceof Collection || values.following instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee = [values.following];
          } else {
            throw new TypeError(
              \\"The following must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_BBCTgfphhsFzpVfKTykGSpBNwoA = this.#_BBCTgfphhsFzpVfKTykGSpBNwoA;
        if (\\"followers\\" in values &&             values.followers != null) {
          if (values.followers instanceof Collection || values.followers instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_BBCTgfphhsFzpVfKTykGSpBNwoA = [values.followers];
          } else {
            throw new TypeError(
              \\"The followers must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_3bgkPwJanyTCoVFM9ovRcus8tKkU = this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU;
        if (\\"liked\\" in values &&             values.liked != null) {
          if (values.liked instanceof Collection || values.liked instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_3bgkPwJanyTCoVFM9ovRcus8tKkU = [values.liked];
          } else {
            throw new TypeError(
              \\"The liked must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_4N1vBJzXDf8NbBumeECQMFvKetja = this.#_4N1vBJzXDf8NbBumeECQMFvKetja;
        if (\\"featured\\" in values &&             values.featured != null) {
          if (values.featured instanceof Collection || values.featured instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_4N1vBJzXDf8NbBumeECQMFvKetja = [values.featured];
          } else {
            throw new TypeError(
              \\"The featured must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac = this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac;
        if (\\"featuredTags\\" in values &&             values.featuredTags != null) {
          if (values.featuredTags instanceof Collection || values.featuredTags instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac = [values.featuredTags];
          } else {
            throw new TypeError(
              \\"The featuredTags must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9 = this.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9;
        if (\\"streams\\" in values &&             values.streams != null) {
      
          if (Array.isArray(values.streams) &&
              values.streams.every(v => v instanceof Collection || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9 = values.streams;
          } else {
            throw new TypeError(
              \\"The streams must be an array of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG = this.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG;
        if (\\"endpoints\\" in values &&             values.endpoints != null) {
          if (values.endpoints instanceof Endpoints) {
            // @ts-ignore: type is checked above.
            clone.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG = [values.endpoints];
          } else {
            throw new TypeError(
              \\"The endpoints must be of type \\" +
              \\"Endpoints\\" + \\".\\",
            );
          }
        }
      clone.#_gAJzg1QDc4rcefFsUzGSYmyXvNH = this.#_gAJzg1QDc4rcefFsUzGSYmyXvNH;
        if (\\"discoverable\\" in values &&             values.discoverable != null) {
          if (typeof values.discoverable === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            clone.#_gAJzg1QDc4rcefFsUzGSYmyXvNH = [values.discoverable];
          } else {
            throw new TypeError(
              \\"The discoverable must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      clone.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7 = this.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7;
        if (\\"suspended\\" in values &&             values.suspended != null) {
          if (typeof values.suspended === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            clone.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7 = [values.suspended];
          } else {
            throw new TypeError(
              \\"The suspended must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      clone.#_79S8K4f5J9MWUgCxziRyUe6PTHZ = this.#_79S8K4f5J9MWUgCxziRyUe6PTHZ;
        if (\\"memorial\\" in values &&             values.memorial != null) {
          if (typeof values.memorial === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            clone.#_79S8K4f5J9MWUgCxziRyUe6PTHZ = [values.memorial];
          } else {
            throw new TypeError(
              \\"The memorial must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      clone.#_2diCorzqPGQQqftp6e4SrCEwEnyk = this.#_2diCorzqPGQQqftp6e4SrCEwEnyk;
        if (\\"indexable\\" in values &&             values.indexable != null) {
          if (typeof values.indexable === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            clone.#_2diCorzqPGQQqftp6e4SrCEwEnyk = [values.indexable];
          } else {
            throw new TypeError(
              \\"The indexable must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      
    return clone;
  }
  
/** A short username which may be used to refer to the actor,
 * with no uniqueness guarantees.
 * 
 */
get preferredUsername(): (string | LanguageString | null) {
        if (this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf.length < 1) return null;
        return this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf[0];
      }
      
/** A short username which may be used to refer to the actor,
 * with no uniqueness guarantees.
 * 
 */
get preferredUsernames(): ((string | LanguageString))[] {
        return this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf;
      }
      
    async #fetchPublicKey(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<CryptographicKey | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await CryptographicKey.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://w3id.org/security#Key\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Person.getPublicKey},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get publicKeyId(): URL | null {
        if (this.#_axq166E2eZADq34V4MYUc8KMZdC.length < 1) return null;
        const v = this.#_axq166E2eZADq34V4MYUc8KMZdC[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** A public part of the key pair owned by this actor.
 */

      async getPublicKey(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<CryptographicKey | null> {
        if (this.#_axq166E2eZADq34V4MYUc8KMZdC.length < 1) return null;
        const v = this.#_axq166E2eZADq34V4MYUc8KMZdC[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchPublicKey(v, options);
          if (fetched == null) return null;
          this.#_axq166E2eZADq34V4MYUc8KMZdC[0] = fetched;
          return fetched;
        }
        return v;
      }
      
      /**
       * Similar to
       * {@link Person.getPublicKeys},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get publicKeyIds(): URL[] {
        return this.#_axq166E2eZADq34V4MYUc8KMZdC.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** A public part of the key pair owned by this actor.
 */

      async* getPublicKeys(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<CryptographicKey> {
        const vs = this.#_axq166E2eZADq34V4MYUc8KMZdC;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchPublicKey(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
    async #fetchAssertionMethod(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Multikey | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Multikey.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://w3id.org/security#Multikey\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Person.getAssertionMethod},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get assertionMethodId(): URL | null {
        if (this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3.length < 1) return null;
        const v = this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** Represents this actor's public keys.  It serves as equivalent to
 * the \`publicKeys\` property, but is used for [FEP-521a] compliance.
 * 
 * [FEP-521a]: https://codeberg.org/fediverse/fep/src/branch/main/fep/521a/fep-521a.md
 * 
 */

      async getAssertionMethod(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Multikey | null> {
        if (this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3.length < 1) return null;
        const v = this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchAssertionMethod(v, options);
          if (fetched == null) return null;
          this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3[0] = fetched;
          return fetched;
        }
        return v;
      }
      
      /**
       * Similar to
       * {@link Person.getAssertionMethods},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get assertionMethodIds(): URL[] {
        return this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** Represents this actor's public keys.  It serves as equivalent to
 * the \`publicKeys\` property, but is used for [FEP-521a] compliance.
 * 
 * [FEP-521a]: https://codeberg.org/fediverse/fep/src/branch/main/fep/521a/fep-521a.md
 * 
 */

      async* getAssertionMethods(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Multikey> {
        const vs = this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchAssertionMethod(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
/** When \`true\`, conveys that for this actor, follow requests are not usually
 * automatically approved, but instead are examined by a person who may accept
 * or reject the request, at some time in the future.  Setting of \`false\`
 * conveys no information and may be ignored.  This information is typically
 * used to affect display of accounts, such as showing an account as private or
 * locked.
 * 
 */
get manuallyApprovesFollowers(): (boolean | null) {
        if (this.#_36QNc9MxfkKf6h8sEUQSHnV9NZA.length < 1) return null;
        return this.#_36QNc9MxfkKf6h8sEUQSHnV9NZA[0];
      }
      
    async #fetchInbox(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<OrderedCollection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await OrderedCollection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#OrderedCollection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Person.getInbox},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get inboxId(): URL | null {
        if (this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB.length < 1) return null;
        const v = this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** The inbox stream contains all activities received by the actor.  The server
 * SHOULD filter content according to the requester's permission.  In general,
 * the owner of an inbox is likely to be able to access all of their inbox
 * contents.  Depending on access control, some other content may be public,
 * whereas other content may require authentication for non-owner users,
 * if they can access the inbox at all.
 * 
 * The server MUST perform de-duplication of activities returned by the inbox.
 * Duplication can occur if an activity is addressed both to an actor's
 * followers, and a specific actor who also follows the recipient actor,
 * and the server has failed to de-duplicate the recipients list.
 * Such deduplication MUST be performed by comparing the \`id\` of the activities
 * and dropping any activities already seen.
 * 
 */

      async getInbox(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<OrderedCollection | null> {
        if (this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB.length < 1) return null;
        const v = this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchInbox(v, options);
          if (fetched == null) return null;
          this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchOutbox(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<OrderedCollection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await OrderedCollection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#OrderedCollection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Person.getOutbox},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get outboxId(): URL | null {
        if (this.#_41QwhqJouoLg3h8dRPKat21brynC.length < 1) return null;
        const v = this.#_41QwhqJouoLg3h8dRPKat21brynC[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** The outbox stream contains activities the user has published,
 * subject to the ability of the requestor to retrieve the activity
 * (that is, the contents of the outbox are filtered by the permissions of
 * the person reading it).  If a user submits a request without
 * [Authorization](https://www.w3.org/TR/activitypub/#authorization)
 * the server should respond with all of the
 * [Public](https://www.w3.org/TR/activitypub/#public-addressing) posts.
 * This could potentially be all relevant objects published by the user,
 * though the number of available items is left to the discretion of those
 * implementing and deploying the server.
 * 
 */

      async getOutbox(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<OrderedCollection | null> {
        if (this.#_41QwhqJouoLg3h8dRPKat21brynC.length < 1) return null;
        const v = this.#_41QwhqJouoLg3h8dRPKat21brynC[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchOutbox(v, options);
          if (fetched == null) return null;
          this.#_41QwhqJouoLg3h8dRPKat21brynC[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchFollowing(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Collection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Collection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Collection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Person.getFollowing},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get followingId(): URL | null {
        if (this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee.length < 1) return null;
        const v = this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** This is a list of everybody that the actor has followed, added as a
 * [side effect](https://www.w3.org/TR/activitypub/#follow-activity-outbox).
 * The \`following\` collection MUST be either an {@link OrderedCollection}
 * or a {@link Collection} and MAY be filtered on privileges of
 * an authenticated user or as appropriate when no authentication is given.
 * 
 */

      async getFollowing(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Collection | null> {
        if (this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee.length < 1) return null;
        const v = this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchFollowing(v, options);
          if (fetched == null) return null;
          this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchFollowers(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Collection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Collection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Collection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Person.getFollowers},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get followersId(): URL | null {
        if (this.#_BBCTgfphhsFzpVfKTykGSpBNwoA.length < 1) return null;
        const v = this.#_BBCTgfphhsFzpVfKTykGSpBNwoA[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** This is a list of everyone who has sent a {@link Follow} activity
 * for the actor, added as a
 * [side effect](https://www.w3.org/TR/activitypub/#follow-activity-outbox).
 * This is where one would find a list of all the actors that are following
 * the actor.  The \`followers\` collection MUST be either
 * an {@link OrderedCollection} or a {@link Collection} and MAY be filtered on
 * privileges of an authenticated user or as appropriate when no authentication
 * is given.
 * 
 */

      async getFollowers(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Collection | null> {
        if (this.#_BBCTgfphhsFzpVfKTykGSpBNwoA.length < 1) return null;
        const v = this.#_BBCTgfphhsFzpVfKTykGSpBNwoA[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchFollowers(v, options);
          if (fetched == null) return null;
          this.#_BBCTgfphhsFzpVfKTykGSpBNwoA[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchLiked(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Collection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Collection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Collection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Person.getLiked},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get likedId(): URL | null {
        if (this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU.length < 1) return null;
        const v = this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** This is a list of every object from all of the actor's {@link Like}
 * activities, added as a
 * [side effect](https://www.w3.org/TR/activitypub/#like-activity-outbox).
 * The \`liked\` collection MUST be either an {@link OrderedCollection} or
 * a {@link Collection} and MAY be filtered on privileges of an authenticated
 * user or as appropriate when no authentication is given.
 * 
 */

      async getLiked(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Collection | null> {
        if (this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU.length < 1) return null;
        const v = this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchLiked(v, options);
          if (fetched == null) return null;
          this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchFeatured(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Collection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Collection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Collection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Person.getFeatured},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get featuredId(): URL | null {
        if (this.#_4N1vBJzXDf8NbBumeECQMFvKetja.length < 1) return null;
        const v = this.#_4N1vBJzXDf8NbBumeECQMFvKetja[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** What is known in Mastodon as \\"pinned statuses\\", or statuses that are always
 * featured at the top of people's profiles, is implemented using an extra
 * property \`featured\` on the actor object that points to a {@link Collection}
 * of objects.
 * 
 */

      async getFeatured(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Collection | null> {
        if (this.#_4N1vBJzXDf8NbBumeECQMFvKetja.length < 1) return null;
        const v = this.#_4N1vBJzXDf8NbBumeECQMFvKetja[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchFeatured(v, options);
          if (fetched == null) return null;
          this.#_4N1vBJzXDf8NbBumeECQMFvKetja[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchFeaturedTags(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Collection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Collection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Collection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Person.getFeaturedTags},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get featuredTagsId(): URL | null {
        if (this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac.length < 1) return null;
        const v = this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** What is known in Mastodon as \\"featured hashtags\\", hashtags that are featured
 * at people's profiles, is implemented using an extra property \`featuredTags\`
 * on the actor object that points to a {@link Collection} of {@link Hashtag}
 * objects specifically.
 * 
 */

      async getFeaturedTags(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Collection | null> {
        if (this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac.length < 1) return null;
        const v = this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchFeaturedTags(v, options);
          if (fetched == null) return null;
          this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchStream(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Collection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Collection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Collection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Person.getStreams},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get streamIds(): URL[] {
        return this.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** A list of supplementary Collections which may be of interest.
 * 
 */

      async* getStreams(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Collection> {
        const vs = this.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchStream(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
/** A JSON object which maps additional (typically server/domain-wide) endpoints
 * which may be useful either for this actor or someone referencing this actor.
 * This mapping may be nested inside the actor document as the value or may be
 * a link to a JSON-LD document with these properties.
 * 
 */
get endpoints(): (Endpoints | null) {
        if (this.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG.length < 1) return null;
        return this.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG[0];
      }
      
/** Allows users to opt-in or opt-out of discoverability features like
 * the profile directory.  This flag may also be used as an indicator of
 * the user's preferences toward being included in external discovery services,
 * such as search engines or other indexing tools.
 * 
 */
get discoverable(): (boolean | null) {
        if (this.#_gAJzg1QDc4rcefFsUzGSYmyXvNH.length < 1) return null;
        return this.#_gAJzg1QDc4rcefFsUzGSYmyXvNH[0];
      }
      
/** Reports whether a user was locally suspended, for better handling of
 * these accounts.
 * 
 */
get suspended(): (boolean | null) {
        if (this.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7.length < 1) return null;
        return this.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7[0];
      }
      
/** Whether the actor is in-memorial state.
 */
get memorial(): (boolean | null) {
        if (this.#_79S8K4f5J9MWUgCxziRyUe6PTHZ.length < 1) return null;
        return this.#_79S8K4f5J9MWUgCxziRyUe6PTHZ[0];
      }
      
/** Whether the actor allows to be indexed.
 */
get indexable(): (boolean | null) {
        if (this.#_2diCorzqPGQQqftp6e4SrCEwEnyk.length < 1) return null;
        return this.#_2diCorzqPGQQqftp6e4SrCEwEnyk[0];
      }
      
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    array = [];
    for (const v of this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf) {
      const element = (
    typeof v === \\"string\\" ? { \\"@value\\": v } : {
        \\"@value\\": v.toString(),
        \\"@language\\": v.language.compact(),
      }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#preferredUsername\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_axq166E2eZADq34V4MYUc8KMZdC) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://w3id.org/security#publicKey\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://w3id.org/security#assertionMethod\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_36QNc9MxfkKf6h8sEUQSHnV9NZA) {
      const element = (
    { \\"@value\\": v }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#manuallyApprovesFollowers\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://www.w3.org/ns/ldp#inbox\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_41QwhqJouoLg3h8dRPKat21brynC) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#outbox\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#following\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_BBCTgfphhsFzpVfKTykGSpBNwoA) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#followers\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#liked\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_4N1vBJzXDf8NbBumeECQMFvKetja) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://joinmastodon.org/ns#featured\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://joinmastodon.org/ns#featuredTags\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#streams\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG) {
      const element = (
    await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#endpoints\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_gAJzg1QDc4rcefFsUzGSYmyXvNH) {
      const element = (
    { \\"@value\\": v }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://joinmastodon.org/ns#discoverable\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7) {
      const element = (
    { \\"@value\\": v }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://joinmastodon.org/ns#suspended\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_79S8K4f5J9MWUgCxziRyUe6PTHZ) {
      const element = (
    { \\"@value\\": v }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://joinmastodon.org/ns#memorial\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_2diCorzqPGQQqftp6e4SrCEwEnyk) {
      const element = (
    { \\"@value\\": v }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://joinmastodon.org/ns#indexable\\"] = (
    array
      );
    }
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Person\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/v1\\",\\"https://w3id.org/security/data-integrity/v1\\",\\"https://www.w3.org/ns/did/v1\\",\\"https://w3id.org/security/multikey/v1\\",{\\"manuallyApprovesFollowers\\":\\"as:manuallyApprovesFollowers\\",\\"toot\\":\\"http://joinmastodon.org/ns#\\",\\"featured\\":{\\"@id\\":\\"toot:featured\\",\\"@type\\":\\"@id\\"},\\"featuredTags\\":{\\"@id\\":\\"toot:featuredTags\\",\\"@type\\":\\"@id\\"},\\"discoverable\\":\\"toot:discoverable\\",\\"suspended\\":\\"toot:suspended\\",\\"memorial\\":\\"toot:memorial\\",\\"indexable\\":\\"toot:indexable\\",\\"schema\\":\\"http://schema.org#\\",\\"PropertyValue\\":\\"schema:PropertyValue\\",\\"value\\":\\"schema:value\\"}],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Person> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Person\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Person)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    const _3isuDgRAKSntq9XdbjiNxjwyPZAf: ((string | LanguageString))[] = [];

    const _3isuDgRAKSntq9XdbjiNxjwyPZAf__array = values[\\"https://www.w3.org/ns/activitystreams#preferredUsername\\"];
    for (
      const v of _3isuDgRAKSntq9XdbjiNxjwyPZAf__array == null
        ? []
        : _3isuDgRAKSntq9XdbjiNxjwyPZAf__array.length === 1 && \\"@list\\" in _3isuDgRAKSntq9XdbjiNxjwyPZAf__array[0]
        ? _3isuDgRAKSntq9XdbjiNxjwyPZAf__array[0][\\"@list\\"]
        : _3isuDgRAKSntq9XdbjiNxjwyPZAf__array
    ) {
      if (v == null) continue;
    
      const decoded =
      typeof v === \\"object\\" && \\"@value\\" in v
        && typeof v[\\"@value\\"] === \\"string\\" && !(\\"@language\\" in v) ? v[\\"@value\\"] : typeof v === \\"object\\" && \\"@language\\" in v && \\"@value\\" in v
        && typeof v[\\"@language\\"] === \\"string\\"
        && typeof v[\\"@value\\"] === \\"string\\" ? new LanguageString(v[\\"@value\\"], v[\\"@language\\"]) : undefined
      ;
      if (typeof decoded === \\"undefined\\") continue;
      _3isuDgRAKSntq9XdbjiNxjwyPZAf.push(decoded);
      
    }
    instance.#_3isuDgRAKSntq9XdbjiNxjwyPZAf = _3isuDgRAKSntq9XdbjiNxjwyPZAf;
    const _axq166E2eZADq34V4MYUc8KMZdC: (CryptographicKey | URL)[] = [];

    const _axq166E2eZADq34V4MYUc8KMZdC__array = values[\\"https://w3id.org/security#publicKey\\"];
    for (
      const v of _axq166E2eZADq34V4MYUc8KMZdC__array == null
        ? []
        : _axq166E2eZADq34V4MYUc8KMZdC__array.length === 1 && \\"@list\\" in _axq166E2eZADq34V4MYUc8KMZdC__array[0]
        ? _axq166E2eZADq34V4MYUc8KMZdC__array[0][\\"@list\\"]
        : _axq166E2eZADq34V4MYUc8KMZdC__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _axq166E2eZADq34V4MYUc8KMZdC.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _axq166E2eZADq34V4MYUc8KMZdC.push(await CryptographicKey.fromJsonLd(
      v, options))
    }
    instance.#_axq166E2eZADq34V4MYUc8KMZdC = _axq166E2eZADq34V4MYUc8KMZdC;
    const _4EHQFWZSz1k1d4LmPrQiMba2GbP3: (Multikey | URL)[] = [];

    const _4EHQFWZSz1k1d4LmPrQiMba2GbP3__array = values[\\"https://w3id.org/security#assertionMethod\\"];
    for (
      const v of _4EHQFWZSz1k1d4LmPrQiMba2GbP3__array == null
        ? []
        : _4EHQFWZSz1k1d4LmPrQiMba2GbP3__array.length === 1 && \\"@list\\" in _4EHQFWZSz1k1d4LmPrQiMba2GbP3__array[0]
        ? _4EHQFWZSz1k1d4LmPrQiMba2GbP3__array[0][\\"@list\\"]
        : _4EHQFWZSz1k1d4LmPrQiMba2GbP3__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _4EHQFWZSz1k1d4LmPrQiMba2GbP3.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _4EHQFWZSz1k1d4LmPrQiMba2GbP3.push(await Multikey.fromJsonLd(
      v, options))
    }
    instance.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3 = _4EHQFWZSz1k1d4LmPrQiMba2GbP3;
    const _36QNc9MxfkKf6h8sEUQSHnV9NZA: (boolean)[] = [];

    const _36QNc9MxfkKf6h8sEUQSHnV9NZA__array = values[\\"https://www.w3.org/ns/activitystreams#manuallyApprovesFollowers\\"];
    for (
      const v of _36QNc9MxfkKf6h8sEUQSHnV9NZA__array == null
        ? []
        : _36QNc9MxfkKf6h8sEUQSHnV9NZA__array.length === 1 && \\"@list\\" in _36QNc9MxfkKf6h8sEUQSHnV9NZA__array[0]
        ? _36QNc9MxfkKf6h8sEUQSHnV9NZA__array[0][\\"@list\\"]
        : _36QNc9MxfkKf6h8sEUQSHnV9NZA__array
    ) {
      if (v == null) continue;
    _36QNc9MxfkKf6h8sEUQSHnV9NZA.push(v[\\"@value\\"])
    }
    instance.#_36QNc9MxfkKf6h8sEUQSHnV9NZA = _36QNc9MxfkKf6h8sEUQSHnV9NZA;
    const _3ghX3VfZXXbLvhCRH7QJqpzLrXjB: (OrderedCollection | URL)[] = [];

    const _3ghX3VfZXXbLvhCRH7QJqpzLrXjB__array = values[\\"http://www.w3.org/ns/ldp#inbox\\"];
    for (
      const v of _3ghX3VfZXXbLvhCRH7QJqpzLrXjB__array == null
        ? []
        : _3ghX3VfZXXbLvhCRH7QJqpzLrXjB__array.length === 1 && \\"@list\\" in _3ghX3VfZXXbLvhCRH7QJqpzLrXjB__array[0]
        ? _3ghX3VfZXXbLvhCRH7QJqpzLrXjB__array[0][\\"@list\\"]
        : _3ghX3VfZXXbLvhCRH7QJqpzLrXjB__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _3ghX3VfZXXbLvhCRH7QJqpzLrXjB.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _3ghX3VfZXXbLvhCRH7QJqpzLrXjB.push(await OrderedCollection.fromJsonLd(
      v, options))
    }
    instance.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB = _3ghX3VfZXXbLvhCRH7QJqpzLrXjB;
    const _41QwhqJouoLg3h8dRPKat21brynC: (OrderedCollection | URL)[] = [];

    const _41QwhqJouoLg3h8dRPKat21brynC__array = values[\\"https://www.w3.org/ns/activitystreams#outbox\\"];
    for (
      const v of _41QwhqJouoLg3h8dRPKat21brynC__array == null
        ? []
        : _41QwhqJouoLg3h8dRPKat21brynC__array.length === 1 && \\"@list\\" in _41QwhqJouoLg3h8dRPKat21brynC__array[0]
        ? _41QwhqJouoLg3h8dRPKat21brynC__array[0][\\"@list\\"]
        : _41QwhqJouoLg3h8dRPKat21brynC__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _41QwhqJouoLg3h8dRPKat21brynC.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _41QwhqJouoLg3h8dRPKat21brynC.push(await OrderedCollection.fromJsonLd(
      v, options))
    }
    instance.#_41QwhqJouoLg3h8dRPKat21brynC = _41QwhqJouoLg3h8dRPKat21brynC;
    const _3yAv8jymNfNuJUDuBzJ1NQhdbAee: (Collection | URL)[] = [];

    const _3yAv8jymNfNuJUDuBzJ1NQhdbAee__array = values[\\"https://www.w3.org/ns/activitystreams#following\\"];
    for (
      const v of _3yAv8jymNfNuJUDuBzJ1NQhdbAee__array == null
        ? []
        : _3yAv8jymNfNuJUDuBzJ1NQhdbAee__array.length === 1 && \\"@list\\" in _3yAv8jymNfNuJUDuBzJ1NQhdbAee__array[0]
        ? _3yAv8jymNfNuJUDuBzJ1NQhdbAee__array[0][\\"@list\\"]
        : _3yAv8jymNfNuJUDuBzJ1NQhdbAee__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _3yAv8jymNfNuJUDuBzJ1NQhdbAee.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _3yAv8jymNfNuJUDuBzJ1NQhdbAee.push(await Collection.fromJsonLd(
      v, options))
    }
    instance.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee = _3yAv8jymNfNuJUDuBzJ1NQhdbAee;
    const _BBCTgfphhsFzpVfKTykGSpBNwoA: (Collection | URL)[] = [];

    const _BBCTgfphhsFzpVfKTykGSpBNwoA__array = values[\\"https://www.w3.org/ns/activitystreams#followers\\"];
    for (
      const v of _BBCTgfphhsFzpVfKTykGSpBNwoA__array == null
        ? []
        : _BBCTgfphhsFzpVfKTykGSpBNwoA__array.length === 1 && \\"@list\\" in _BBCTgfphhsFzpVfKTykGSpBNwoA__array[0]
        ? _BBCTgfphhsFzpVfKTykGSpBNwoA__array[0][\\"@list\\"]
        : _BBCTgfphhsFzpVfKTykGSpBNwoA__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _BBCTgfphhsFzpVfKTykGSpBNwoA.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _BBCTgfphhsFzpVfKTykGSpBNwoA.push(await Collection.fromJsonLd(
      v, options))
    }
    instance.#_BBCTgfphhsFzpVfKTykGSpBNwoA = _BBCTgfphhsFzpVfKTykGSpBNwoA;
    const _3bgkPwJanyTCoVFM9ovRcus8tKkU: (Collection | URL)[] = [];

    const _3bgkPwJanyTCoVFM9ovRcus8tKkU__array = values[\\"https://www.w3.org/ns/activitystreams#liked\\"];
    for (
      const v of _3bgkPwJanyTCoVFM9ovRcus8tKkU__array == null
        ? []
        : _3bgkPwJanyTCoVFM9ovRcus8tKkU__array.length === 1 && \\"@list\\" in _3bgkPwJanyTCoVFM9ovRcus8tKkU__array[0]
        ? _3bgkPwJanyTCoVFM9ovRcus8tKkU__array[0][\\"@list\\"]
        : _3bgkPwJanyTCoVFM9ovRcus8tKkU__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _3bgkPwJanyTCoVFM9ovRcus8tKkU.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _3bgkPwJanyTCoVFM9ovRcus8tKkU.push(await Collection.fromJsonLd(
      v, options))
    }
    instance.#_3bgkPwJanyTCoVFM9ovRcus8tKkU = _3bgkPwJanyTCoVFM9ovRcus8tKkU;
    const _4N1vBJzXDf8NbBumeECQMFvKetja: (Collection | URL)[] = [];

    const _4N1vBJzXDf8NbBumeECQMFvKetja__array = values[\\"http://joinmastodon.org/ns#featured\\"];
    for (
      const v of _4N1vBJzXDf8NbBumeECQMFvKetja__array == null
        ? []
        : _4N1vBJzXDf8NbBumeECQMFvKetja__array.length === 1 && \\"@list\\" in _4N1vBJzXDf8NbBumeECQMFvKetja__array[0]
        ? _4N1vBJzXDf8NbBumeECQMFvKetja__array[0][\\"@list\\"]
        : _4N1vBJzXDf8NbBumeECQMFvKetja__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _4N1vBJzXDf8NbBumeECQMFvKetja.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _4N1vBJzXDf8NbBumeECQMFvKetja.push(await Collection.fromJsonLd(
      v, options))
    }
    instance.#_4N1vBJzXDf8NbBumeECQMFvKetja = _4N1vBJzXDf8NbBumeECQMFvKetja;
    const _2MxnRRLq9iPzx5CFq2NPrXdUDCac: (Collection | URL)[] = [];

    const _2MxnRRLq9iPzx5CFq2NPrXdUDCac__array = values[\\"http://joinmastodon.org/ns#featuredTags\\"];
    for (
      const v of _2MxnRRLq9iPzx5CFq2NPrXdUDCac__array == null
        ? []
        : _2MxnRRLq9iPzx5CFq2NPrXdUDCac__array.length === 1 && \\"@list\\" in _2MxnRRLq9iPzx5CFq2NPrXdUDCac__array[0]
        ? _2MxnRRLq9iPzx5CFq2NPrXdUDCac__array[0][\\"@list\\"]
        : _2MxnRRLq9iPzx5CFq2NPrXdUDCac__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _2MxnRRLq9iPzx5CFq2NPrXdUDCac.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _2MxnRRLq9iPzx5CFq2NPrXdUDCac.push(await Collection.fromJsonLd(
      v, options))
    }
    instance.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac = _2MxnRRLq9iPzx5CFq2NPrXdUDCac;
    const _3sG2Hdwn9qzKGu9mpYkqakAMUkH9: (Collection | URL)[] = [];

    const _3sG2Hdwn9qzKGu9mpYkqakAMUkH9__array = values[\\"https://www.w3.org/ns/activitystreams#streams\\"];
    for (
      const v of _3sG2Hdwn9qzKGu9mpYkqakAMUkH9__array == null
        ? []
        : _3sG2Hdwn9qzKGu9mpYkqakAMUkH9__array.length === 1 && \\"@list\\" in _3sG2Hdwn9qzKGu9mpYkqakAMUkH9__array[0]
        ? _3sG2Hdwn9qzKGu9mpYkqakAMUkH9__array[0][\\"@list\\"]
        : _3sG2Hdwn9qzKGu9mpYkqakAMUkH9__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _3sG2Hdwn9qzKGu9mpYkqakAMUkH9.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _3sG2Hdwn9qzKGu9mpYkqakAMUkH9.push(await Collection.fromJsonLd(
      v, options))
    }
    instance.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9 = _3sG2Hdwn9qzKGu9mpYkqakAMUkH9;
    const _sEoQwUbfk4hEfugzNQ2ZiDcLMkG: (Endpoints)[] = [];

    const _sEoQwUbfk4hEfugzNQ2ZiDcLMkG__array = values[\\"https://www.w3.org/ns/activitystreams#endpoints\\"];
    for (
      const v of _sEoQwUbfk4hEfugzNQ2ZiDcLMkG__array == null
        ? []
        : _sEoQwUbfk4hEfugzNQ2ZiDcLMkG__array.length === 1 && \\"@list\\" in _sEoQwUbfk4hEfugzNQ2ZiDcLMkG__array[0]
        ? _sEoQwUbfk4hEfugzNQ2ZiDcLMkG__array[0][\\"@list\\"]
        : _sEoQwUbfk4hEfugzNQ2ZiDcLMkG__array
    ) {
      if (v == null) continue;
    _sEoQwUbfk4hEfugzNQ2ZiDcLMkG.push(await Endpoints.fromJsonLd(
      v, options))
    }
    instance.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG = _sEoQwUbfk4hEfugzNQ2ZiDcLMkG;
    const _gAJzg1QDc4rcefFsUzGSYmyXvNH: (boolean)[] = [];

    const _gAJzg1QDc4rcefFsUzGSYmyXvNH__array = values[\\"http://joinmastodon.org/ns#discoverable\\"];
    for (
      const v of _gAJzg1QDc4rcefFsUzGSYmyXvNH__array == null
        ? []
        : _gAJzg1QDc4rcefFsUzGSYmyXvNH__array.length === 1 && \\"@list\\" in _gAJzg1QDc4rcefFsUzGSYmyXvNH__array[0]
        ? _gAJzg1QDc4rcefFsUzGSYmyXvNH__array[0][\\"@list\\"]
        : _gAJzg1QDc4rcefFsUzGSYmyXvNH__array
    ) {
      if (v == null) continue;
    _gAJzg1QDc4rcefFsUzGSYmyXvNH.push(v[\\"@value\\"])
    }
    instance.#_gAJzg1QDc4rcefFsUzGSYmyXvNH = _gAJzg1QDc4rcefFsUzGSYmyXvNH;
    const _2kGKkJtoFWg8c18PaVSqj9NKP4t7: (boolean)[] = [];

    const _2kGKkJtoFWg8c18PaVSqj9NKP4t7__array = values[\\"http://joinmastodon.org/ns#suspended\\"];
    for (
      const v of _2kGKkJtoFWg8c18PaVSqj9NKP4t7__array == null
        ? []
        : _2kGKkJtoFWg8c18PaVSqj9NKP4t7__array.length === 1 && \\"@list\\" in _2kGKkJtoFWg8c18PaVSqj9NKP4t7__array[0]
        ? _2kGKkJtoFWg8c18PaVSqj9NKP4t7__array[0][\\"@list\\"]
        : _2kGKkJtoFWg8c18PaVSqj9NKP4t7__array
    ) {
      if (v == null) continue;
    _2kGKkJtoFWg8c18PaVSqj9NKP4t7.push(v[\\"@value\\"])
    }
    instance.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7 = _2kGKkJtoFWg8c18PaVSqj9NKP4t7;
    const _79S8K4f5J9MWUgCxziRyUe6PTHZ: (boolean)[] = [];

    const _79S8K4f5J9MWUgCxziRyUe6PTHZ__array = values[\\"http://joinmastodon.org/ns#memorial\\"];
    for (
      const v of _79S8K4f5J9MWUgCxziRyUe6PTHZ__array == null
        ? []
        : _79S8K4f5J9MWUgCxziRyUe6PTHZ__array.length === 1 && \\"@list\\" in _79S8K4f5J9MWUgCxziRyUe6PTHZ__array[0]
        ? _79S8K4f5J9MWUgCxziRyUe6PTHZ__array[0][\\"@list\\"]
        : _79S8K4f5J9MWUgCxziRyUe6PTHZ__array
    ) {
      if (v == null) continue;
    _79S8K4f5J9MWUgCxziRyUe6PTHZ.push(v[\\"@value\\"])
    }
    instance.#_79S8K4f5J9MWUgCxziRyUe6PTHZ = _79S8K4f5J9MWUgCxziRyUe6PTHZ;
    const _2diCorzqPGQQqftp6e4SrCEwEnyk: (boolean)[] = [];

    const _2diCorzqPGQQqftp6e4SrCEwEnyk__array = values[\\"http://joinmastodon.org/ns#indexable\\"];
    for (
      const v of _2diCorzqPGQQqftp6e4SrCEwEnyk__array == null
        ? []
        : _2diCorzqPGQQqftp6e4SrCEwEnyk__array.length === 1 && \\"@list\\" in _2diCorzqPGQQqftp6e4SrCEwEnyk__array[0]
        ? _2diCorzqPGQQqftp6e4SrCEwEnyk__array[0][\\"@list\\"]
        : _2diCorzqPGQQqftp6e4SrCEwEnyk__array
    ) {
      if (v == null) continue;
    _2diCorzqPGQQqftp6e4SrCEwEnyk.push(v[\\"@value\\"])
    }
    instance.#_2diCorzqPGQQqftp6e4SrCEwEnyk = _2diCorzqPGQQqftp6e4SrCEwEnyk;
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
      const _3isuDgRAKSntq9XdbjiNxjwyPZAf = this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3isuDgRAKSntq9XdbjiNxjwyPZAf.length == 1) {
        proxy.preferredUsername = _3isuDgRAKSntq9XdbjiNxjwyPZAf[0];
      }
      
      if (_3isuDgRAKSntq9XdbjiNxjwyPZAf.length > 1
          || !(\\"preferredUsername\\" in proxy)
          && _3isuDgRAKSntq9XdbjiNxjwyPZAf.length > 0) {
        proxy.preferredUsernames = _3isuDgRAKSntq9XdbjiNxjwyPZAf;
      }
      
      const _axq166E2eZADq34V4MYUc8KMZdC = this.#_axq166E2eZADq34V4MYUc8KMZdC
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_axq166E2eZADq34V4MYUc8KMZdC.length == 1) {
        proxy.publicKey = _axq166E2eZADq34V4MYUc8KMZdC[0];
      }
      
      if (_axq166E2eZADq34V4MYUc8KMZdC.length > 1
          || !(\\"publicKey\\" in proxy)
          && _axq166E2eZADq34V4MYUc8KMZdC.length > 0) {
        proxy.publicKeys = _axq166E2eZADq34V4MYUc8KMZdC;
      }
      
      const _4EHQFWZSz1k1d4LmPrQiMba2GbP3 = this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_4EHQFWZSz1k1d4LmPrQiMba2GbP3.length == 1) {
        proxy.assertionMethod = _4EHQFWZSz1k1d4LmPrQiMba2GbP3[0];
      }
      
      if (_4EHQFWZSz1k1d4LmPrQiMba2GbP3.length > 1
          || !(\\"assertionMethod\\" in proxy)
          && _4EHQFWZSz1k1d4LmPrQiMba2GbP3.length > 0) {
        proxy.assertionMethods = _4EHQFWZSz1k1d4LmPrQiMba2GbP3;
      }
      
      const _36QNc9MxfkKf6h8sEUQSHnV9NZA = this.#_36QNc9MxfkKf6h8sEUQSHnV9NZA
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_36QNc9MxfkKf6h8sEUQSHnV9NZA.length == 1) {
        proxy.manuallyApprovesFollowers = _36QNc9MxfkKf6h8sEUQSHnV9NZA[0];
      }
      
      const _3ghX3VfZXXbLvhCRH7QJqpzLrXjB = this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3ghX3VfZXXbLvhCRH7QJqpzLrXjB.length == 1) {
        proxy.inbox = _3ghX3VfZXXbLvhCRH7QJqpzLrXjB[0];
      }
      
      const _41QwhqJouoLg3h8dRPKat21brynC = this.#_41QwhqJouoLg3h8dRPKat21brynC
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_41QwhqJouoLg3h8dRPKat21brynC.length == 1) {
        proxy.outbox = _41QwhqJouoLg3h8dRPKat21brynC[0];
      }
      
      const _3yAv8jymNfNuJUDuBzJ1NQhdbAee = this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3yAv8jymNfNuJUDuBzJ1NQhdbAee.length == 1) {
        proxy.following = _3yAv8jymNfNuJUDuBzJ1NQhdbAee[0];
      }
      
      const _BBCTgfphhsFzpVfKTykGSpBNwoA = this.#_BBCTgfphhsFzpVfKTykGSpBNwoA
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_BBCTgfphhsFzpVfKTykGSpBNwoA.length == 1) {
        proxy.followers = _BBCTgfphhsFzpVfKTykGSpBNwoA[0];
      }
      
      const _3bgkPwJanyTCoVFM9ovRcus8tKkU = this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3bgkPwJanyTCoVFM9ovRcus8tKkU.length == 1) {
        proxy.liked = _3bgkPwJanyTCoVFM9ovRcus8tKkU[0];
      }
      
      const _4N1vBJzXDf8NbBumeECQMFvKetja = this.#_4N1vBJzXDf8NbBumeECQMFvKetja
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_4N1vBJzXDf8NbBumeECQMFvKetja.length == 1) {
        proxy.featured = _4N1vBJzXDf8NbBumeECQMFvKetja[0];
      }
      
      const _2MxnRRLq9iPzx5CFq2NPrXdUDCac = this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2MxnRRLq9iPzx5CFq2NPrXdUDCac.length == 1) {
        proxy.featuredTags = _2MxnRRLq9iPzx5CFq2NPrXdUDCac[0];
      }
      
      const _3sG2Hdwn9qzKGu9mpYkqakAMUkH9 = this.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3sG2Hdwn9qzKGu9mpYkqakAMUkH9.length > 1
          || !(\\"stream\\" in proxy)
          && _3sG2Hdwn9qzKGu9mpYkqakAMUkH9.length > 0) {
        proxy.streams = _3sG2Hdwn9qzKGu9mpYkqakAMUkH9;
      }
      
      const _sEoQwUbfk4hEfugzNQ2ZiDcLMkG = this.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_sEoQwUbfk4hEfugzNQ2ZiDcLMkG.length == 1) {
        proxy.endpoints = _sEoQwUbfk4hEfugzNQ2ZiDcLMkG[0];
      }
      
      const _gAJzg1QDc4rcefFsUzGSYmyXvNH = this.#_gAJzg1QDc4rcefFsUzGSYmyXvNH
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_gAJzg1QDc4rcefFsUzGSYmyXvNH.length == 1) {
        proxy.discoverable = _gAJzg1QDc4rcefFsUzGSYmyXvNH[0];
      }
      
      const _2kGKkJtoFWg8c18PaVSqj9NKP4t7 = this.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2kGKkJtoFWg8c18PaVSqj9NKP4t7.length == 1) {
        proxy.suspended = _2kGKkJtoFWg8c18PaVSqj9NKP4t7[0];
      }
      
      const _79S8K4f5J9MWUgCxziRyUe6PTHZ = this.#_79S8K4f5J9MWUgCxziRyUe6PTHZ
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_79S8K4f5J9MWUgCxziRyUe6PTHZ.length == 1) {
        proxy.memorial = _79S8K4f5J9MWUgCxziRyUe6PTHZ[0];
      }
      
      const _2diCorzqPGQQqftp6e4SrCEwEnyk = this.#_2diCorzqPGQQqftp6e4SrCEwEnyk
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2diCorzqPGQQqftp6e4SrCEwEnyk.length == 1) {
        proxy.indexable = _2diCorzqPGQQqftp6e4SrCEwEnyk[0];
      }
      
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Person \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Person \\" + inspect(proxy, options);
  }
  }

/** Represents a logical or physical location.  See [5.3 Representing
 * Places](https://www.w3.org/TR/activitystreams-vocabulary/#places)
 * for additional information.
 * 
 */
export class Place extends Object {

    /**
     * The type URI of {@link Place}: \`https://www.w3.org/ns/activitystreams#Place\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Place\\");
    }
  #_3UCsHnBHvDAXJnBuzw3zw1VVs3Ne: (number)[] = [];
#_3Q6KDcFQUJRRaBux1BL2yp5QWiBi: (number)[] = [];
#_3g85RoKRnaNjP7DFyLSvsWDg7HGM: (number)[] = [];
#_B2GEYdS9yBAF3ho1pm1rcRg7cSf: (number)[] = [];
#_3ga86BKHUtRkGx5PHBjRiUXXzwnw: (number)[] = [];
#_oKrwxU4V8wiKhMW1QEYQibcJh8c: ((\\"cm\\" | \\"feet\\" | \\"inches\\" | \\"km\\" | \\"m\\" | \\"miles\\" | URL))[] = [];

  /**
   * Constructs a new instance of Place with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];accuracy?: number | null;altitude?: number | null;latitude?: number | null;longitude?: number | null;radius?: number | null;units?: \\"cm\\" | \\"feet\\" | \\"inches\\" | \\"km\\" | \\"m\\" | \\"miles\\" | URL | null;}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });
        if (\\"accuracy\\" in values &&             values.accuracy != null) {
          if (typeof values.accuracy === \\"number\\" && !Number.isNaN(values.accuracy)) {
            // @ts-ignore: type is checked above.
            this.#_3UCsHnBHvDAXJnBuzw3zw1VVs3Ne = [values.accuracy];
          } else {
            throw new TypeError(
              \\"The accuracy must be of type \\" +
              \\"number\\" + \\".\\",
            );
          }
        }
      
        if (\\"altitude\\" in values &&             values.altitude != null) {
          if (typeof values.altitude === \\"number\\" && !Number.isNaN(values.altitude)) {
            // @ts-ignore: type is checked above.
            this.#_3Q6KDcFQUJRRaBux1BL2yp5QWiBi = [values.altitude];
          } else {
            throw new TypeError(
              \\"The altitude must be of type \\" +
              \\"number\\" + \\".\\",
            );
          }
        }
      
        if (\\"latitude\\" in values &&             values.latitude != null) {
          if (typeof values.latitude === \\"number\\" && !Number.isNaN(values.latitude)) {
            // @ts-ignore: type is checked above.
            this.#_3g85RoKRnaNjP7DFyLSvsWDg7HGM = [values.latitude];
          } else {
            throw new TypeError(
              \\"The latitude must be of type \\" +
              \\"number\\" + \\".\\",
            );
          }
        }
      
        if (\\"longitude\\" in values &&             values.longitude != null) {
          if (typeof values.longitude === \\"number\\" && !Number.isNaN(values.longitude)) {
            // @ts-ignore: type is checked above.
            this.#_B2GEYdS9yBAF3ho1pm1rcRg7cSf = [values.longitude];
          } else {
            throw new TypeError(
              \\"The longitude must be of type \\" +
              \\"number\\" + \\".\\",
            );
          }
        }
      
        if (\\"radius\\" in values &&             values.radius != null) {
          if (typeof values.radius === \\"number\\" && !Number.isNaN(values.radius)) {
            // @ts-ignore: type is checked above.
            this.#_3ga86BKHUtRkGx5PHBjRiUXXzwnw = [values.radius];
          } else {
            throw new TypeError(
              \\"The radius must be of type \\" +
              \\"number\\" + \\".\\",
            );
          }
        }
      
        if (\\"units\\" in values &&             values.units != null) {
          if (values.units == \\"cm\\" || values.units == \\"feet\\" || values.units == \\"inches\\" || values.units == \\"km\\" || values.units == \\"m\\" || values.units == \\"miles\\" || values.units instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_oKrwxU4V8wiKhMW1QEYQibcJh8c = [values.units];
          } else {
            throw new TypeError(
              \\"The units must be of type \\" +
              \\"\\\\\\"cm\\\\\\" | \\\\\\"feet\\\\\\" | \\\\\\"inches\\\\\\" | \\\\\\"km\\\\\\" | \\\\\\"m\\\\\\" | \\\\\\"miles\\\\\\" | URL\\" + \\".\\",
            );
          }
        }
      }

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];accuracy?: number | null;altitude?: number | null;latitude?: number | null;longitude?: number | null;radius?: number | null;units?: \\"cm\\" | \\"feet\\" | \\"inches\\" | \\"km\\" | \\"m\\" | \\"miles\\" | URL | null;}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Place {
  const clone = super.clone(values, options) as unknown as Place;clone.#_3UCsHnBHvDAXJnBuzw3zw1VVs3Ne = this.#_3UCsHnBHvDAXJnBuzw3zw1VVs3Ne;
        if (\\"accuracy\\" in values &&             values.accuracy != null) {
          if (typeof values.accuracy === \\"number\\" && !Number.isNaN(values.accuracy)) {
            // @ts-ignore: type is checked above.
            clone.#_3UCsHnBHvDAXJnBuzw3zw1VVs3Ne = [values.accuracy];
          } else {
            throw new TypeError(
              \\"The accuracy must be of type \\" +
              \\"number\\" + \\".\\",
            );
          }
        }
      clone.#_3Q6KDcFQUJRRaBux1BL2yp5QWiBi = this.#_3Q6KDcFQUJRRaBux1BL2yp5QWiBi;
        if (\\"altitude\\" in values &&             values.altitude != null) {
          if (typeof values.altitude === \\"number\\" && !Number.isNaN(values.altitude)) {
            // @ts-ignore: type is checked above.
            clone.#_3Q6KDcFQUJRRaBux1BL2yp5QWiBi = [values.altitude];
          } else {
            throw new TypeError(
              \\"The altitude must be of type \\" +
              \\"number\\" + \\".\\",
            );
          }
        }
      clone.#_3g85RoKRnaNjP7DFyLSvsWDg7HGM = this.#_3g85RoKRnaNjP7DFyLSvsWDg7HGM;
        if (\\"latitude\\" in values &&             values.latitude != null) {
          if (typeof values.latitude === \\"number\\" && !Number.isNaN(values.latitude)) {
            // @ts-ignore: type is checked above.
            clone.#_3g85RoKRnaNjP7DFyLSvsWDg7HGM = [values.latitude];
          } else {
            throw new TypeError(
              \\"The latitude must be of type \\" +
              \\"number\\" + \\".\\",
            );
          }
        }
      clone.#_B2GEYdS9yBAF3ho1pm1rcRg7cSf = this.#_B2GEYdS9yBAF3ho1pm1rcRg7cSf;
        if (\\"longitude\\" in values &&             values.longitude != null) {
          if (typeof values.longitude === \\"number\\" && !Number.isNaN(values.longitude)) {
            // @ts-ignore: type is checked above.
            clone.#_B2GEYdS9yBAF3ho1pm1rcRg7cSf = [values.longitude];
          } else {
            throw new TypeError(
              \\"The longitude must be of type \\" +
              \\"number\\" + \\".\\",
            );
          }
        }
      clone.#_3ga86BKHUtRkGx5PHBjRiUXXzwnw = this.#_3ga86BKHUtRkGx5PHBjRiUXXzwnw;
        if (\\"radius\\" in values &&             values.radius != null) {
          if (typeof values.radius === \\"number\\" && !Number.isNaN(values.radius)) {
            // @ts-ignore: type is checked above.
            clone.#_3ga86BKHUtRkGx5PHBjRiUXXzwnw = [values.radius];
          } else {
            throw new TypeError(
              \\"The radius must be of type \\" +
              \\"number\\" + \\".\\",
            );
          }
        }
      clone.#_oKrwxU4V8wiKhMW1QEYQibcJh8c = this.#_oKrwxU4V8wiKhMW1QEYQibcJh8c;
        if (\\"units\\" in values &&             values.units != null) {
          if (values.units == \\"cm\\" || values.units == \\"feet\\" || values.units == \\"inches\\" || values.units == \\"km\\" || values.units == \\"m\\" || values.units == \\"miles\\" || values.units instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_oKrwxU4V8wiKhMW1QEYQibcJh8c = [values.units];
          } else {
            throw new TypeError(
              \\"The units must be of type \\" +
              \\"\\\\\\"cm\\\\\\" | \\\\\\"feet\\\\\\" | \\\\\\"inches\\\\\\" | \\\\\\"km\\\\\\" | \\\\\\"m\\\\\\" | \\\\\\"miles\\\\\\" | URL\\" + \\".\\",
            );
          }
        }
      
    return clone;
  }
  
/** Indicates the accuracy of position coordinates on a {@link Place} objects.
 * Expressed in properties of percentage. e.g. \\"94.0\\" means \\"94.0% accurate\\".
 * 
 */
get accuracy(): (number | null) {
        if (this.#_3UCsHnBHvDAXJnBuzw3zw1VVs3Ne.length < 1) return null;
        return this.#_3UCsHnBHvDAXJnBuzw3zw1VVs3Ne[0];
      }
      
/** Indicates the altitude of a place.  The measurement units is indicated
 * using the {@link Place.units} property.  If {@link Place.units} is not
 * specified, the default is assumed to be \\"\`m\`\\" indicating meters.
 * 
 */
get altitude(): (number | null) {
        if (this.#_3Q6KDcFQUJRRaBux1BL2yp5QWiBi.length < 1) return null;
        return this.#_3Q6KDcFQUJRRaBux1BL2yp5QWiBi[0];
      }
      
/** The latitude of a place.
 */
get latitude(): (number | null) {
        if (this.#_3g85RoKRnaNjP7DFyLSvsWDg7HGM.length < 1) return null;
        return this.#_3g85RoKRnaNjP7DFyLSvsWDg7HGM[0];
      }
      
/** The longitude of a place.
 */
get longitude(): (number | null) {
        if (this.#_B2GEYdS9yBAF3ho1pm1rcRg7cSf.length < 1) return null;
        return this.#_B2GEYdS9yBAF3ho1pm1rcRg7cSf[0];
      }
      
/** The radius from the given latitude and longitude for a {@link Place}.
 * The units is expressed by the {@link Place.units} property.
 * If {@link Place.units} is not specified, the default is assumed to be
 * \\"\`m\`\\" indicating \\"meters\\".
 * 
 */
get radius(): (number | null) {
        if (this.#_3ga86BKHUtRkGx5PHBjRiUXXzwnw.length < 1) return null;
        return this.#_3ga86BKHUtRkGx5PHBjRiUXXzwnw[0];
      }
      
/** Specifies the measurement units for the {@link Place.radius} and
 * {@link Place.altitude} properties on a {@link Place} object.
 * If not specified, the default is assumed to be \\"\`m\`\\" for \\"meters\\".
 * 
 */
get units(): (\\"cm\\" | \\"feet\\" | \\"inches\\" | \\"km\\" | \\"m\\" | \\"miles\\" | URL | null) {
        if (this.#_oKrwxU4V8wiKhMW1QEYQibcJh8c.length < 1) return null;
        return this.#_oKrwxU4V8wiKhMW1QEYQibcJh8c[0];
      }
      
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    array = [];
    for (const v of this.#_3UCsHnBHvDAXJnBuzw3zw1VVs3Ne) {
      const element = (
    {
        \\"@type\\": \\"http://www.w3.org/2001/XMLSchema#float\\",
        \\"@value\\": v,
      }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#accuracy\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3Q6KDcFQUJRRaBux1BL2yp5QWiBi) {
      const element = (
    {
        \\"@type\\": \\"http://www.w3.org/2001/XMLSchema#float\\",
        \\"@value\\": v,
      }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#altitude\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3g85RoKRnaNjP7DFyLSvsWDg7HGM) {
      const element = (
    {
        \\"@type\\": \\"http://www.w3.org/2001/XMLSchema#float\\",
        \\"@value\\": v,
      }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#latitude\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_B2GEYdS9yBAF3ho1pm1rcRg7cSf) {
      const element = (
    {
        \\"@type\\": \\"http://www.w3.org/2001/XMLSchema#float\\",
        \\"@value\\": v,
      }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#longitude\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3ga86BKHUtRkGx5PHBjRiUXXzwnw) {
      const element = (
    {
        \\"@type\\": \\"http://www.w3.org/2001/XMLSchema#float\\",
        \\"@value\\": v,
      }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#radius\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_oKrwxU4V8wiKhMW1QEYQibcJh8c) {
      const element = (
    v == \\"cm\\" || v == \\"feet\\" || v == \\"inches\\" || v == \\"km\\" || v == \\"m\\" || v == \\"miles\\" ? { \\"@value\\": v } : { \\"@id\\": v.href }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#units\\"] = (
    array
      );
    }
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Place\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\"],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Place> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Place\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Place)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    const _3UCsHnBHvDAXJnBuzw3zw1VVs3Ne: (number)[] = [];

    const _3UCsHnBHvDAXJnBuzw3zw1VVs3Ne__array = values[\\"https://www.w3.org/ns/activitystreams#accuracy\\"];
    for (
      const v of _3UCsHnBHvDAXJnBuzw3zw1VVs3Ne__array == null
        ? []
        : _3UCsHnBHvDAXJnBuzw3zw1VVs3Ne__array.length === 1 && \\"@list\\" in _3UCsHnBHvDAXJnBuzw3zw1VVs3Ne__array[0]
        ? _3UCsHnBHvDAXJnBuzw3zw1VVs3Ne__array[0][\\"@list\\"]
        : _3UCsHnBHvDAXJnBuzw3zw1VVs3Ne__array
    ) {
      if (v == null) continue;
    _3UCsHnBHvDAXJnBuzw3zw1VVs3Ne.push(v[\\"@value\\"])
    }
    instance.#_3UCsHnBHvDAXJnBuzw3zw1VVs3Ne = _3UCsHnBHvDAXJnBuzw3zw1VVs3Ne;
    const _3Q6KDcFQUJRRaBux1BL2yp5QWiBi: (number)[] = [];

    const _3Q6KDcFQUJRRaBux1BL2yp5QWiBi__array = values[\\"https://www.w3.org/ns/activitystreams#altitude\\"];
    for (
      const v of _3Q6KDcFQUJRRaBux1BL2yp5QWiBi__array == null
        ? []
        : _3Q6KDcFQUJRRaBux1BL2yp5QWiBi__array.length === 1 && \\"@list\\" in _3Q6KDcFQUJRRaBux1BL2yp5QWiBi__array[0]
        ? _3Q6KDcFQUJRRaBux1BL2yp5QWiBi__array[0][\\"@list\\"]
        : _3Q6KDcFQUJRRaBux1BL2yp5QWiBi__array
    ) {
      if (v == null) continue;
    _3Q6KDcFQUJRRaBux1BL2yp5QWiBi.push(v[\\"@value\\"])
    }
    instance.#_3Q6KDcFQUJRRaBux1BL2yp5QWiBi = _3Q6KDcFQUJRRaBux1BL2yp5QWiBi;
    const _3g85RoKRnaNjP7DFyLSvsWDg7HGM: (number)[] = [];

    const _3g85RoKRnaNjP7DFyLSvsWDg7HGM__array = values[\\"https://www.w3.org/ns/activitystreams#latitude\\"];
    for (
      const v of _3g85RoKRnaNjP7DFyLSvsWDg7HGM__array == null
        ? []
        : _3g85RoKRnaNjP7DFyLSvsWDg7HGM__array.length === 1 && \\"@list\\" in _3g85RoKRnaNjP7DFyLSvsWDg7HGM__array[0]
        ? _3g85RoKRnaNjP7DFyLSvsWDg7HGM__array[0][\\"@list\\"]
        : _3g85RoKRnaNjP7DFyLSvsWDg7HGM__array
    ) {
      if (v == null) continue;
    _3g85RoKRnaNjP7DFyLSvsWDg7HGM.push(v[\\"@value\\"])
    }
    instance.#_3g85RoKRnaNjP7DFyLSvsWDg7HGM = _3g85RoKRnaNjP7DFyLSvsWDg7HGM;
    const _B2GEYdS9yBAF3ho1pm1rcRg7cSf: (number)[] = [];

    const _B2GEYdS9yBAF3ho1pm1rcRg7cSf__array = values[\\"https://www.w3.org/ns/activitystreams#longitude\\"];
    for (
      const v of _B2GEYdS9yBAF3ho1pm1rcRg7cSf__array == null
        ? []
        : _B2GEYdS9yBAF3ho1pm1rcRg7cSf__array.length === 1 && \\"@list\\" in _B2GEYdS9yBAF3ho1pm1rcRg7cSf__array[0]
        ? _B2GEYdS9yBAF3ho1pm1rcRg7cSf__array[0][\\"@list\\"]
        : _B2GEYdS9yBAF3ho1pm1rcRg7cSf__array
    ) {
      if (v == null) continue;
    _B2GEYdS9yBAF3ho1pm1rcRg7cSf.push(v[\\"@value\\"])
    }
    instance.#_B2GEYdS9yBAF3ho1pm1rcRg7cSf = _B2GEYdS9yBAF3ho1pm1rcRg7cSf;
    const _3ga86BKHUtRkGx5PHBjRiUXXzwnw: (number)[] = [];

    const _3ga86BKHUtRkGx5PHBjRiUXXzwnw__array = values[\\"https://www.w3.org/ns/activitystreams#radius\\"];
    for (
      const v of _3ga86BKHUtRkGx5PHBjRiUXXzwnw__array == null
        ? []
        : _3ga86BKHUtRkGx5PHBjRiUXXzwnw__array.length === 1 && \\"@list\\" in _3ga86BKHUtRkGx5PHBjRiUXXzwnw__array[0]
        ? _3ga86BKHUtRkGx5PHBjRiUXXzwnw__array[0][\\"@list\\"]
        : _3ga86BKHUtRkGx5PHBjRiUXXzwnw__array
    ) {
      if (v == null) continue;
    _3ga86BKHUtRkGx5PHBjRiUXXzwnw.push(v[\\"@value\\"])
    }
    instance.#_3ga86BKHUtRkGx5PHBjRiUXXzwnw = _3ga86BKHUtRkGx5PHBjRiUXXzwnw;
    const _oKrwxU4V8wiKhMW1QEYQibcJh8c: ((\\"cm\\" | \\"feet\\" | \\"inches\\" | \\"km\\" | \\"m\\" | \\"miles\\" | URL))[] = [];

    const _oKrwxU4V8wiKhMW1QEYQibcJh8c__array = values[\\"https://www.w3.org/ns/activitystreams#units\\"];
    for (
      const v of _oKrwxU4V8wiKhMW1QEYQibcJh8c__array == null
        ? []
        : _oKrwxU4V8wiKhMW1QEYQibcJh8c__array.length === 1 && \\"@list\\" in _oKrwxU4V8wiKhMW1QEYQibcJh8c__array[0]
        ? _oKrwxU4V8wiKhMW1QEYQibcJh8c__array[0][\\"@list\\"]
        : _oKrwxU4V8wiKhMW1QEYQibcJh8c__array
    ) {
      if (v == null) continue;
    
      const decoded =
      typeof v === \\"object\\" && \\"@value\\" in v
      && (v[\\"@value\\"] == \\"cm\\" || v[\\"@value\\"] == \\"feet\\" || v[\\"@value\\"] == \\"inches\\" || v[\\"@value\\"] == \\"km\\" || v[\\"@value\\"] == \\"m\\" || v[\\"@value\\"] == \\"miles\\") ? v[\\"@value\\"] : typeof v === \\"object\\" && \\"@id\\" in v
        && typeof v[\\"@id\\"] === \\"string\\" ? new URL(v[\\"@id\\"]) : undefined
      ;
      if (typeof decoded === \\"undefined\\") continue;
      _oKrwxU4V8wiKhMW1QEYQibcJh8c.push(decoded);
      
    }
    instance.#_oKrwxU4V8wiKhMW1QEYQibcJh8c = _oKrwxU4V8wiKhMW1QEYQibcJh8c;
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
      const _3UCsHnBHvDAXJnBuzw3zw1VVs3Ne = this.#_3UCsHnBHvDAXJnBuzw3zw1VVs3Ne
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3UCsHnBHvDAXJnBuzw3zw1VVs3Ne.length == 1) {
        proxy.accuracy = _3UCsHnBHvDAXJnBuzw3zw1VVs3Ne[0];
      }
      
      const _3Q6KDcFQUJRRaBux1BL2yp5QWiBi = this.#_3Q6KDcFQUJRRaBux1BL2yp5QWiBi
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3Q6KDcFQUJRRaBux1BL2yp5QWiBi.length == 1) {
        proxy.altitude = _3Q6KDcFQUJRRaBux1BL2yp5QWiBi[0];
      }
      
      const _3g85RoKRnaNjP7DFyLSvsWDg7HGM = this.#_3g85RoKRnaNjP7DFyLSvsWDg7HGM
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3g85RoKRnaNjP7DFyLSvsWDg7HGM.length == 1) {
        proxy.latitude = _3g85RoKRnaNjP7DFyLSvsWDg7HGM[0];
      }
      
      const _B2GEYdS9yBAF3ho1pm1rcRg7cSf = this.#_B2GEYdS9yBAF3ho1pm1rcRg7cSf
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_B2GEYdS9yBAF3ho1pm1rcRg7cSf.length == 1) {
        proxy.longitude = _B2GEYdS9yBAF3ho1pm1rcRg7cSf[0];
      }
      
      const _3ga86BKHUtRkGx5PHBjRiUXXzwnw = this.#_3ga86BKHUtRkGx5PHBjRiUXXzwnw
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3ga86BKHUtRkGx5PHBjRiUXXzwnw.length == 1) {
        proxy.radius = _3ga86BKHUtRkGx5PHBjRiUXXzwnw[0];
      }
      
      const _oKrwxU4V8wiKhMW1QEYQibcJh8c = this.#_oKrwxU4V8wiKhMW1QEYQibcJh8c
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_oKrwxU4V8wiKhMW1QEYQibcJh8c.length == 1) {
        proxy.units = _oKrwxU4V8wiKhMW1QEYQibcJh8c[0];
      }
      
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Place \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Place \\" + inspect(proxy, options);
  }
  }

/** A {@link Profile} is a content object that describes another {@link Object},
 * typically used to describe [Actor
 * Type](https://www.w3.org/TR/activitystreams-vocabulary/#actor-types) objects.
 * The {@link Profile.describes} property is used to reference the object being
 * described by the profile.
 * 
 */
export class Profile extends Object {

    /**
     * The type URI of {@link Profile}: \`https://www.w3.org/ns/activitystreams#Profile\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Profile\\");
    }
  #_3CLQ1PLSXrhSQbTGGHuxNyaEFKM1: (Object | URL)[] = [];

  /**
   * Constructs a new instance of Profile with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];describes?: Object | URL | null;}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });
        if (\\"describes\\" in values &&             values.describes != null) {
          if (values.describes instanceof Object || values.describes instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_3CLQ1PLSXrhSQbTGGHuxNyaEFKM1 = [values.describes];
          } else {
            throw new TypeError(
              \\"The describes must be of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      }

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];describes?: Object | URL | null;}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Profile {
  const clone = super.clone(values, options) as unknown as Profile;clone.#_3CLQ1PLSXrhSQbTGGHuxNyaEFKM1 = this.#_3CLQ1PLSXrhSQbTGGHuxNyaEFKM1;
        if (\\"describes\\" in values &&             values.describes != null) {
          if (values.describes instanceof Object || values.describes instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_3CLQ1PLSXrhSQbTGGHuxNyaEFKM1 = [values.describes];
          } else {
            throw new TypeError(
              \\"The describes must be of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
    return clone;
  }
  
    async #fetchDescribes(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Object | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Object.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Object\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Profile.getDescribes},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get describesId(): URL | null {
        if (this.#_3CLQ1PLSXrhSQbTGGHuxNyaEFKM1.length < 1) return null;
        const v = this.#_3CLQ1PLSXrhSQbTGGHuxNyaEFKM1[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** On a {@link Profile} object, the {@link Profile.describes} property
 * identifies the object described by the {@link Profile}.
 * 
 */

      async getDescribes(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Object | null> {
        if (this.#_3CLQ1PLSXrhSQbTGGHuxNyaEFKM1.length < 1) return null;
        const v = this.#_3CLQ1PLSXrhSQbTGGHuxNyaEFKM1[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchDescribes(v, options);
          if (fetched == null) return null;
          this.#_3CLQ1PLSXrhSQbTGGHuxNyaEFKM1[0] = fetched;
          return fetched;
        }
        return v;
      }
      
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    array = [];
    for (const v of this.#_3CLQ1PLSXrhSQbTGGHuxNyaEFKM1) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#describes\\"] = (
    array
      );
    }
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Profile\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\"],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Profile> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Profile\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Profile)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    const _3CLQ1PLSXrhSQbTGGHuxNyaEFKM1: (Object | URL)[] = [];

    const _3CLQ1PLSXrhSQbTGGHuxNyaEFKM1__array = values[\\"https://www.w3.org/ns/activitystreams#describes\\"];
    for (
      const v of _3CLQ1PLSXrhSQbTGGHuxNyaEFKM1__array == null
        ? []
        : _3CLQ1PLSXrhSQbTGGHuxNyaEFKM1__array.length === 1 && \\"@list\\" in _3CLQ1PLSXrhSQbTGGHuxNyaEFKM1__array[0]
        ? _3CLQ1PLSXrhSQbTGGHuxNyaEFKM1__array[0][\\"@list\\"]
        : _3CLQ1PLSXrhSQbTGGHuxNyaEFKM1__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _3CLQ1PLSXrhSQbTGGHuxNyaEFKM1.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _3CLQ1PLSXrhSQbTGGHuxNyaEFKM1.push(await Object.fromJsonLd(
      v, options))
    }
    instance.#_3CLQ1PLSXrhSQbTGGHuxNyaEFKM1 = _3CLQ1PLSXrhSQbTGGHuxNyaEFKM1;
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
      const _3CLQ1PLSXrhSQbTGGHuxNyaEFKM1 = this.#_3CLQ1PLSXrhSQbTGGHuxNyaEFKM1
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3CLQ1PLSXrhSQbTGGHuxNyaEFKM1.length == 1) {
        proxy.describes = _3CLQ1PLSXrhSQbTGGHuxNyaEFKM1[0];
      }
      
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Profile \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Profile \\" + inspect(proxy, options);
  }
  }

/** Represents a question being asked.  Question objects are an extension of
 * {@link IntransitiveActivity}.  That is, the Question object is an Activity,
 * but the direct object is the question itself and therefore it would not
 * contain an \`object\` property.
 * 
 * Either of the \`anyOf\` and \`oneOf\` properties *may* be used to express possible
 * answers, but a Question object *must not* have both properties. 
 * 
 */
export class Question extends IntransitiveActivity {

    /**
     * The type URI of {@link Question}: \`https://www.w3.org/ns/activitystreams#Question\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Question\\");
    }
  #_2N5scKaVEcdYHFmfKYYacAwUhUgQ: (Object | URL)[] = [];
#_2mV6isMTPRKbWdLCjcpiEysq5dAY: (Object | URL)[] = [];

  /**
   * Constructs a new instance of Question with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];exclusiveOptions?: (Object | URL)[];inclusiveOptions?: (Object | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });
        if (\\"exclusiveOptions\\" in values &&             values.exclusiveOptions != null) {
      
          if (Array.isArray(values.exclusiveOptions) &&
              values.exclusiveOptions.every(v => v instanceof Object || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_2N5scKaVEcdYHFmfKYYacAwUhUgQ = values.exclusiveOptions;
          } else {
            throw new TypeError(
              \\"The exclusiveOptions must be an array of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"inclusiveOptions\\" in values &&             values.inclusiveOptions != null) {
      
          if (Array.isArray(values.inclusiveOptions) &&
              values.inclusiveOptions.every(v => v instanceof Object || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_2mV6isMTPRKbWdLCjcpiEysq5dAY = values.inclusiveOptions;
          } else {
            throw new TypeError(
              \\"The inclusiveOptions must be an array of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      }

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];exclusiveOptions?: (Object | URL)[];inclusiveOptions?: (Object | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Question {
  const clone = super.clone(values, options) as unknown as Question;clone.#_2N5scKaVEcdYHFmfKYYacAwUhUgQ = this.#_2N5scKaVEcdYHFmfKYYacAwUhUgQ;
        if (\\"exclusiveOptions\\" in values &&             values.exclusiveOptions != null) {
      
          if (Array.isArray(values.exclusiveOptions) &&
              values.exclusiveOptions.every(v => v instanceof Object || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_2N5scKaVEcdYHFmfKYYacAwUhUgQ = values.exclusiveOptions;
          } else {
            throw new TypeError(
              \\"The exclusiveOptions must be an array of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      clone.#_2mV6isMTPRKbWdLCjcpiEysq5dAY = this.#_2mV6isMTPRKbWdLCjcpiEysq5dAY;
        if (\\"inclusiveOptions\\" in values &&             values.inclusiveOptions != null) {
      
          if (Array.isArray(values.inclusiveOptions) &&
              values.inclusiveOptions.every(v => v instanceof Object || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_2mV6isMTPRKbWdLCjcpiEysq5dAY = values.inclusiveOptions;
          } else {
            throw new TypeError(
              \\"The inclusiveOptions must be an array of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
    return clone;
  }
  
    async #fetchExclusiveOption(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Object | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Object.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Object\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Question.getExclusiveOptions},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get exclusiveOptionIds(): URL[] {
        return this.#_2N5scKaVEcdYHFmfKYYacAwUhUgQ.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** Identifies an exclusive option for a Question.  Use of \`exclusiveOptions\`
 * implies that the Question can have only a single answer.  To indicate that
 * a Question can have multiple answers, use \`inclusiveOptions\`. 
 * 
 */

      async* getExclusiveOptions(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Object> {
        const vs = this.#_2N5scKaVEcdYHFmfKYYacAwUhUgQ;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchExclusiveOption(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
    async #fetchInclusiveOption(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Object | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Object.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Object\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Question.getInclusiveOptions},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get inclusiveOptionIds(): URL[] {
        return this.#_2mV6isMTPRKbWdLCjcpiEysq5dAY.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** Identifies an inclusive option for a Question.  Use of \`inclusiveOptions\`
 * implies that the Question can have multiple answers.  To indicate that
 * a Question can have only one answer, use \`exclusiveOptions\`.
 * 
 */

      async* getInclusiveOptions(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Object> {
        const vs = this.#_2mV6isMTPRKbWdLCjcpiEysq5dAY;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchInclusiveOption(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    array = [];
    for (const v of this.#_2N5scKaVEcdYHFmfKYYacAwUhUgQ) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#oneOf\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_2mV6isMTPRKbWdLCjcpiEysq5dAY) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#anyOf\\"] = (
    array
      );
    }
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Question\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\",{\\"toot\\":\\"http://joinmastodon.org/ns#\\",\\"sensitive\\":\\"as:sensitive\\",\\"Emoji\\":\\"toot:Emoji\\",\\"Hashtag\\":\\"as:Hashtag\\"}],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Question> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Question\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Question)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    const _2N5scKaVEcdYHFmfKYYacAwUhUgQ: (Object | URL)[] = [];

    const _2N5scKaVEcdYHFmfKYYacAwUhUgQ__array = values[\\"https://www.w3.org/ns/activitystreams#oneOf\\"];
    for (
      const v of _2N5scKaVEcdYHFmfKYYacAwUhUgQ__array == null
        ? []
        : _2N5scKaVEcdYHFmfKYYacAwUhUgQ__array.length === 1 && \\"@list\\" in _2N5scKaVEcdYHFmfKYYacAwUhUgQ__array[0]
        ? _2N5scKaVEcdYHFmfKYYacAwUhUgQ__array[0][\\"@list\\"]
        : _2N5scKaVEcdYHFmfKYYacAwUhUgQ__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _2N5scKaVEcdYHFmfKYYacAwUhUgQ.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _2N5scKaVEcdYHFmfKYYacAwUhUgQ.push(await Object.fromJsonLd(
      v, options))
    }
    instance.#_2N5scKaVEcdYHFmfKYYacAwUhUgQ = _2N5scKaVEcdYHFmfKYYacAwUhUgQ;
    const _2mV6isMTPRKbWdLCjcpiEysq5dAY: (Object | URL)[] = [];

    const _2mV6isMTPRKbWdLCjcpiEysq5dAY__array = values[\\"https://www.w3.org/ns/activitystreams#anyOf\\"];
    for (
      const v of _2mV6isMTPRKbWdLCjcpiEysq5dAY__array == null
        ? []
        : _2mV6isMTPRKbWdLCjcpiEysq5dAY__array.length === 1 && \\"@list\\" in _2mV6isMTPRKbWdLCjcpiEysq5dAY__array[0]
        ? _2mV6isMTPRKbWdLCjcpiEysq5dAY__array[0][\\"@list\\"]
        : _2mV6isMTPRKbWdLCjcpiEysq5dAY__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _2mV6isMTPRKbWdLCjcpiEysq5dAY.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _2mV6isMTPRKbWdLCjcpiEysq5dAY.push(await Object.fromJsonLd(
      v, options))
    }
    instance.#_2mV6isMTPRKbWdLCjcpiEysq5dAY = _2mV6isMTPRKbWdLCjcpiEysq5dAY;
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
      const _2N5scKaVEcdYHFmfKYYacAwUhUgQ = this.#_2N5scKaVEcdYHFmfKYYacAwUhUgQ
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2N5scKaVEcdYHFmfKYYacAwUhUgQ.length > 1
          || !(\\"exclusiveOption\\" in proxy)
          && _2N5scKaVEcdYHFmfKYYacAwUhUgQ.length > 0) {
        proxy.exclusiveOptions = _2N5scKaVEcdYHFmfKYYacAwUhUgQ;
      }
      
      const _2mV6isMTPRKbWdLCjcpiEysq5dAY = this.#_2mV6isMTPRKbWdLCjcpiEysq5dAY
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2mV6isMTPRKbWdLCjcpiEysq5dAY.length > 1
          || !(\\"inclusiveOption\\" in proxy)
          && _2mV6isMTPRKbWdLCjcpiEysq5dAY.length > 0) {
        proxy.inclusiveOptions = _2mV6isMTPRKbWdLCjcpiEysq5dAY;
      }
      
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Question \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Question \\" + inspect(proxy, options);
  }
  }

/** Indicates that the \`actor\` is rejecting the \`object\`.  The \`target\` and
 * \`origin\` typically have no defined meaning.
 * 
 */
export class Reject extends Activity {

    /**
     * The type URI of {@link Reject}: \`https://www.w3.org/ns/activitystreams#Reject\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Reject\\");
    }
  
  /**
   * Constructs a new instance of Reject with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });}

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Reject {
  const clone = super.clone(values, options) as unknown as Reject;
    return clone;
  }
  
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Reject\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\"],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Reject> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Reject\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Reject)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Reject \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Reject \\" + inspect(proxy, options);
  }
  }

/** Describes a relationship between two individuals.
 * The {@link Relationship.subject} and {@link Relationship.object} properties
 * are used to identify the connected individuals.
 * 
 * See [5.2 Representing Relationships Between
 * Entities](https://www.w3.org/TR/activitystreams-vocabulary/#connections)
 * for additional information.
 * 
 */
export class Relationship extends Object {

    /**
     * The type URI of {@link Relationship}: \`https://www.w3.org/ns/activitystreams#Relationship\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Relationship\\");
    }
  #_2Zqdmi46ZnDQsECS6mzwhrv3rUKq: (Object | URL)[] = [];
#_2MH19yxjn1wnHsNfa5n4JBhJzxyc: (Object | URL)[] = [];
#_4Lzz89F9qipAQSGkWyX9DGWiUojG: (Object | URL)[] = [];

  /**
   * Constructs a new instance of Relationship with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];subject?: Object | URL | null;object?: Object | URL | null;
objects?: (Object | URL)[];relationship?: Object | URL | null;
relationships?: (Object | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });
        if (\\"subject\\" in values &&             values.subject != null) {
          if (values.subject instanceof Object || values.subject instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_2Zqdmi46ZnDQsECS6mzwhrv3rUKq = [values.subject];
          } else {
            throw new TypeError(
              \\"The subject must be of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"object\\" in values &&             values.object != null) {
          if (values.object instanceof Object || values.object instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_2MH19yxjn1wnHsNfa5n4JBhJzxyc = [values.object];
          } else {
            throw new TypeError(
              \\"The object must be of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"objects\\" in values &&             values.objects != null) {
      
          if (\\"object\\" in values &&
              values.object != null) {
            throw new TypeError(
              \\"Cannot initialize both object and \\" +
                \\"objects at the same time.\\",
            );
          }
        
          if (Array.isArray(values.objects) &&
              values.objects.every(v => v instanceof Object || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_2MH19yxjn1wnHsNfa5n4JBhJzxyc = values.objects;
          } else {
            throw new TypeError(
              \\"The objects must be an array of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"relationship\\" in values &&             values.relationship != null) {
          if (values.relationship instanceof Object || values.relationship instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_4Lzz89F9qipAQSGkWyX9DGWiUojG = [values.relationship];
          } else {
            throw new TypeError(
              \\"The relationship must be of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"relationships\\" in values &&             values.relationships != null) {
      
          if (\\"relationship\\" in values &&
              values.relationship != null) {
            throw new TypeError(
              \\"Cannot initialize both relationship and \\" +
                \\"relationships at the same time.\\",
            );
          }
        
          if (Array.isArray(values.relationships) &&
              values.relationships.every(v => v instanceof Object || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_4Lzz89F9qipAQSGkWyX9DGWiUojG = values.relationships;
          } else {
            throw new TypeError(
              \\"The relationships must be an array of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      }

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];subject?: Object | URL | null;object?: Object | URL | null;
objects?: (Object | URL)[];relationship?: Object | URL | null;
relationships?: (Object | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Relationship {
  const clone = super.clone(values, options) as unknown as Relationship;clone.#_2Zqdmi46ZnDQsECS6mzwhrv3rUKq = this.#_2Zqdmi46ZnDQsECS6mzwhrv3rUKq;
        if (\\"subject\\" in values &&             values.subject != null) {
          if (values.subject instanceof Object || values.subject instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_2Zqdmi46ZnDQsECS6mzwhrv3rUKq = [values.subject];
          } else {
            throw new TypeError(
              \\"The subject must be of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      clone.#_2MH19yxjn1wnHsNfa5n4JBhJzxyc = this.#_2MH19yxjn1wnHsNfa5n4JBhJzxyc;
        if (\\"object\\" in values &&             values.object != null) {
          if (values.object instanceof Object || values.object instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_2MH19yxjn1wnHsNfa5n4JBhJzxyc = [values.object];
          } else {
            throw new TypeError(
              \\"The object must be of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"objects\\" in values &&             values.objects != null) {
      
          if (\\"object\\" in values &&
              values.object != null) {
            throw new TypeError(
              \\"Cannot update both object and \\" +
                \\"objects at the same time.\\",
            );
          }
        
          if (Array.isArray(values.objects) &&
              values.objects.every(v => v instanceof Object || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_2MH19yxjn1wnHsNfa5n4JBhJzxyc = values.objects;
          } else {
            throw new TypeError(
              \\"The objects must be an array of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      clone.#_4Lzz89F9qipAQSGkWyX9DGWiUojG = this.#_4Lzz89F9qipAQSGkWyX9DGWiUojG;
        if (\\"relationship\\" in values &&             values.relationship != null) {
          if (values.relationship instanceof Object || values.relationship instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_4Lzz89F9qipAQSGkWyX9DGWiUojG = [values.relationship];
          } else {
            throw new TypeError(
              \\"The relationship must be of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"relationships\\" in values &&             values.relationships != null) {
      
          if (\\"relationship\\" in values &&
              values.relationship != null) {
            throw new TypeError(
              \\"Cannot update both relationship and \\" +
                \\"relationships at the same time.\\",
            );
          }
        
          if (Array.isArray(values.relationships) &&
              values.relationships.every(v => v instanceof Object || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_4Lzz89F9qipAQSGkWyX9DGWiUojG = values.relationships;
          } else {
            throw new TypeError(
              \\"The relationships must be an array of type \\" +
              \\"Object | URL\\" + \\".\\",
            );
          }
        }
      
    return clone;
  }
  
    async #fetchSubject(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Object | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Object.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Object\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Relationship.getSubject},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get subjectId(): URL | null {
        if (this.#_2Zqdmi46ZnDQsECS6mzwhrv3rUKq.length < 1) return null;
        const v = this.#_2Zqdmi46ZnDQsECS6mzwhrv3rUKq[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** On a {@link Relationship} object, the {@link Relationship.subject} property
 * identifies one of the connected individuals.  For instance,
 * for a {@link Relationship} object describing \\"John is related to Sally\\",
 * the {@link Relationship.subject} property would refer to John.
 * 
 */

      async getSubject(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Object | null> {
        if (this.#_2Zqdmi46ZnDQsECS6mzwhrv3rUKq.length < 1) return null;
        const v = this.#_2Zqdmi46ZnDQsECS6mzwhrv3rUKq[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchSubject(v, options);
          if (fetched == null) return null;
          this.#_2Zqdmi46ZnDQsECS6mzwhrv3rUKq[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchObject(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Object | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Object.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Object\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Relationship.getObject},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get objectId(): URL | null {
        if (this.#_2MH19yxjn1wnHsNfa5n4JBhJzxyc.length < 1) return null;
        const v = this.#_2MH19yxjn1wnHsNfa5n4JBhJzxyc[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** Describes the entity to which the {@link Relationship.subject} is related.
 * 
 */

      async getObject(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Object | null> {
        if (this.#_2MH19yxjn1wnHsNfa5n4JBhJzxyc.length < 1) return null;
        const v = this.#_2MH19yxjn1wnHsNfa5n4JBhJzxyc[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchObject(v, options);
          if (fetched == null) return null;
          this.#_2MH19yxjn1wnHsNfa5n4JBhJzxyc[0] = fetched;
          return fetched;
        }
        return v;
      }
      
      /**
       * Similar to
       * {@link Relationship.getObjects},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get objectIds(): URL[] {
        return this.#_2MH19yxjn1wnHsNfa5n4JBhJzxyc.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** Describes the entity to which the {@link Relationship.subject} is related.
 * 
 */

      async* getObjects(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Object> {
        const vs = this.#_2MH19yxjn1wnHsNfa5n4JBhJzxyc;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchObject(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
    async #fetchRelationship(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Object | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Object.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Object\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Relationship.getRelationship},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get relationshipId(): URL | null {
        if (this.#_4Lzz89F9qipAQSGkWyX9DGWiUojG.length < 1) return null;
        const v = this.#_4Lzz89F9qipAQSGkWyX9DGWiUojG[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** On a {@link Relationship} object, the {@link Relationship.relationship}
 * property identifies the kind of relationship that exists between
 * {@link Relationship.subject} and {@link Relationship.object}.
 * 
 */

      async getRelationship(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Object | null> {
        if (this.#_4Lzz89F9qipAQSGkWyX9DGWiUojG.length < 1) return null;
        const v = this.#_4Lzz89F9qipAQSGkWyX9DGWiUojG[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchRelationship(v, options);
          if (fetched == null) return null;
          this.#_4Lzz89F9qipAQSGkWyX9DGWiUojG[0] = fetched;
          return fetched;
        }
        return v;
      }
      
      /**
       * Similar to
       * {@link Relationship.getRelationships},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get relationshipIds(): URL[] {
        return this.#_4Lzz89F9qipAQSGkWyX9DGWiUojG.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** On a {@link Relationship} object, the {@link Relationship.relationship}
 * property identifies the kind of relationship that exists between
 * {@link Relationship.subject} and {@link Relationship.object}.
 * 
 */

      async* getRelationships(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Object> {
        const vs = this.#_4Lzz89F9qipAQSGkWyX9DGWiUojG;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchRelationship(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    array = [];
    for (const v of this.#_2Zqdmi46ZnDQsECS6mzwhrv3rUKq) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#subject\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_2MH19yxjn1wnHsNfa5n4JBhJzxyc) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#object\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_4Lzz89F9qipAQSGkWyX9DGWiUojG) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#relationship\\"] = (
    array
      );
    }
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Relationship\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\"],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Relationship> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Relationship\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Relationship)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    const _2Zqdmi46ZnDQsECS6mzwhrv3rUKq: (Object | URL)[] = [];

    const _2Zqdmi46ZnDQsECS6mzwhrv3rUKq__array = values[\\"https://www.w3.org/ns/activitystreams#subject\\"];
    for (
      const v of _2Zqdmi46ZnDQsECS6mzwhrv3rUKq__array == null
        ? []
        : _2Zqdmi46ZnDQsECS6mzwhrv3rUKq__array.length === 1 && \\"@list\\" in _2Zqdmi46ZnDQsECS6mzwhrv3rUKq__array[0]
        ? _2Zqdmi46ZnDQsECS6mzwhrv3rUKq__array[0][\\"@list\\"]
        : _2Zqdmi46ZnDQsECS6mzwhrv3rUKq__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _2Zqdmi46ZnDQsECS6mzwhrv3rUKq.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _2Zqdmi46ZnDQsECS6mzwhrv3rUKq.push(await Object.fromJsonLd(
      v, options))
    }
    instance.#_2Zqdmi46ZnDQsECS6mzwhrv3rUKq = _2Zqdmi46ZnDQsECS6mzwhrv3rUKq;
    const _2MH19yxjn1wnHsNfa5n4JBhJzxyc: (Object | URL)[] = [];

    const _2MH19yxjn1wnHsNfa5n4JBhJzxyc__array = values[\\"https://www.w3.org/ns/activitystreams#object\\"];
    for (
      const v of _2MH19yxjn1wnHsNfa5n4JBhJzxyc__array == null
        ? []
        : _2MH19yxjn1wnHsNfa5n4JBhJzxyc__array.length === 1 && \\"@list\\" in _2MH19yxjn1wnHsNfa5n4JBhJzxyc__array[0]
        ? _2MH19yxjn1wnHsNfa5n4JBhJzxyc__array[0][\\"@list\\"]
        : _2MH19yxjn1wnHsNfa5n4JBhJzxyc__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _2MH19yxjn1wnHsNfa5n4JBhJzxyc.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _2MH19yxjn1wnHsNfa5n4JBhJzxyc.push(await Object.fromJsonLd(
      v, options))
    }
    instance.#_2MH19yxjn1wnHsNfa5n4JBhJzxyc = _2MH19yxjn1wnHsNfa5n4JBhJzxyc;
    const _4Lzz89F9qipAQSGkWyX9DGWiUojG: (Object | URL)[] = [];

    const _4Lzz89F9qipAQSGkWyX9DGWiUojG__array = values[\\"https://www.w3.org/ns/activitystreams#relationship\\"];
    for (
      const v of _4Lzz89F9qipAQSGkWyX9DGWiUojG__array == null
        ? []
        : _4Lzz89F9qipAQSGkWyX9DGWiUojG__array.length === 1 && \\"@list\\" in _4Lzz89F9qipAQSGkWyX9DGWiUojG__array[0]
        ? _4Lzz89F9qipAQSGkWyX9DGWiUojG__array[0][\\"@list\\"]
        : _4Lzz89F9qipAQSGkWyX9DGWiUojG__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _4Lzz89F9qipAQSGkWyX9DGWiUojG.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _4Lzz89F9qipAQSGkWyX9DGWiUojG.push(await Object.fromJsonLd(
      v, options))
    }
    instance.#_4Lzz89F9qipAQSGkWyX9DGWiUojG = _4Lzz89F9qipAQSGkWyX9DGWiUojG;
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
      const _2Zqdmi46ZnDQsECS6mzwhrv3rUKq = this.#_2Zqdmi46ZnDQsECS6mzwhrv3rUKq
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2Zqdmi46ZnDQsECS6mzwhrv3rUKq.length == 1) {
        proxy.subject = _2Zqdmi46ZnDQsECS6mzwhrv3rUKq[0];
      }
      
      const _2MH19yxjn1wnHsNfa5n4JBhJzxyc = this.#_2MH19yxjn1wnHsNfa5n4JBhJzxyc
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2MH19yxjn1wnHsNfa5n4JBhJzxyc.length == 1) {
        proxy.object = _2MH19yxjn1wnHsNfa5n4JBhJzxyc[0];
      }
      
      if (_2MH19yxjn1wnHsNfa5n4JBhJzxyc.length > 1
          || !(\\"object\\" in proxy)
          && _2MH19yxjn1wnHsNfa5n4JBhJzxyc.length > 0) {
        proxy.objects = _2MH19yxjn1wnHsNfa5n4JBhJzxyc;
      }
      
      const _4Lzz89F9qipAQSGkWyX9DGWiUojG = this.#_4Lzz89F9qipAQSGkWyX9DGWiUojG
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_4Lzz89F9qipAQSGkWyX9DGWiUojG.length == 1) {
        proxy.relationship = _4Lzz89F9qipAQSGkWyX9DGWiUojG[0];
      }
      
      if (_4Lzz89F9qipAQSGkWyX9DGWiUojG.length > 1
          || !(\\"relationship\\" in proxy)
          && _4Lzz89F9qipAQSGkWyX9DGWiUojG.length > 0) {
        proxy.relationships = _4Lzz89F9qipAQSGkWyX9DGWiUojG;
      }
      
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Relationship \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Relationship \\" + inspect(proxy, options);
  }
  }

/** Indicates that the \`actor\` is removing the \`object\`.  If specified,
 * the \`origin\` indicates the context from which the \`object\` is being removed.
 * 
 */
export class Remove extends Activity {

    /**
     * The type URI of {@link Remove}: \`https://www.w3.org/ns/activitystreams#Remove\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Remove\\");
    }
  
  /**
   * Constructs a new instance of Remove with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });}

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Remove {
  const clone = super.clone(values, options) as unknown as Remove;
    return clone;
  }
  
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Remove\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\"],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Remove> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Remove\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Remove)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Remove \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Remove \\" + inspect(proxy, options);
  }
  }

/** Represents a service of any kind.
 */
export class Service extends Object {

    /**
     * The type URI of {@link Service}: \`https://www.w3.org/ns/activitystreams#Service\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Service\\");
    }
  #_3isuDgRAKSntq9XdbjiNxjwyPZAf: ((string | LanguageString))[] = [];
#_axq166E2eZADq34V4MYUc8KMZdC: (CryptographicKey | URL)[] = [];
#_4EHQFWZSz1k1d4LmPrQiMba2GbP3: (Multikey | URL)[] = [];
#_36QNc9MxfkKf6h8sEUQSHnV9NZA: (boolean)[] = [];
#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB: (OrderedCollection | URL)[] = [];
#_41QwhqJouoLg3h8dRPKat21brynC: (OrderedCollection | URL)[] = [];
#_3yAv8jymNfNuJUDuBzJ1NQhdbAee: (Collection | URL)[] = [];
#_BBCTgfphhsFzpVfKTykGSpBNwoA: (Collection | URL)[] = [];
#_3bgkPwJanyTCoVFM9ovRcus8tKkU: (Collection | URL)[] = [];
#_4N1vBJzXDf8NbBumeECQMFvKetja: (Collection | URL)[] = [];
#_2MxnRRLq9iPzx5CFq2NPrXdUDCac: (Collection | URL)[] = [];
#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9: (Collection | URL)[] = [];
#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG: (Endpoints)[] = [];
#_gAJzg1QDc4rcefFsUzGSYmyXvNH: (boolean)[] = [];
#_2kGKkJtoFWg8c18PaVSqj9NKP4t7: (boolean)[] = [];
#_79S8K4f5J9MWUgCxziRyUe6PTHZ: (boolean)[] = [];
#_2diCorzqPGQQqftp6e4SrCEwEnyk: (boolean)[] = [];

  /**
   * Constructs a new instance of Service with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];preferredUsername?: string | LanguageString | null;
preferredUsernames?: ((string | LanguageString))[];publicKey?: CryptographicKey | URL | null;
publicKeys?: (CryptographicKey | URL)[];assertionMethod?: Multikey | URL | null;
assertionMethods?: (Multikey | URL)[];manuallyApprovesFollowers?: boolean | null;inbox?: OrderedCollection | URL | null;outbox?: OrderedCollection | URL | null;following?: Collection | URL | null;followers?: Collection | URL | null;liked?: Collection | URL | null;featured?: Collection | URL | null;featuredTags?: Collection | URL | null;streams?: (Collection | URL)[];endpoints?: Endpoints | null;discoverable?: boolean | null;suspended?: boolean | null;memorial?: boolean | null;indexable?: boolean | null;}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });
        if (\\"preferredUsername\\" in values &&             values.preferredUsername != null) {
          if (typeof values.preferredUsername === \\"string\\" || values.preferredUsername instanceof LanguageString) {
            // @ts-ignore: type is checked above.
            this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf = [values.preferredUsername];
          } else {
            throw new TypeError(
              \\"The preferredUsername must be of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      
        if (\\"preferredUsernames\\" in values &&             values.preferredUsernames != null) {
      
          if (\\"preferredUsername\\" in values &&
              values.preferredUsername != null) {
            throw new TypeError(
              \\"Cannot initialize both preferredUsername and \\" +
                \\"preferredUsernames at the same time.\\",
            );
          }
        
          if (Array.isArray(values.preferredUsernames) &&
              values.preferredUsernames.every(v => typeof v === \\"string\\" || v instanceof LanguageString)) {
            // @ts-ignore: type is checked above.
            this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf = values.preferredUsernames;
          } else {
            throw new TypeError(
              \\"The preferredUsernames must be an array of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      
        if (\\"publicKey\\" in values &&             values.publicKey != null) {
          if (values.publicKey instanceof CryptographicKey || values.publicKey instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_axq166E2eZADq34V4MYUc8KMZdC = [values.publicKey];
          } else {
            throw new TypeError(
              \\"The publicKey must be of type \\" +
              \\"CryptographicKey | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"publicKeys\\" in values &&             values.publicKeys != null) {
      
          if (\\"publicKey\\" in values &&
              values.publicKey != null) {
            throw new TypeError(
              \\"Cannot initialize both publicKey and \\" +
                \\"publicKeys at the same time.\\",
            );
          }
        
          if (Array.isArray(values.publicKeys) &&
              values.publicKeys.every(v => v instanceof CryptographicKey || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_axq166E2eZADq34V4MYUc8KMZdC = values.publicKeys;
          } else {
            throw new TypeError(
              \\"The publicKeys must be an array of type \\" +
              \\"CryptographicKey | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"assertionMethod\\" in values &&             values.assertionMethod != null) {
          if (values.assertionMethod instanceof Multikey || values.assertionMethod instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3 = [values.assertionMethod];
          } else {
            throw new TypeError(
              \\"The assertionMethod must be of type \\" +
              \\"Multikey | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"assertionMethods\\" in values &&             values.assertionMethods != null) {
      
          if (\\"assertionMethod\\" in values &&
              values.assertionMethod != null) {
            throw new TypeError(
              \\"Cannot initialize both assertionMethod and \\" +
                \\"assertionMethods at the same time.\\",
            );
          }
        
          if (Array.isArray(values.assertionMethods) &&
              values.assertionMethods.every(v => v instanceof Multikey || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3 = values.assertionMethods;
          } else {
            throw new TypeError(
              \\"The assertionMethods must be an array of type \\" +
              \\"Multikey | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"manuallyApprovesFollowers\\" in values &&             values.manuallyApprovesFollowers != null) {
          if (typeof values.manuallyApprovesFollowers === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            this.#_36QNc9MxfkKf6h8sEUQSHnV9NZA = [values.manuallyApprovesFollowers];
          } else {
            throw new TypeError(
              \\"The manuallyApprovesFollowers must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      
        if (\\"inbox\\" in values &&             values.inbox != null) {
          if (values.inbox instanceof OrderedCollection || values.inbox instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB = [values.inbox];
          } else {
            throw new TypeError(
              \\"The inbox must be of type \\" +
              \\"OrderedCollection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"outbox\\" in values &&             values.outbox != null) {
          if (values.outbox instanceof OrderedCollection || values.outbox instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_41QwhqJouoLg3h8dRPKat21brynC = [values.outbox];
          } else {
            throw new TypeError(
              \\"The outbox must be of type \\" +
              \\"OrderedCollection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"following\\" in values &&             values.following != null) {
          if (values.following instanceof Collection || values.following instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee = [values.following];
          } else {
            throw new TypeError(
              \\"The following must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"followers\\" in values &&             values.followers != null) {
          if (values.followers instanceof Collection || values.followers instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_BBCTgfphhsFzpVfKTykGSpBNwoA = [values.followers];
          } else {
            throw new TypeError(
              \\"The followers must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"liked\\" in values &&             values.liked != null) {
          if (values.liked instanceof Collection || values.liked instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU = [values.liked];
          } else {
            throw new TypeError(
              \\"The liked must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"featured\\" in values &&             values.featured != null) {
          if (values.featured instanceof Collection || values.featured instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_4N1vBJzXDf8NbBumeECQMFvKetja = [values.featured];
          } else {
            throw new TypeError(
              \\"The featured must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"featuredTags\\" in values &&             values.featuredTags != null) {
          if (values.featuredTags instanceof Collection || values.featuredTags instanceof URL) {
            // @ts-ignore: type is checked above.
            this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac = [values.featuredTags];
          } else {
            throw new TypeError(
              \\"The featuredTags must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"streams\\" in values &&             values.streams != null) {
      
          if (Array.isArray(values.streams) &&
              values.streams.every(v => v instanceof Collection || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            this.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9 = values.streams;
          } else {
            throw new TypeError(
              \\"The streams must be an array of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"endpoints\\" in values &&             values.endpoints != null) {
          if (values.endpoints instanceof Endpoints) {
            // @ts-ignore: type is checked above.
            this.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG = [values.endpoints];
          } else {
            throw new TypeError(
              \\"The endpoints must be of type \\" +
              \\"Endpoints\\" + \\".\\",
            );
          }
        }
      
        if (\\"discoverable\\" in values &&             values.discoverable != null) {
          if (typeof values.discoverable === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            this.#_gAJzg1QDc4rcefFsUzGSYmyXvNH = [values.discoverable];
          } else {
            throw new TypeError(
              \\"The discoverable must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      
        if (\\"suspended\\" in values &&             values.suspended != null) {
          if (typeof values.suspended === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            this.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7 = [values.suspended];
          } else {
            throw new TypeError(
              \\"The suspended must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      
        if (\\"memorial\\" in values &&             values.memorial != null) {
          if (typeof values.memorial === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            this.#_79S8K4f5J9MWUgCxziRyUe6PTHZ = [values.memorial];
          } else {
            throw new TypeError(
              \\"The memorial must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      
        if (\\"indexable\\" in values &&             values.indexable != null) {
          if (typeof values.indexable === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            this.#_2diCorzqPGQQqftp6e4SrCEwEnyk = [values.indexable];
          } else {
            throw new TypeError(
              \\"The indexable must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      }

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];preferredUsername?: string | LanguageString | null;
preferredUsernames?: ((string | LanguageString))[];publicKey?: CryptographicKey | URL | null;
publicKeys?: (CryptographicKey | URL)[];assertionMethod?: Multikey | URL | null;
assertionMethods?: (Multikey | URL)[];manuallyApprovesFollowers?: boolean | null;inbox?: OrderedCollection | URL | null;outbox?: OrderedCollection | URL | null;following?: Collection | URL | null;followers?: Collection | URL | null;liked?: Collection | URL | null;featured?: Collection | URL | null;featuredTags?: Collection | URL | null;streams?: (Collection | URL)[];endpoints?: Endpoints | null;discoverable?: boolean | null;suspended?: boolean | null;memorial?: boolean | null;indexable?: boolean | null;}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Service {
  const clone = super.clone(values, options) as unknown as Service;clone.#_3isuDgRAKSntq9XdbjiNxjwyPZAf = this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf;
        if (\\"preferredUsername\\" in values &&             values.preferredUsername != null) {
          if (typeof values.preferredUsername === \\"string\\" || values.preferredUsername instanceof LanguageString) {
            // @ts-ignore: type is checked above.
            clone.#_3isuDgRAKSntq9XdbjiNxjwyPZAf = [values.preferredUsername];
          } else {
            throw new TypeError(
              \\"The preferredUsername must be of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      
        if (\\"preferredUsernames\\" in values &&             values.preferredUsernames != null) {
      
          if (\\"preferredUsername\\" in values &&
              values.preferredUsername != null) {
            throw new TypeError(
              \\"Cannot update both preferredUsername and \\" +
                \\"preferredUsernames at the same time.\\",
            );
          }
        
          if (Array.isArray(values.preferredUsernames) &&
              values.preferredUsernames.every(v => typeof v === \\"string\\" || v instanceof LanguageString)) {
            // @ts-ignore: type is checked above.
            clone.#_3isuDgRAKSntq9XdbjiNxjwyPZAf = values.preferredUsernames;
          } else {
            throw new TypeError(
              \\"The preferredUsernames must be an array of type \\" +
              \\"string | LanguageString\\" + \\".\\",
            );
          }
        }
      clone.#_axq166E2eZADq34V4MYUc8KMZdC = this.#_axq166E2eZADq34V4MYUc8KMZdC;
        if (\\"publicKey\\" in values &&             values.publicKey != null) {
          if (values.publicKey instanceof CryptographicKey || values.publicKey instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_axq166E2eZADq34V4MYUc8KMZdC = [values.publicKey];
          } else {
            throw new TypeError(
              \\"The publicKey must be of type \\" +
              \\"CryptographicKey | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"publicKeys\\" in values &&             values.publicKeys != null) {
      
          if (\\"publicKey\\" in values &&
              values.publicKey != null) {
            throw new TypeError(
              \\"Cannot update both publicKey and \\" +
                \\"publicKeys at the same time.\\",
            );
          }
        
          if (Array.isArray(values.publicKeys) &&
              values.publicKeys.every(v => v instanceof CryptographicKey || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_axq166E2eZADq34V4MYUc8KMZdC = values.publicKeys;
          } else {
            throw new TypeError(
              \\"The publicKeys must be an array of type \\" +
              \\"CryptographicKey | URL\\" + \\".\\",
            );
          }
        }
      clone.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3 = this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3;
        if (\\"assertionMethod\\" in values &&             values.assertionMethod != null) {
          if (values.assertionMethod instanceof Multikey || values.assertionMethod instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3 = [values.assertionMethod];
          } else {
            throw new TypeError(
              \\"The assertionMethod must be of type \\" +
              \\"Multikey | URL\\" + \\".\\",
            );
          }
        }
      
        if (\\"assertionMethods\\" in values &&             values.assertionMethods != null) {
      
          if (\\"assertionMethod\\" in values &&
              values.assertionMethod != null) {
            throw new TypeError(
              \\"Cannot update both assertionMethod and \\" +
                \\"assertionMethods at the same time.\\",
            );
          }
        
          if (Array.isArray(values.assertionMethods) &&
              values.assertionMethods.every(v => v instanceof Multikey || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3 = values.assertionMethods;
          } else {
            throw new TypeError(
              \\"The assertionMethods must be an array of type \\" +
              \\"Multikey | URL\\" + \\".\\",
            );
          }
        }
      clone.#_36QNc9MxfkKf6h8sEUQSHnV9NZA = this.#_36QNc9MxfkKf6h8sEUQSHnV9NZA;
        if (\\"manuallyApprovesFollowers\\" in values &&             values.manuallyApprovesFollowers != null) {
          if (typeof values.manuallyApprovesFollowers === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            clone.#_36QNc9MxfkKf6h8sEUQSHnV9NZA = [values.manuallyApprovesFollowers];
          } else {
            throw new TypeError(
              \\"The manuallyApprovesFollowers must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      clone.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB = this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB;
        if (\\"inbox\\" in values &&             values.inbox != null) {
          if (values.inbox instanceof OrderedCollection || values.inbox instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB = [values.inbox];
          } else {
            throw new TypeError(
              \\"The inbox must be of type \\" +
              \\"OrderedCollection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_41QwhqJouoLg3h8dRPKat21brynC = this.#_41QwhqJouoLg3h8dRPKat21brynC;
        if (\\"outbox\\" in values &&             values.outbox != null) {
          if (values.outbox instanceof OrderedCollection || values.outbox instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_41QwhqJouoLg3h8dRPKat21brynC = [values.outbox];
          } else {
            throw new TypeError(
              \\"The outbox must be of type \\" +
              \\"OrderedCollection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee = this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee;
        if (\\"following\\" in values &&             values.following != null) {
          if (values.following instanceof Collection || values.following instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee = [values.following];
          } else {
            throw new TypeError(
              \\"The following must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_BBCTgfphhsFzpVfKTykGSpBNwoA = this.#_BBCTgfphhsFzpVfKTykGSpBNwoA;
        if (\\"followers\\" in values &&             values.followers != null) {
          if (values.followers instanceof Collection || values.followers instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_BBCTgfphhsFzpVfKTykGSpBNwoA = [values.followers];
          } else {
            throw new TypeError(
              \\"The followers must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_3bgkPwJanyTCoVFM9ovRcus8tKkU = this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU;
        if (\\"liked\\" in values &&             values.liked != null) {
          if (values.liked instanceof Collection || values.liked instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_3bgkPwJanyTCoVFM9ovRcus8tKkU = [values.liked];
          } else {
            throw new TypeError(
              \\"The liked must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_4N1vBJzXDf8NbBumeECQMFvKetja = this.#_4N1vBJzXDf8NbBumeECQMFvKetja;
        if (\\"featured\\" in values &&             values.featured != null) {
          if (values.featured instanceof Collection || values.featured instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_4N1vBJzXDf8NbBumeECQMFvKetja = [values.featured];
          } else {
            throw new TypeError(
              \\"The featured must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac = this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac;
        if (\\"featuredTags\\" in values &&             values.featuredTags != null) {
          if (values.featuredTags instanceof Collection || values.featuredTags instanceof URL) {
            // @ts-ignore: type is checked above.
            clone.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac = [values.featuredTags];
          } else {
            throw new TypeError(
              \\"The featuredTags must be of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9 = this.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9;
        if (\\"streams\\" in values &&             values.streams != null) {
      
          if (Array.isArray(values.streams) &&
              values.streams.every(v => v instanceof Collection || v instanceof URL)) {
            // @ts-ignore: type is checked above.
            clone.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9 = values.streams;
          } else {
            throw new TypeError(
              \\"The streams must be an array of type \\" +
              \\"Collection | URL\\" + \\".\\",
            );
          }
        }
      clone.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG = this.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG;
        if (\\"endpoints\\" in values &&             values.endpoints != null) {
          if (values.endpoints instanceof Endpoints) {
            // @ts-ignore: type is checked above.
            clone.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG = [values.endpoints];
          } else {
            throw new TypeError(
              \\"The endpoints must be of type \\" +
              \\"Endpoints\\" + \\".\\",
            );
          }
        }
      clone.#_gAJzg1QDc4rcefFsUzGSYmyXvNH = this.#_gAJzg1QDc4rcefFsUzGSYmyXvNH;
        if (\\"discoverable\\" in values &&             values.discoverable != null) {
          if (typeof values.discoverable === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            clone.#_gAJzg1QDc4rcefFsUzGSYmyXvNH = [values.discoverable];
          } else {
            throw new TypeError(
              \\"The discoverable must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      clone.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7 = this.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7;
        if (\\"suspended\\" in values &&             values.suspended != null) {
          if (typeof values.suspended === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            clone.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7 = [values.suspended];
          } else {
            throw new TypeError(
              \\"The suspended must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      clone.#_79S8K4f5J9MWUgCxziRyUe6PTHZ = this.#_79S8K4f5J9MWUgCxziRyUe6PTHZ;
        if (\\"memorial\\" in values &&             values.memorial != null) {
          if (typeof values.memorial === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            clone.#_79S8K4f5J9MWUgCxziRyUe6PTHZ = [values.memorial];
          } else {
            throw new TypeError(
              \\"The memorial must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      clone.#_2diCorzqPGQQqftp6e4SrCEwEnyk = this.#_2diCorzqPGQQqftp6e4SrCEwEnyk;
        if (\\"indexable\\" in values &&             values.indexable != null) {
          if (typeof values.indexable === \\"boolean\\") {
            // @ts-ignore: type is checked above.
            clone.#_2diCorzqPGQQqftp6e4SrCEwEnyk = [values.indexable];
          } else {
            throw new TypeError(
              \\"The indexable must be of type \\" +
              \\"boolean\\" + \\".\\",
            );
          }
        }
      
    return clone;
  }
  
/** A short username which may be used to refer to the actor,
 * with no uniqueness guarantees.
 * 
 */
get preferredUsername(): (string | LanguageString | null) {
        if (this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf.length < 1) return null;
        return this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf[0];
      }
      
/** A short username which may be used to refer to the actor,
 * with no uniqueness guarantees.
 * 
 */
get preferredUsernames(): ((string | LanguageString))[] {
        return this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf;
      }
      
    async #fetchPublicKey(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<CryptographicKey | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await CryptographicKey.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://w3id.org/security#Key\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Service.getPublicKey},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get publicKeyId(): URL | null {
        if (this.#_axq166E2eZADq34V4MYUc8KMZdC.length < 1) return null;
        const v = this.#_axq166E2eZADq34V4MYUc8KMZdC[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** A public part of the key pair owned by this actor.
 */

      async getPublicKey(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<CryptographicKey | null> {
        if (this.#_axq166E2eZADq34V4MYUc8KMZdC.length < 1) return null;
        const v = this.#_axq166E2eZADq34V4MYUc8KMZdC[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchPublicKey(v, options);
          if (fetched == null) return null;
          this.#_axq166E2eZADq34V4MYUc8KMZdC[0] = fetched;
          return fetched;
        }
        return v;
      }
      
      /**
       * Similar to
       * {@link Service.getPublicKeys},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get publicKeyIds(): URL[] {
        return this.#_axq166E2eZADq34V4MYUc8KMZdC.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** A public part of the key pair owned by this actor.
 */

      async* getPublicKeys(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<CryptographicKey> {
        const vs = this.#_axq166E2eZADq34V4MYUc8KMZdC;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchPublicKey(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
    async #fetchAssertionMethod(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Multikey | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Multikey.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://w3id.org/security#Multikey\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Service.getAssertionMethod},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get assertionMethodId(): URL | null {
        if (this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3.length < 1) return null;
        const v = this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** Represents this actor's public keys.  It serves as equivalent to
 * the \`publicKeys\` property, but is used for [FEP-521a] compliance.
 * 
 * [FEP-521a]: https://codeberg.org/fediverse/fep/src/branch/main/fep/521a/fep-521a.md
 * 
 */

      async getAssertionMethod(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Multikey | null> {
        if (this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3.length < 1) return null;
        const v = this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchAssertionMethod(v, options);
          if (fetched == null) return null;
          this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3[0] = fetched;
          return fetched;
        }
        return v;
      }
      
      /**
       * Similar to
       * {@link Service.getAssertionMethods},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get assertionMethodIds(): URL[] {
        return this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** Represents this actor's public keys.  It serves as equivalent to
 * the \`publicKeys\` property, but is used for [FEP-521a] compliance.
 * 
 * [FEP-521a]: https://codeberg.org/fediverse/fep/src/branch/main/fep/521a/fep-521a.md
 * 
 */

      async* getAssertionMethods(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Multikey> {
        const vs = this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchAssertionMethod(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
/** When \`true\`, conveys that for this actor, follow requests are not usually
 * automatically approved, but instead are examined by a person who may accept
 * or reject the request, at some time in the future.  Setting of \`false\`
 * conveys no information and may be ignored.  This information is typically
 * used to affect display of accounts, such as showing an account as private or
 * locked.
 * 
 */
get manuallyApprovesFollowers(): (boolean | null) {
        if (this.#_36QNc9MxfkKf6h8sEUQSHnV9NZA.length < 1) return null;
        return this.#_36QNc9MxfkKf6h8sEUQSHnV9NZA[0];
      }
      
    async #fetchInbox(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<OrderedCollection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await OrderedCollection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#OrderedCollection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Service.getInbox},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get inboxId(): URL | null {
        if (this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB.length < 1) return null;
        const v = this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** The inbox stream contains all activities received by the actor.  The server
 * SHOULD filter content according to the requester's permission.  In general,
 * the owner of an inbox is likely to be able to access all of their inbox
 * contents.  Depending on access control, some other content may be public,
 * whereas other content may require authentication for non-owner users,
 * if they can access the inbox at all.
 * 
 * The server MUST perform de-duplication of activities returned by the inbox.
 * Duplication can occur if an activity is addressed both to an actor's
 * followers, and a specific actor who also follows the recipient actor,
 * and the server has failed to de-duplicate the recipients list.
 * Such deduplication MUST be performed by comparing the \`id\` of the activities
 * and dropping any activities already seen.
 * 
 */

      async getInbox(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<OrderedCollection | null> {
        if (this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB.length < 1) return null;
        const v = this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchInbox(v, options);
          if (fetched == null) return null;
          this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchOutbox(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<OrderedCollection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await OrderedCollection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#OrderedCollection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Service.getOutbox},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get outboxId(): URL | null {
        if (this.#_41QwhqJouoLg3h8dRPKat21brynC.length < 1) return null;
        const v = this.#_41QwhqJouoLg3h8dRPKat21brynC[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** The outbox stream contains activities the user has published,
 * subject to the ability of the requestor to retrieve the activity
 * (that is, the contents of the outbox are filtered by the permissions of
 * the person reading it).  If a user submits a request without
 * [Authorization](https://www.w3.org/TR/activitypub/#authorization)
 * the server should respond with all of the
 * [Public](https://www.w3.org/TR/activitypub/#public-addressing) posts.
 * This could potentially be all relevant objects published by the user,
 * though the number of available items is left to the discretion of those
 * implementing and deploying the server.
 * 
 */

      async getOutbox(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<OrderedCollection | null> {
        if (this.#_41QwhqJouoLg3h8dRPKat21brynC.length < 1) return null;
        const v = this.#_41QwhqJouoLg3h8dRPKat21brynC[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchOutbox(v, options);
          if (fetched == null) return null;
          this.#_41QwhqJouoLg3h8dRPKat21brynC[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchFollowing(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Collection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Collection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Collection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Service.getFollowing},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get followingId(): URL | null {
        if (this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee.length < 1) return null;
        const v = this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** This is a list of everybody that the actor has followed, added as a
 * [side effect](https://www.w3.org/TR/activitypub/#follow-activity-outbox).
 * The \`following\` collection MUST be either an {@link OrderedCollection}
 * or a {@link Collection} and MAY be filtered on privileges of
 * an authenticated user or as appropriate when no authentication is given.
 * 
 */

      async getFollowing(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Collection | null> {
        if (this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee.length < 1) return null;
        const v = this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchFollowing(v, options);
          if (fetched == null) return null;
          this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchFollowers(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Collection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Collection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Collection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Service.getFollowers},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get followersId(): URL | null {
        if (this.#_BBCTgfphhsFzpVfKTykGSpBNwoA.length < 1) return null;
        const v = this.#_BBCTgfphhsFzpVfKTykGSpBNwoA[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** This is a list of everyone who has sent a {@link Follow} activity
 * for the actor, added as a
 * [side effect](https://www.w3.org/TR/activitypub/#follow-activity-outbox).
 * This is where one would find a list of all the actors that are following
 * the actor.  The \`followers\` collection MUST be either
 * an {@link OrderedCollection} or a {@link Collection} and MAY be filtered on
 * privileges of an authenticated user or as appropriate when no authentication
 * is given.
 * 
 */

      async getFollowers(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Collection | null> {
        if (this.#_BBCTgfphhsFzpVfKTykGSpBNwoA.length < 1) return null;
        const v = this.#_BBCTgfphhsFzpVfKTykGSpBNwoA[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchFollowers(v, options);
          if (fetched == null) return null;
          this.#_BBCTgfphhsFzpVfKTykGSpBNwoA[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchLiked(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Collection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Collection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Collection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Service.getLiked},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get likedId(): URL | null {
        if (this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU.length < 1) return null;
        const v = this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** This is a list of every object from all of the actor's {@link Like}
 * activities, added as a
 * [side effect](https://www.w3.org/TR/activitypub/#like-activity-outbox).
 * The \`liked\` collection MUST be either an {@link OrderedCollection} or
 * a {@link Collection} and MAY be filtered on privileges of an authenticated
 * user or as appropriate when no authentication is given.
 * 
 */

      async getLiked(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Collection | null> {
        if (this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU.length < 1) return null;
        const v = this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchLiked(v, options);
          if (fetched == null) return null;
          this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchFeatured(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Collection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Collection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Collection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Service.getFeatured},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get featuredId(): URL | null {
        if (this.#_4N1vBJzXDf8NbBumeECQMFvKetja.length < 1) return null;
        const v = this.#_4N1vBJzXDf8NbBumeECQMFvKetja[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** What is known in Mastodon as \\"pinned statuses\\", or statuses that are always
 * featured at the top of people's profiles, is implemented using an extra
 * property \`featured\` on the actor object that points to a {@link Collection}
 * of objects.
 * 
 */

      async getFeatured(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Collection | null> {
        if (this.#_4N1vBJzXDf8NbBumeECQMFvKetja.length < 1) return null;
        const v = this.#_4N1vBJzXDf8NbBumeECQMFvKetja[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchFeatured(v, options);
          if (fetched == null) return null;
          this.#_4N1vBJzXDf8NbBumeECQMFvKetja[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchFeaturedTags(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Collection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Collection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Collection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Service.getFeaturedTags},
       * but returns its \`@id\` URL instead of the object itself.
       */
      get featuredTagsId(): URL | null {
        if (this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac.length < 1) return null;
        const v = this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac[0];
        if (v instanceof URL) return v;
        return v.id;
      }
      
/** What is known in Mastodon as \\"featured hashtags\\", hashtags that are featured
 * at people's profiles, is implemented using an extra property \`featuredTags\`
 * on the actor object that points to a {@link Collection} of {@link Hashtag}
 * objects specifically.
 * 
 */

      async getFeaturedTags(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): Promise<Collection | null> {
        if (this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac.length < 1) return null;
        const v = this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac[0];
        if (v instanceof URL) {
          const fetched =
            await this.#fetchFeaturedTags(v, options);
          if (fetched == null) return null;
          this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac[0] = fetched;
          return fetched;
        }
        return v;
      }
      
    async #fetchStream(
      url: URL,
      options: {
        documentLoader?: DocumentLoader,
        contextLoader?: DocumentLoader,
        suppressError?: boolean,
      } = {}
    ): Promise<Collection | null> {
      const documentLoader =
        options.documentLoader ?? this._documentLoader ?? fetchDocumentLoader;
      const contextLoader =
        options.contextLoader ?? this._contextLoader ?? fetchDocumentLoader;
      let fetchResult: RemoteDocument;
      try {
        fetchResult = await documentLoader(url.href);
      } catch (error) {
        if (options.suppressError) {
          getLogger([\\"fedify\\", \\"vocab\\"]).error(
            \\"Failed to fetch {url}: {error}\\",
            { error, url: url.href }
          );
          return null;
        }
        throw error;
      }
      const { document } = fetchResult;
    
      try {
        return await Collection.fromJsonLd(
          document,
          { documentLoader, contextLoader },
        );
      } catch (e) {
        if (!(e instanceof TypeError)) throw e;
      }
      
      throw new TypeError(\\"Expected an object of any type of: \\" +
        [\\"https://www.w3.org/ns/activitystreams#Collection\\"].join(\\", \\"));
    }
    
      /**
       * Similar to
       * {@link Service.getStreams},
       * but returns their \`@id\`s instead of the objects themselves.
       */
      get streamIds(): URL[] {
        return this.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9.map((v) =>
          v instanceof URL ? v : v.id!
        ).filter(id => id !== null);
      }
      
/** A list of supplementary Collections which may be of interest.
 * 
 */

      async* getStreams(
        options: {
          documentLoader?: DocumentLoader,
          contextLoader?: DocumentLoader,
          suppressError?: boolean,
        } = {}
      ): AsyncIterable<Collection> {
        const vs = this.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9;
        for (let i = 0; i < vs.length; i++) {
          const v = vs[i];
          if (v instanceof URL) {
            const fetched =
              await this.#fetchStream(
                v, options);
            if (fetched == null) continue;
            vs[i] = fetched;
            yield fetched;
            continue;
          }
          yield v;
        }
      }
      
/** A JSON object which maps additional (typically server/domain-wide) endpoints
 * which may be useful either for this actor or someone referencing this actor.
 * This mapping may be nested inside the actor document as the value or may be
 * a link to a JSON-LD document with these properties.
 * 
 */
get endpoints(): (Endpoints | null) {
        if (this.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG.length < 1) return null;
        return this.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG[0];
      }
      
/** Allows users to opt-in or opt-out of discoverability features like
 * the profile directory.  This flag may also be used as an indicator of
 * the user's preferences toward being included in external discovery services,
 * such as search engines or other indexing tools.
 * 
 */
get discoverable(): (boolean | null) {
        if (this.#_gAJzg1QDc4rcefFsUzGSYmyXvNH.length < 1) return null;
        return this.#_gAJzg1QDc4rcefFsUzGSYmyXvNH[0];
      }
      
/** Reports whether a user was locally suspended, for better handling of
 * these accounts.
 * 
 */
get suspended(): (boolean | null) {
        if (this.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7.length < 1) return null;
        return this.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7[0];
      }
      
/** Whether the actor is in-memorial state.
 */
get memorial(): (boolean | null) {
        if (this.#_79S8K4f5J9MWUgCxziRyUe6PTHZ.length < 1) return null;
        return this.#_79S8K4f5J9MWUgCxziRyUe6PTHZ[0];
      }
      
/** Whether the actor allows to be indexed.
 */
get indexable(): (boolean | null) {
        if (this.#_2diCorzqPGQQqftp6e4SrCEwEnyk.length < 1) return null;
        return this.#_2diCorzqPGQQqftp6e4SrCEwEnyk[0];
      }
      
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    array = [];
    for (const v of this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf) {
      const element = (
    typeof v === \\"string\\" ? { \\"@value\\": v } : {
        \\"@value\\": v.toString(),
        \\"@language\\": v.language.compact(),
      }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#preferredUsername\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_axq166E2eZADq34V4MYUc8KMZdC) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://w3id.org/security#publicKey\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://w3id.org/security#assertionMethod\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_36QNc9MxfkKf6h8sEUQSHnV9NZA) {
      const element = (
    { \\"@value\\": v }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#manuallyApprovesFollowers\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://www.w3.org/ns/ldp#inbox\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_41QwhqJouoLg3h8dRPKat21brynC) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#outbox\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#following\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_BBCTgfphhsFzpVfKTykGSpBNwoA) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#followers\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#liked\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_4N1vBJzXDf8NbBumeECQMFvKetja) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://joinmastodon.org/ns#featured\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://joinmastodon.org/ns#featuredTags\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9) {
      const element = (
    v instanceof URL ? { \\"@id\\": v.href } : await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#streams\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG) {
      const element = (
    await v.toJsonLd(options)
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#endpoints\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_gAJzg1QDc4rcefFsUzGSYmyXvNH) {
      const element = (
    { \\"@value\\": v }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://joinmastodon.org/ns#discoverable\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7) {
      const element = (
    { \\"@value\\": v }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://joinmastodon.org/ns#suspended\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_79S8K4f5J9MWUgCxziRyUe6PTHZ) {
      const element = (
    { \\"@value\\": v }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://joinmastodon.org/ns#memorial\\"] = (
    array
      );
    }
    
    array = [];
    for (const v of this.#_2diCorzqPGQQqftp6e4SrCEwEnyk) {
      const element = (
    { \\"@value\\": v }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"http://joinmastodon.org/ns#indexable\\"] = (
    array
      );
    }
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Service\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/v1\\",\\"https://w3id.org/security/data-integrity/v1\\",\\"https://www.w3.org/ns/did/v1\\",\\"https://w3id.org/security/multikey/v1\\",{\\"manuallyApprovesFollowers\\":\\"as:manuallyApprovesFollowers\\",\\"toot\\":\\"http://joinmastodon.org/ns#\\",\\"featured\\":{\\"@id\\":\\"toot:featured\\",\\"@type\\":\\"@id\\"},\\"featuredTags\\":{\\"@id\\":\\"toot:featuredTags\\",\\"@type\\":\\"@id\\"},\\"discoverable\\":\\"toot:discoverable\\",\\"suspended\\":\\"toot:suspended\\",\\"memorial\\":\\"toot:memorial\\",\\"indexable\\":\\"toot:indexable\\",\\"schema\\":\\"http://schema.org#\\",\\"PropertyValue\\":\\"schema:PropertyValue\\",\\"value\\":\\"schema:value\\"}],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Service> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Service\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Service)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    const _3isuDgRAKSntq9XdbjiNxjwyPZAf: ((string | LanguageString))[] = [];

    const _3isuDgRAKSntq9XdbjiNxjwyPZAf__array = values[\\"https://www.w3.org/ns/activitystreams#preferredUsername\\"];
    for (
      const v of _3isuDgRAKSntq9XdbjiNxjwyPZAf__array == null
        ? []
        : _3isuDgRAKSntq9XdbjiNxjwyPZAf__array.length === 1 && \\"@list\\" in _3isuDgRAKSntq9XdbjiNxjwyPZAf__array[0]
        ? _3isuDgRAKSntq9XdbjiNxjwyPZAf__array[0][\\"@list\\"]
        : _3isuDgRAKSntq9XdbjiNxjwyPZAf__array
    ) {
      if (v == null) continue;
    
      const decoded =
      typeof v === \\"object\\" && \\"@value\\" in v
        && typeof v[\\"@value\\"] === \\"string\\" && !(\\"@language\\" in v) ? v[\\"@value\\"] : typeof v === \\"object\\" && \\"@language\\" in v && \\"@value\\" in v
        && typeof v[\\"@language\\"] === \\"string\\"
        && typeof v[\\"@value\\"] === \\"string\\" ? new LanguageString(v[\\"@value\\"], v[\\"@language\\"]) : undefined
      ;
      if (typeof decoded === \\"undefined\\") continue;
      _3isuDgRAKSntq9XdbjiNxjwyPZAf.push(decoded);
      
    }
    instance.#_3isuDgRAKSntq9XdbjiNxjwyPZAf = _3isuDgRAKSntq9XdbjiNxjwyPZAf;
    const _axq166E2eZADq34V4MYUc8KMZdC: (CryptographicKey | URL)[] = [];

    const _axq166E2eZADq34V4MYUc8KMZdC__array = values[\\"https://w3id.org/security#publicKey\\"];
    for (
      const v of _axq166E2eZADq34V4MYUc8KMZdC__array == null
        ? []
        : _axq166E2eZADq34V4MYUc8KMZdC__array.length === 1 && \\"@list\\" in _axq166E2eZADq34V4MYUc8KMZdC__array[0]
        ? _axq166E2eZADq34V4MYUc8KMZdC__array[0][\\"@list\\"]
        : _axq166E2eZADq34V4MYUc8KMZdC__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _axq166E2eZADq34V4MYUc8KMZdC.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _axq166E2eZADq34V4MYUc8KMZdC.push(await CryptographicKey.fromJsonLd(
      v, options))
    }
    instance.#_axq166E2eZADq34V4MYUc8KMZdC = _axq166E2eZADq34V4MYUc8KMZdC;
    const _4EHQFWZSz1k1d4LmPrQiMba2GbP3: (Multikey | URL)[] = [];

    const _4EHQFWZSz1k1d4LmPrQiMba2GbP3__array = values[\\"https://w3id.org/security#assertionMethod\\"];
    for (
      const v of _4EHQFWZSz1k1d4LmPrQiMba2GbP3__array == null
        ? []
        : _4EHQFWZSz1k1d4LmPrQiMba2GbP3__array.length === 1 && \\"@list\\" in _4EHQFWZSz1k1d4LmPrQiMba2GbP3__array[0]
        ? _4EHQFWZSz1k1d4LmPrQiMba2GbP3__array[0][\\"@list\\"]
        : _4EHQFWZSz1k1d4LmPrQiMba2GbP3__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _4EHQFWZSz1k1d4LmPrQiMba2GbP3.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _4EHQFWZSz1k1d4LmPrQiMba2GbP3.push(await Multikey.fromJsonLd(
      v, options))
    }
    instance.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3 = _4EHQFWZSz1k1d4LmPrQiMba2GbP3;
    const _36QNc9MxfkKf6h8sEUQSHnV9NZA: (boolean)[] = [];

    const _36QNc9MxfkKf6h8sEUQSHnV9NZA__array = values[\\"https://www.w3.org/ns/activitystreams#manuallyApprovesFollowers\\"];
    for (
      const v of _36QNc9MxfkKf6h8sEUQSHnV9NZA__array == null
        ? []
        : _36QNc9MxfkKf6h8sEUQSHnV9NZA__array.length === 1 && \\"@list\\" in _36QNc9MxfkKf6h8sEUQSHnV9NZA__array[0]
        ? _36QNc9MxfkKf6h8sEUQSHnV9NZA__array[0][\\"@list\\"]
        : _36QNc9MxfkKf6h8sEUQSHnV9NZA__array
    ) {
      if (v == null) continue;
    _36QNc9MxfkKf6h8sEUQSHnV9NZA.push(v[\\"@value\\"])
    }
    instance.#_36QNc9MxfkKf6h8sEUQSHnV9NZA = _36QNc9MxfkKf6h8sEUQSHnV9NZA;
    const _3ghX3VfZXXbLvhCRH7QJqpzLrXjB: (OrderedCollection | URL)[] = [];

    const _3ghX3VfZXXbLvhCRH7QJqpzLrXjB__array = values[\\"http://www.w3.org/ns/ldp#inbox\\"];
    for (
      const v of _3ghX3VfZXXbLvhCRH7QJqpzLrXjB__array == null
        ? []
        : _3ghX3VfZXXbLvhCRH7QJqpzLrXjB__array.length === 1 && \\"@list\\" in _3ghX3VfZXXbLvhCRH7QJqpzLrXjB__array[0]
        ? _3ghX3VfZXXbLvhCRH7QJqpzLrXjB__array[0][\\"@list\\"]
        : _3ghX3VfZXXbLvhCRH7QJqpzLrXjB__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _3ghX3VfZXXbLvhCRH7QJqpzLrXjB.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _3ghX3VfZXXbLvhCRH7QJqpzLrXjB.push(await OrderedCollection.fromJsonLd(
      v, options))
    }
    instance.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB = _3ghX3VfZXXbLvhCRH7QJqpzLrXjB;
    const _41QwhqJouoLg3h8dRPKat21brynC: (OrderedCollection | URL)[] = [];

    const _41QwhqJouoLg3h8dRPKat21brynC__array = values[\\"https://www.w3.org/ns/activitystreams#outbox\\"];
    for (
      const v of _41QwhqJouoLg3h8dRPKat21brynC__array == null
        ? []
        : _41QwhqJouoLg3h8dRPKat21brynC__array.length === 1 && \\"@list\\" in _41QwhqJouoLg3h8dRPKat21brynC__array[0]
        ? _41QwhqJouoLg3h8dRPKat21brynC__array[0][\\"@list\\"]
        : _41QwhqJouoLg3h8dRPKat21brynC__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _41QwhqJouoLg3h8dRPKat21brynC.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _41QwhqJouoLg3h8dRPKat21brynC.push(await OrderedCollection.fromJsonLd(
      v, options))
    }
    instance.#_41QwhqJouoLg3h8dRPKat21brynC = _41QwhqJouoLg3h8dRPKat21brynC;
    const _3yAv8jymNfNuJUDuBzJ1NQhdbAee: (Collection | URL)[] = [];

    const _3yAv8jymNfNuJUDuBzJ1NQhdbAee__array = values[\\"https://www.w3.org/ns/activitystreams#following\\"];
    for (
      const v of _3yAv8jymNfNuJUDuBzJ1NQhdbAee__array == null
        ? []
        : _3yAv8jymNfNuJUDuBzJ1NQhdbAee__array.length === 1 && \\"@list\\" in _3yAv8jymNfNuJUDuBzJ1NQhdbAee__array[0]
        ? _3yAv8jymNfNuJUDuBzJ1NQhdbAee__array[0][\\"@list\\"]
        : _3yAv8jymNfNuJUDuBzJ1NQhdbAee__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _3yAv8jymNfNuJUDuBzJ1NQhdbAee.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _3yAv8jymNfNuJUDuBzJ1NQhdbAee.push(await Collection.fromJsonLd(
      v, options))
    }
    instance.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee = _3yAv8jymNfNuJUDuBzJ1NQhdbAee;
    const _BBCTgfphhsFzpVfKTykGSpBNwoA: (Collection | URL)[] = [];

    const _BBCTgfphhsFzpVfKTykGSpBNwoA__array = values[\\"https://www.w3.org/ns/activitystreams#followers\\"];
    for (
      const v of _BBCTgfphhsFzpVfKTykGSpBNwoA__array == null
        ? []
        : _BBCTgfphhsFzpVfKTykGSpBNwoA__array.length === 1 && \\"@list\\" in _BBCTgfphhsFzpVfKTykGSpBNwoA__array[0]
        ? _BBCTgfphhsFzpVfKTykGSpBNwoA__array[0][\\"@list\\"]
        : _BBCTgfphhsFzpVfKTykGSpBNwoA__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _BBCTgfphhsFzpVfKTykGSpBNwoA.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _BBCTgfphhsFzpVfKTykGSpBNwoA.push(await Collection.fromJsonLd(
      v, options))
    }
    instance.#_BBCTgfphhsFzpVfKTykGSpBNwoA = _BBCTgfphhsFzpVfKTykGSpBNwoA;
    const _3bgkPwJanyTCoVFM9ovRcus8tKkU: (Collection | URL)[] = [];

    const _3bgkPwJanyTCoVFM9ovRcus8tKkU__array = values[\\"https://www.w3.org/ns/activitystreams#liked\\"];
    for (
      const v of _3bgkPwJanyTCoVFM9ovRcus8tKkU__array == null
        ? []
        : _3bgkPwJanyTCoVFM9ovRcus8tKkU__array.length === 1 && \\"@list\\" in _3bgkPwJanyTCoVFM9ovRcus8tKkU__array[0]
        ? _3bgkPwJanyTCoVFM9ovRcus8tKkU__array[0][\\"@list\\"]
        : _3bgkPwJanyTCoVFM9ovRcus8tKkU__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _3bgkPwJanyTCoVFM9ovRcus8tKkU.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _3bgkPwJanyTCoVFM9ovRcus8tKkU.push(await Collection.fromJsonLd(
      v, options))
    }
    instance.#_3bgkPwJanyTCoVFM9ovRcus8tKkU = _3bgkPwJanyTCoVFM9ovRcus8tKkU;
    const _4N1vBJzXDf8NbBumeECQMFvKetja: (Collection | URL)[] = [];

    const _4N1vBJzXDf8NbBumeECQMFvKetja__array = values[\\"http://joinmastodon.org/ns#featured\\"];
    for (
      const v of _4N1vBJzXDf8NbBumeECQMFvKetja__array == null
        ? []
        : _4N1vBJzXDf8NbBumeECQMFvKetja__array.length === 1 && \\"@list\\" in _4N1vBJzXDf8NbBumeECQMFvKetja__array[0]
        ? _4N1vBJzXDf8NbBumeECQMFvKetja__array[0][\\"@list\\"]
        : _4N1vBJzXDf8NbBumeECQMFvKetja__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _4N1vBJzXDf8NbBumeECQMFvKetja.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _4N1vBJzXDf8NbBumeECQMFvKetja.push(await Collection.fromJsonLd(
      v, options))
    }
    instance.#_4N1vBJzXDf8NbBumeECQMFvKetja = _4N1vBJzXDf8NbBumeECQMFvKetja;
    const _2MxnRRLq9iPzx5CFq2NPrXdUDCac: (Collection | URL)[] = [];

    const _2MxnRRLq9iPzx5CFq2NPrXdUDCac__array = values[\\"http://joinmastodon.org/ns#featuredTags\\"];
    for (
      const v of _2MxnRRLq9iPzx5CFq2NPrXdUDCac__array == null
        ? []
        : _2MxnRRLq9iPzx5CFq2NPrXdUDCac__array.length === 1 && \\"@list\\" in _2MxnRRLq9iPzx5CFq2NPrXdUDCac__array[0]
        ? _2MxnRRLq9iPzx5CFq2NPrXdUDCac__array[0][\\"@list\\"]
        : _2MxnRRLq9iPzx5CFq2NPrXdUDCac__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _2MxnRRLq9iPzx5CFq2NPrXdUDCac.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _2MxnRRLq9iPzx5CFq2NPrXdUDCac.push(await Collection.fromJsonLd(
      v, options))
    }
    instance.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac = _2MxnRRLq9iPzx5CFq2NPrXdUDCac;
    const _3sG2Hdwn9qzKGu9mpYkqakAMUkH9: (Collection | URL)[] = [];

    const _3sG2Hdwn9qzKGu9mpYkqakAMUkH9__array = values[\\"https://www.w3.org/ns/activitystreams#streams\\"];
    for (
      const v of _3sG2Hdwn9qzKGu9mpYkqakAMUkH9__array == null
        ? []
        : _3sG2Hdwn9qzKGu9mpYkqakAMUkH9__array.length === 1 && \\"@list\\" in _3sG2Hdwn9qzKGu9mpYkqakAMUkH9__array[0]
        ? _3sG2Hdwn9qzKGu9mpYkqakAMUkH9__array[0][\\"@list\\"]
        : _3sG2Hdwn9qzKGu9mpYkqakAMUkH9__array
    ) {
      if (v == null) continue;
    
      if (typeof v === \\"object\\" && \\"@id\\" in v && !(\\"@type\\" in v)
          && globalThis.Object.keys(v).length === 1) {
        _3sG2Hdwn9qzKGu9mpYkqakAMUkH9.push(new URL(v[\\"@id\\"]));
        continue;
      }
      _3sG2Hdwn9qzKGu9mpYkqakAMUkH9.push(await Collection.fromJsonLd(
      v, options))
    }
    instance.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9 = _3sG2Hdwn9qzKGu9mpYkqakAMUkH9;
    const _sEoQwUbfk4hEfugzNQ2ZiDcLMkG: (Endpoints)[] = [];

    const _sEoQwUbfk4hEfugzNQ2ZiDcLMkG__array = values[\\"https://www.w3.org/ns/activitystreams#endpoints\\"];
    for (
      const v of _sEoQwUbfk4hEfugzNQ2ZiDcLMkG__array == null
        ? []
        : _sEoQwUbfk4hEfugzNQ2ZiDcLMkG__array.length === 1 && \\"@list\\" in _sEoQwUbfk4hEfugzNQ2ZiDcLMkG__array[0]
        ? _sEoQwUbfk4hEfugzNQ2ZiDcLMkG__array[0][\\"@list\\"]
        : _sEoQwUbfk4hEfugzNQ2ZiDcLMkG__array
    ) {
      if (v == null) continue;
    _sEoQwUbfk4hEfugzNQ2ZiDcLMkG.push(await Endpoints.fromJsonLd(
      v, options))
    }
    instance.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG = _sEoQwUbfk4hEfugzNQ2ZiDcLMkG;
    const _gAJzg1QDc4rcefFsUzGSYmyXvNH: (boolean)[] = [];

    const _gAJzg1QDc4rcefFsUzGSYmyXvNH__array = values[\\"http://joinmastodon.org/ns#discoverable\\"];
    for (
      const v of _gAJzg1QDc4rcefFsUzGSYmyXvNH__array == null
        ? []
        : _gAJzg1QDc4rcefFsUzGSYmyXvNH__array.length === 1 && \\"@list\\" in _gAJzg1QDc4rcefFsUzGSYmyXvNH__array[0]
        ? _gAJzg1QDc4rcefFsUzGSYmyXvNH__array[0][\\"@list\\"]
        : _gAJzg1QDc4rcefFsUzGSYmyXvNH__array
    ) {
      if (v == null) continue;
    _gAJzg1QDc4rcefFsUzGSYmyXvNH.push(v[\\"@value\\"])
    }
    instance.#_gAJzg1QDc4rcefFsUzGSYmyXvNH = _gAJzg1QDc4rcefFsUzGSYmyXvNH;
    const _2kGKkJtoFWg8c18PaVSqj9NKP4t7: (boolean)[] = [];

    const _2kGKkJtoFWg8c18PaVSqj9NKP4t7__array = values[\\"http://joinmastodon.org/ns#suspended\\"];
    for (
      const v of _2kGKkJtoFWg8c18PaVSqj9NKP4t7__array == null
        ? []
        : _2kGKkJtoFWg8c18PaVSqj9NKP4t7__array.length === 1 && \\"@list\\" in _2kGKkJtoFWg8c18PaVSqj9NKP4t7__array[0]
        ? _2kGKkJtoFWg8c18PaVSqj9NKP4t7__array[0][\\"@list\\"]
        : _2kGKkJtoFWg8c18PaVSqj9NKP4t7__array
    ) {
      if (v == null) continue;
    _2kGKkJtoFWg8c18PaVSqj9NKP4t7.push(v[\\"@value\\"])
    }
    instance.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7 = _2kGKkJtoFWg8c18PaVSqj9NKP4t7;
    const _79S8K4f5J9MWUgCxziRyUe6PTHZ: (boolean)[] = [];

    const _79S8K4f5J9MWUgCxziRyUe6PTHZ__array = values[\\"http://joinmastodon.org/ns#memorial\\"];
    for (
      const v of _79S8K4f5J9MWUgCxziRyUe6PTHZ__array == null
        ? []
        : _79S8K4f5J9MWUgCxziRyUe6PTHZ__array.length === 1 && \\"@list\\" in _79S8K4f5J9MWUgCxziRyUe6PTHZ__array[0]
        ? _79S8K4f5J9MWUgCxziRyUe6PTHZ__array[0][\\"@list\\"]
        : _79S8K4f5J9MWUgCxziRyUe6PTHZ__array
    ) {
      if (v == null) continue;
    _79S8K4f5J9MWUgCxziRyUe6PTHZ.push(v[\\"@value\\"])
    }
    instance.#_79S8K4f5J9MWUgCxziRyUe6PTHZ = _79S8K4f5J9MWUgCxziRyUe6PTHZ;
    const _2diCorzqPGQQqftp6e4SrCEwEnyk: (boolean)[] = [];

    const _2diCorzqPGQQqftp6e4SrCEwEnyk__array = values[\\"http://joinmastodon.org/ns#indexable\\"];
    for (
      const v of _2diCorzqPGQQqftp6e4SrCEwEnyk__array == null
        ? []
        : _2diCorzqPGQQqftp6e4SrCEwEnyk__array.length === 1 && \\"@list\\" in _2diCorzqPGQQqftp6e4SrCEwEnyk__array[0]
        ? _2diCorzqPGQQqftp6e4SrCEwEnyk__array[0][\\"@list\\"]
        : _2diCorzqPGQQqftp6e4SrCEwEnyk__array
    ) {
      if (v == null) continue;
    _2diCorzqPGQQqftp6e4SrCEwEnyk.push(v[\\"@value\\"])
    }
    instance.#_2diCorzqPGQQqftp6e4SrCEwEnyk = _2diCorzqPGQQqftp6e4SrCEwEnyk;
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
      const _3isuDgRAKSntq9XdbjiNxjwyPZAf = this.#_3isuDgRAKSntq9XdbjiNxjwyPZAf
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3isuDgRAKSntq9XdbjiNxjwyPZAf.length == 1) {
        proxy.preferredUsername = _3isuDgRAKSntq9XdbjiNxjwyPZAf[0];
      }
      
      if (_3isuDgRAKSntq9XdbjiNxjwyPZAf.length > 1
          || !(\\"preferredUsername\\" in proxy)
          && _3isuDgRAKSntq9XdbjiNxjwyPZAf.length > 0) {
        proxy.preferredUsernames = _3isuDgRAKSntq9XdbjiNxjwyPZAf;
      }
      
      const _axq166E2eZADq34V4MYUc8KMZdC = this.#_axq166E2eZADq34V4MYUc8KMZdC
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_axq166E2eZADq34V4MYUc8KMZdC.length == 1) {
        proxy.publicKey = _axq166E2eZADq34V4MYUc8KMZdC[0];
      }
      
      if (_axq166E2eZADq34V4MYUc8KMZdC.length > 1
          || !(\\"publicKey\\" in proxy)
          && _axq166E2eZADq34V4MYUc8KMZdC.length > 0) {
        proxy.publicKeys = _axq166E2eZADq34V4MYUc8KMZdC;
      }
      
      const _4EHQFWZSz1k1d4LmPrQiMba2GbP3 = this.#_4EHQFWZSz1k1d4LmPrQiMba2GbP3
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_4EHQFWZSz1k1d4LmPrQiMba2GbP3.length == 1) {
        proxy.assertionMethod = _4EHQFWZSz1k1d4LmPrQiMba2GbP3[0];
      }
      
      if (_4EHQFWZSz1k1d4LmPrQiMba2GbP3.length > 1
          || !(\\"assertionMethod\\" in proxy)
          && _4EHQFWZSz1k1d4LmPrQiMba2GbP3.length > 0) {
        proxy.assertionMethods = _4EHQFWZSz1k1d4LmPrQiMba2GbP3;
      }
      
      const _36QNc9MxfkKf6h8sEUQSHnV9NZA = this.#_36QNc9MxfkKf6h8sEUQSHnV9NZA
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_36QNc9MxfkKf6h8sEUQSHnV9NZA.length == 1) {
        proxy.manuallyApprovesFollowers = _36QNc9MxfkKf6h8sEUQSHnV9NZA[0];
      }
      
      const _3ghX3VfZXXbLvhCRH7QJqpzLrXjB = this.#_3ghX3VfZXXbLvhCRH7QJqpzLrXjB
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3ghX3VfZXXbLvhCRH7QJqpzLrXjB.length == 1) {
        proxy.inbox = _3ghX3VfZXXbLvhCRH7QJqpzLrXjB[0];
      }
      
      const _41QwhqJouoLg3h8dRPKat21brynC = this.#_41QwhqJouoLg3h8dRPKat21brynC
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_41QwhqJouoLg3h8dRPKat21brynC.length == 1) {
        proxy.outbox = _41QwhqJouoLg3h8dRPKat21brynC[0];
      }
      
      const _3yAv8jymNfNuJUDuBzJ1NQhdbAee = this.#_3yAv8jymNfNuJUDuBzJ1NQhdbAee
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3yAv8jymNfNuJUDuBzJ1NQhdbAee.length == 1) {
        proxy.following = _3yAv8jymNfNuJUDuBzJ1NQhdbAee[0];
      }
      
      const _BBCTgfphhsFzpVfKTykGSpBNwoA = this.#_BBCTgfphhsFzpVfKTykGSpBNwoA
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_BBCTgfphhsFzpVfKTykGSpBNwoA.length == 1) {
        proxy.followers = _BBCTgfphhsFzpVfKTykGSpBNwoA[0];
      }
      
      const _3bgkPwJanyTCoVFM9ovRcus8tKkU = this.#_3bgkPwJanyTCoVFM9ovRcus8tKkU
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3bgkPwJanyTCoVFM9ovRcus8tKkU.length == 1) {
        proxy.liked = _3bgkPwJanyTCoVFM9ovRcus8tKkU[0];
      }
      
      const _4N1vBJzXDf8NbBumeECQMFvKetja = this.#_4N1vBJzXDf8NbBumeECQMFvKetja
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_4N1vBJzXDf8NbBumeECQMFvKetja.length == 1) {
        proxy.featured = _4N1vBJzXDf8NbBumeECQMFvKetja[0];
      }
      
      const _2MxnRRLq9iPzx5CFq2NPrXdUDCac = this.#_2MxnRRLq9iPzx5CFq2NPrXdUDCac
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2MxnRRLq9iPzx5CFq2NPrXdUDCac.length == 1) {
        proxy.featuredTags = _2MxnRRLq9iPzx5CFq2NPrXdUDCac[0];
      }
      
      const _3sG2Hdwn9qzKGu9mpYkqakAMUkH9 = this.#_3sG2Hdwn9qzKGu9mpYkqakAMUkH9
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_3sG2Hdwn9qzKGu9mpYkqakAMUkH9.length > 1
          || !(\\"stream\\" in proxy)
          && _3sG2Hdwn9qzKGu9mpYkqakAMUkH9.length > 0) {
        proxy.streams = _3sG2Hdwn9qzKGu9mpYkqakAMUkH9;
      }
      
      const _sEoQwUbfk4hEfugzNQ2ZiDcLMkG = this.#_sEoQwUbfk4hEfugzNQ2ZiDcLMkG
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_sEoQwUbfk4hEfugzNQ2ZiDcLMkG.length == 1) {
        proxy.endpoints = _sEoQwUbfk4hEfugzNQ2ZiDcLMkG[0];
      }
      
      const _gAJzg1QDc4rcefFsUzGSYmyXvNH = this.#_gAJzg1QDc4rcefFsUzGSYmyXvNH
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_gAJzg1QDc4rcefFsUzGSYmyXvNH.length == 1) {
        proxy.discoverable = _gAJzg1QDc4rcefFsUzGSYmyXvNH[0];
      }
      
      const _2kGKkJtoFWg8c18PaVSqj9NKP4t7 = this.#_2kGKkJtoFWg8c18PaVSqj9NKP4t7
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2kGKkJtoFWg8c18PaVSqj9NKP4t7.length == 1) {
        proxy.suspended = _2kGKkJtoFWg8c18PaVSqj9NKP4t7[0];
      }
      
      const _79S8K4f5J9MWUgCxziRyUe6PTHZ = this.#_79S8K4f5J9MWUgCxziRyUe6PTHZ
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_79S8K4f5J9MWUgCxziRyUe6PTHZ.length == 1) {
        proxy.memorial = _79S8K4f5J9MWUgCxziRyUe6PTHZ[0];
      }
      
      const _2diCorzqPGQQqftp6e4SrCEwEnyk = this.#_2diCorzqPGQQqftp6e4SrCEwEnyk
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_2diCorzqPGQQqftp6e4SrCEwEnyk.length == 1) {
        proxy.indexable = _2diCorzqPGQQqftp6e4SrCEwEnyk[0];
      }
      
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Service \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Service \\" + inspect(proxy, options);
  }
  }

/** A \`Tombstone\` represents a content object that has been deleted.
 * It can be used in {@link Collection}s to signify that there used to be
 * an object at this position, but it has been deleted.
 * 
 */
export class Tombstone extends Object {

    /**
     * The type URI of {@link Tombstone}: \`https://www.w3.org/ns/activitystreams#Tombstone\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Tombstone\\");
    }
  #_8g8g4LiVMhFTXskuDEqx4ascxUr: (Temporal.Instant)[] = [];

  /**
   * Constructs a new instance of Tombstone with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];deleted?: Temporal.Instant | null;}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });
        if (\\"deleted\\" in values &&             values.deleted != null) {
          if (values.deleted instanceof Temporal.Instant) {
            // @ts-ignore: type is checked above.
            this.#_8g8g4LiVMhFTXskuDEqx4ascxUr = [values.deleted];
          } else {
            throw new TypeError(
              \\"The deleted must be of type \\" +
              \\"Temporal.Instant\\" + \\".\\",
            );
          }
        }
      }

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];deleted?: Temporal.Instant | null;}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Tombstone {
  const clone = super.clone(values, options) as unknown as Tombstone;clone.#_8g8g4LiVMhFTXskuDEqx4ascxUr = this.#_8g8g4LiVMhFTXskuDEqx4ascxUr;
        if (\\"deleted\\" in values &&             values.deleted != null) {
          if (values.deleted instanceof Temporal.Instant) {
            // @ts-ignore: type is checked above.
            clone.#_8g8g4LiVMhFTXskuDEqx4ascxUr = [values.deleted];
          } else {
            throw new TypeError(
              \\"The deleted must be of type \\" +
              \\"Temporal.Instant\\" + \\".\\",
            );
          }
        }
      
    return clone;
  }
  
/** On a \`Tombstone\` object, the \`deleted\` property is a timestamp for when
 * the object was deleted.
 * 
 */
get deleted(): (Temporal.Instant | null) {
        if (this.#_8g8g4LiVMhFTXskuDEqx4ascxUr.length < 1) return null;
        return this.#_8g8g4LiVMhFTXskuDEqx4ascxUr[0];
      }
      
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    array = [];
    for (const v of this.#_8g8g4LiVMhFTXskuDEqx4ascxUr) {
      const element = (
    {
        \\"@type\\": \\"http://www.w3.org/2001/XMLSchema#dateTime\\",
        \\"@value\\": v.toString(),
      }
      );
    array.push(element);;
    }
    if (array.length > 0) {
      values[\\"https://www.w3.org/ns/activitystreams#deleted\\"] = (
    array
      );
    }
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Tombstone\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\"],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Tombstone> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Tombstone\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Tombstone)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    const _8g8g4LiVMhFTXskuDEqx4ascxUr: (Temporal.Instant)[] = [];

    const _8g8g4LiVMhFTXskuDEqx4ascxUr__array = values[\\"https://www.w3.org/ns/activitystreams#deleted\\"];
    for (
      const v of _8g8g4LiVMhFTXskuDEqx4ascxUr__array == null
        ? []
        : _8g8g4LiVMhFTXskuDEqx4ascxUr__array.length === 1 && \\"@list\\" in _8g8g4LiVMhFTXskuDEqx4ascxUr__array[0]
        ? _8g8g4LiVMhFTXskuDEqx4ascxUr__array[0][\\"@list\\"]
        : _8g8g4LiVMhFTXskuDEqx4ascxUr__array
    ) {
      if (v == null) continue;
    _8g8g4LiVMhFTXskuDEqx4ascxUr.push(Temporal.Instant.from(v[\\"@value\\"]))
    }
    instance.#_8g8g4LiVMhFTXskuDEqx4ascxUr = _8g8g4LiVMhFTXskuDEqx4ascxUr;
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
      const _8g8g4LiVMhFTXskuDEqx4ascxUr = this.#_8g8g4LiVMhFTXskuDEqx4ascxUr
        // deno-lint-ignore no-explicit-any
        .map((v: any) => v instanceof URL
          ? {
              [Symbol.for(\\"Deno.customInspect\\")]: (
                inspect: typeof Deno.inspect,
                options: Deno.InspectOptions,
              ): string => \\"URL \\" + inspect(v.href, options),
              [Symbol.for(\\"nodejs.util.inspect.custom\\")]: (
                _depth: number,
                options: unknown,
                inspect: (value: unknown, options: unknown) => string,
              ): string => \\"URL \\" + inspect(v.href, options),
            }
          : v);
    
      if (_8g8g4LiVMhFTXskuDEqx4ascxUr.length == 1) {
        proxy.deleted = _8g8g4LiVMhFTXskuDEqx4ascxUr[0];
      }
      
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Tombstone \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Tombstone \\" + inspect(proxy, options);
  }
  }

/** Indicates that the \`actor\` is undoing the \`object\`.  In most cases,
 * the \`object\` will be an {@link Activity} describing some previously performed
 * action (for instance, a person may have previously \\"liked\\" an article but,
 * for whatever reason, might choose to undo that like at some later point in
 * time).
 * 
 * The \`target\` and \`origin\` typically have no defined meaning.
 * 
 */
export class Undo extends Activity {

    /**
     * The type URI of {@link Undo}: \`https://www.w3.org/ns/activitystreams#Undo\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Undo\\");
    }
  
  /**
   * Constructs a new instance of Undo with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });}

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Undo {
  const clone = super.clone(values, options) as unknown as Undo;
    return clone;
  }
  
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Undo\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\"],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Undo> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Undo\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Undo)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Undo \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Undo \\" + inspect(proxy, options);
  }
  }

/** Indicates that the \`actor\` has updated the \`object\`.  Note, however,
 * that this vocabulary does not define a mechanism for describing the actual
 * set of modifications made to \`object\`.
 * 
 * The \`target\` and \`origin\` typically have no defined meaning.
 * 
 */
export class Update extends Activity {

    /**
     * The type URI of {@link Update}: \`https://www.w3.org/ns/activitystreams#Update\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Update\\");
    }
  
  /**
   * Constructs a new instance of Update with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });}

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];actor?: Application | Group | Organization | Person | Service | URL | null;
actors?: (Application | Group | Organization | Person | Service | URL)[];object?: Object | URL | null;
objects?: (Object | URL)[];target?: Object | URL | null;
targets?: (Object | URL)[];result?: Object | URL | null;
results?: (Object | URL)[];origin?: Object | URL | null;
origins?: (Object | URL)[];instrument?: Object | URL | null;
instruments?: (Object | URL)[];}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Update {
  const clone = super.clone(values, options) as unknown as Update;
    return clone;
  }
  
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Update\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\",{\\"toot\\":\\"http://joinmastodon.org/ns#\\",\\"sensitive\\":\\"as:sensitive\\",\\"Emoji\\":\\"toot:Emoji\\",\\"Hashtag\\":\\"as:Hashtag\\"}],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Update> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Update\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Update)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Update \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Update \\" + inspect(proxy, options);
  }
  }

/** Represents a video document of any kind.
 */
export class Video extends Document {

    /**
     * The type URI of {@link Video}: \`https://www.w3.org/ns/activitystreams#Video\`.
     */
    static get typeId(): URL {
      return new URL(\\"https://www.w3.org/ns/activitystreams#Video\\");
    }
  
  /**
   * Constructs a new instance of Video with the given values.
   * @param values The values to initialize the instance with.
   * @param options The options to use for initialization.
   */
  constructor(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];width?: number | null;height?: number | null;}
,
    {
      documentLoader,
      contextLoader,
    }: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ) {
  super(values, { documentLoader, contextLoader });}

  /**
   * Clones this instance, optionally updating it with the given values.
   * @param values The values to update the clone with.
   * @options The options to use for cloning.
   * @returns The cloned instance.
   */
  clone(
    values:
  {
id?: URL | null;
attachments?: (Object | Link | PropertyValue | URL)[];attribution?: Application | Group | Organization | Person | Service | URL | null;
attributions?: (Application | Group | Organization | Person | Service | URL)[];audience?: Object | URL | null;
audiences?: (Object | URL)[];content?: string | LanguageString | null;
contents?: ((string | LanguageString))[];contexts?: (Object | Link | URL)[];name?: string | LanguageString | null;
names?: ((string | LanguageString))[];endTime?: Temporal.Instant | null;generators?: (Object | Link | URL)[];icon?: Image | URL | null;
icons?: (Image | URL)[];image?: Image | URL | null;
images?: (Image | URL)[];replyTarget?: Object | Link | URL | null;
replyTargets?: (Object | Link | URL)[];location?: Object | Link | URL | null;
locations?: (Object | Link | URL)[];preview?: Link | Object | URL | null;
previews?: (Link | Object | URL)[];published?: Temporal.Instant | null;replies?: Collection | URL | null;startTime?: Temporal.Instant | null;summary?: string | LanguageString | null;
summaries?: ((string | LanguageString))[];tags?: (Object | Link | URL)[];updated?: Temporal.Instant | null;url?: URL | Link | null;
urls?: ((URL | Link))[];to?: Object | URL | null;
tos?: (Object | URL)[];bto?: Object | URL | null;
btos?: (Object | URL)[];cc?: Object | URL | null;
ccs?: (Object | URL)[];bcc?: Object | URL | null;
bccs?: (Object | URL)[];mediaType?: string | null;duration?: Temporal.Duration | null;sensitive?: boolean | null;proof?: DataIntegrityProof | URL | null;
proofs?: (DataIntegrityProof | URL)[];width?: number | null;height?: number | null;}

    = {},
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {}
  ): Video {
  const clone = super.clone(values, options) as unknown as Video;
    return clone;
  }
  
  /**
   * Converts this object to a JSON-LD structure.
   * @returns The JSON-LD representation of this object.
   */
  async toJsonLd(options: {
    expand?: boolean,
    contextLoader?: DocumentLoader,
    context?: string | Record<string, string> | (string | Record<string, string>)[],
  } = {}): Promise<unknown> {
    options = {
      ...options,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-unused-vars prefer-const
    let array: unknown[];
  
    const baseValues = await super.toJsonLd({
      ...options,
      expand: true,
    }) as unknown[];
    const values = baseValues[0] as Record<
      string,
      unknown[] | { \\"@list\\": unknown[] } | string
    >;
    
    values[\\"@type\\"] = [\\"https://www.w3.org/ns/activitystreams#Video\\"];
    if (this.id) values[\\"@id\\"] = this.id.href;
    if (options.expand) {
      return await jsonld.expand(
        values,
        { documentLoader: options.contextLoader },
      );
    }
    return await jsonld.compact(
      values,
      options.context ?? [\\"https://www.w3.org/ns/activitystreams\\",\\"https://w3id.org/security/data-integrity/v1\\"],
      { documentLoader: options.contextLoader },
    );
  }
  
  /**
   * Converts a JSON-LD structure to an object of this type.
   * @param json The JSON-LD structure to convert.
   * @returns The object of this type.
   * @throws {TypeError} If the given \`json\` is invalid.
   */
  static async fromJsonLd(
    json: unknown,
    options: {
      documentLoader?: DocumentLoader,
      contextLoader?: DocumentLoader,
    } = {},
  ): Promise<Video> {
    if (typeof json === \\"undefined\\") {
      throw new TypeError(\\"Invalid JSON-LD: undefined.\\");
    }
    else if (json === null) throw new TypeError(\\"Invalid JSON-LD: null.\\");
    options = {
      ...options,
      documentLoader: options.documentLoader ?? fetchDocumentLoader,
      contextLoader: options.contextLoader ?? fetchDocumentLoader,
    };
    // deno-lint-ignore no-explicit-any
    let values: Record<string, any[]> & { \\"@id\\"?: string };
    if (globalThis.Object.keys(json).length == 0) {
      values = {};
    } else {
      const expanded = await jsonld.expand(json, {
        documentLoader: options.contextLoader,
        keepFreeFloatingNodes: true,
      });
      values =
        // deno-lint-ignore no-explicit-any
        (expanded[0] ?? {}) as (Record<string, any[]> & { \\"@id\\"?: string });
    }
  if (\\"@type\\" in values) {

    if (!values[\\"@type\\"].includes(\\"https://www.w3.org/ns/activitystreams#Video\\")) {
      throw new TypeError(\\"Invalid type: \\" + values[\\"@type\\"]);
    }
  }
  
    const instance = await super.fromJsonLd(values, options);
    if (!(instance instanceof Video)) {
      throw new TypeError(\\"Unexpected type: \\" + instance.constructor.name);
    }
    
    return instance;
  }
  
  protected _getCustomInspectProxy(): Record<string, unknown> {
  const proxy: Record<string, unknown> = super._getCustomInspectProxy();
    return proxy;
  }

  [Symbol.for(\\"Deno.customInspect\\")](
    inspect: typeof Deno.inspect,
    options: Deno.InspectOptions,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Video \\" + inspect(proxy, options);
  }

  [Symbol.for(\\"nodejs.util.inspect.custom\\")](
    _depth: number,
    options: unknown,
    inspect: (value: unknown, options: unknown) => string,
  ): string {
    const proxy = this._getCustomInspectProxy();
    return \\"Video \\" + inspect(proxy, options);
  }
  }

"
`;
