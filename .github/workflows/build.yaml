name: build
on: [push, pull_request]

jobs:
  test:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write
    steps:
    - uses: actions/checkout@v4
    - uses: denoland/setup-deno@v2
      with:
        deno-version: v2.x
    - run: deno task cache
      working-directory: ${{ github.workspace }}/fedify/
    - run: deno task test --coverage=.cov --junit-path=.test-report.xml
      env:
        RUST_BACKTRACE: ${{ runner.debug }}
        LOG: ${{ runner.debug && 'always' || '' }}
      working-directory: ${{ github.workspace }}/fedify/
    - uses: dorny/test-reporter@v2
      if: success() || failure()
      with:
        name: "Test Results (${{ matrix.os }})"
        path: fedify/.test-report.xml
        reporter: jest-junit
      continue-on-error: true
    - if: '!cancelled()'
      uses: codecov/test-results-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: fedify/.test-report.xml
    - run: deno coverage --lcov .cov > .cov.lcov
      working-directory: ${{ github.workspace }}/fedify/
      continue-on-error: true
    - uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: fedify/.cov.lcov
      continue-on-error: true
    - run: "true"

  test-node:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - uses: denoland/setup-deno@v2
      with:
        deno-version: v2.x
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - uses: pnpm/action-setup@v4
      with:
        version: 10
    - run: deno task test:node
      working-directory: ${{ github.workspace }}/fedify/

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: denoland/setup-deno@v2
      with:
        deno-version: v2.x
    - run: deno task hooks:pre-commit

  release-test:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - uses: actions/checkout@v4
    - uses: denoland/setup-deno@v2
      with:
        deno-version: v2.x
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - uses: pnpm/action-setup@v4
      with:
        version: 10
    - run: '[[ "$(jq -r .version deno.json)" = "$(jq -r .version package.json)" ]]'
      working-directory: ${{ github.workspace }}/fedify/
    - run: deno task publish --dry-run
      working-directory: ${{ github.workspace }}/fedify/
    - run: deno task npm
      working-directory: ${{ github.workspace }}/fedify/
    - run: npm publish --dry-run fedify-fedify-*.tgz
      working-directory: ${{ github.workspace }}/fedify/
      env:
        DNT_SKIP_TEST: "true"
    - run: deno task publish-dry-run
      working-directory: ${{ github.workspace }}/cli/

  publish:
    needs: [test, test-node, lint, release-test]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
    - uses: actions/checkout@v4
    - uses: denoland/setup-deno@v2
      with:
        deno-version: v2.x
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - uses: pnpm/action-setup@v4
      with:
        version: 10
    - if: github.ref_type == 'branch'
      run: |
        jq \
          --arg build "$GITHUB_RUN_NUMBER" \
          --arg commit "${GITHUB_SHA::8}" \
          '.version = .version + "-dev." + $build + "+" + $commit' \
          deno.json > deno.json.tmp
        mv deno.json.tmp deno.json
      working-directory: ${{ github.workspace }}/fedify/
    - if: github.ref_type == 'tag'
      run: |
        set -ex
        [[ "$(jq -r .version deno.json)" = "$GITHUB_REF_NAME" ]]
        ! grep -i "to be released" CHANGES.md
      working-directory: ${{ github.workspace }}/fedify/
    # Don't know why, but the .gitignore list is not overridden by include list
    # in deno.json:
    - run: rm vocab/.gitignore
      working-directory: ${{ github.workspace }}/fedify/
    - run: deno task npm
      working-directory: ${{ github.workspace }}/fedify/
    - run: deno task pack
      working-directory: ${{ github.workspace }}/cli/
    - run: 'deno task npm "$(jq -r .version deno.json)"'
      working-directory: ${{ github.workspace }}/cli/
    - id: extract-changelog
      uses: dahlia/submark@5a5ff0a58382fb812616a5801402f5aef00f90ce
      with:
        input-file: CHANGES.md
        heading-level: 2
        heading-title-text: version ${{ github.ref_name }}
        ignore-case: true
        omit-heading: true
    - run: 'cat "$CHANGES_FILE"'
      env:
        CHANGES_FILE: ${{ steps.extract-changelog.outputs.output-file }}
    - uses: actions/upload-artifact@v4
      with:
        name: dist
        path: |
          fedify/fedify-fedify-*.tgz
          cli/fedify-cli-*
    - if: github.event_name == 'push' && github.ref_type == 'tag'
      uses: softprops/action-gh-release@v1
      with:
        body_path: ${{ steps.extract-changelog.outputs.output-file }}
        name: Fedify ${{ github.ref_name }}
        files: |
          fedify/fedify-fedify-*.tgz
          cli/fedify-cli-*
        generate_release_notes: false
    - if: |
        github.event_name == 'push' &&
        github.ref_type == 'tag' || github.ref == 'refs/heads/main'
      run: deno task publish --allow-dirty
      working-directory: ${{ github.workspace }}/fedify/
    - if: |
        github.event_name == 'push' &&
        github.ref_type == 'tag' || github.ref == 'refs/heads/main'
      run: deno task publish --allow-dirty
      working-directory: ${{ github.workspace }}/cli/
    - if: |
        github.event_name == 'push' &&
        github.ref_type == 'tag' || github.ref == 'refs/heads/main'
      run: |
        set -ex
        npm config set //registry.npmjs.org/:_authToken "$NPM_AUTH_TOKEN"
        if [[ "$GITHUB_REF_TYPE" = "tag" ]]; then
          npm publish --provenance --access public fedify-fedify-*.tgz
        else
          npm publish --provenance --access public --tag dev fedify-fedify-*.tgz
        fi
      env:
        NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      working-directory: ${{ github.workspace }}/fedify/
    - if: github.event_name == 'push' && github.ref_type == 'tag'
      run: |
        set -ex
        npm config set //registry.npmjs.org/:_authToken "$NPM_AUTH_TOKEN"
        npm publish --provenance --access public fedify-cli-*.tgz
      env:
        NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      working-directory: ${{ github.workspace }}/cli/

  publish-examples-blog:
    if: github.event_name == 'push'
    needs: [test, lint]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - uses: actions/checkout@v4
    - uses: denoland/setup-deno@v2
      with:
        deno-version: v2.x
    - run: deno task codegen
      working-directory: ${{ github.workspace }}/fedify/
    - uses: denoland/deployctl@v1
      with:
        project: fedify-blog
        entrypoint: ./examples/blog/main.ts
        root: .

  publish-docs:
    if: github.event_name == 'push'
    needs: [publish]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      pages: write
      deployments: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - uses: actions/checkout@v4
    - uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
    - run: |
        set -ex
        bun install
        if [[ "$GITHUB_EVENT_NAME" = "push" && "$GITHUB_REF_TYPE" = "tag" ]]; then
          bun add -Df --no-cache "@fedify/fedify@$GITHUB_REF_NAME"
          EXTRA_NAV_TEXT=Unstable \
          EXTRA_NAV_LINK="$UNSTABLE_DOCS_URL" \
          SITEMAP_HOSTNAME="$STABLE_DOCS_URL" \
          JSR_REF_VERSION=stable \
          bun run build
        else
          bun add -Df --no-cache @fedify/fedify@dev
          EXTRA_NAV_TEXT=Stable \
          EXTRA_NAV_LINK="$STABLE_DOCS_URL" \
          SITEMAP_HOSTNAME="$UNSTABLE_DOCS_URL" \
          JSR_REF_VERSION=unstable \
          bun run build
        fi
      env:
        PLAUSIBLE_DOMAIN: ${{ secrets.PLAUSIBLE_DOMAIN }}
        STABLE_DOCS_URL: ${{ vars.STABLE_DOCS_URL }}
        UNSTABLE_DOCS_URL: ${{ vars.UNSTABLE_DOCS_URL }}
      working-directory: ${{ github.workspace }}/docs/
    - uses: actions/upload-pages-artifact@v3
      with:
        path: docs/.vitepress/dist
    - id: deployment
      if: github.event_name == 'push' && github.ref_type == 'tag'
      uses: actions/deploy-pages@v4
    - if: github.event_name == 'pull_request' || github.ref_type == 'branch'
      uses: nwtgck/actions-netlify@v3.0
      with:
        publish-dir: docs/.vitepress/dist
        production-branch: main
        github-token: ${{ github.token }}
        enable-pull-request-comment: false
        enable-commit-comment: false
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      timeout-minutes: 2

# cSpell: ignore submark softprops npmjs deployctl nwtgck
